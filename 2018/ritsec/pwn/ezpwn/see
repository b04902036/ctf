
ezpwn:     file format elf64-x86-64


Disassembly of section .interp:

00000000000002a8 <.interp>:
 2a8:	2f                   	(bad)  
 2a9:	6c                   	ins    BYTE PTR es:[rdi],dx
 2aa:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 2b1:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 2b6:	78 2d                	js     2e5 <_init-0xd1b>
 2b8:	78 38                	js     2f2 <_init-0xd0e>
 2ba:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 2c0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2c1:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

00000000000002c4 <.note.ABI-tag>:
 2c4:	04 00                	add    al,0x0
 2c6:	00 00                	add    BYTE PTR [rax],al
 2c8:	10 00                	adc    BYTE PTR [rax],al
 2ca:	00 00                	add    BYTE PTR [rax],al
 2cc:	01 00                	add    DWORD PTR [rax],eax
 2ce:	00 00                	add    BYTE PTR [rax],al
 2d0:	47                   	rex.RXB
 2d1:	4e 55                	rex.WRX push rbp
 2d3:	00 00                	add    BYTE PTR [rax],al
 2d5:	00 00                	add    BYTE PTR [rax],al
 2d7:	00 03                	add    BYTE PTR [rbx],al
 2d9:	00 00                	add    BYTE PTR [rax],al
 2db:	00 02                	add    BYTE PTR [rdx],al
 2dd:	00 00                	add    BYTE PTR [rax],al
 2df:	00 00                	add    BYTE PTR [rax],al
 2e1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000002e4 <.note.gnu.build-id>:
 2e4:	04 00                	add    al,0x0
 2e6:	00 00                	add    BYTE PTR [rax],al
 2e8:	14 00                	adc    al,0x0
 2ea:	00 00                	add    BYTE PTR [rax],al
 2ec:	03 00                	add    eax,DWORD PTR [rax]
 2ee:	00 00                	add    BYTE PTR [rax],al
 2f0:	47                   	rex.RXB
 2f1:	4e 55                	rex.WRX push rbp
 2f3:	00 70 db             	add    BYTE PTR [rax-0x25],dh
 2f6:	9c                   	pushf  
 2f7:	47 8c bb a5 3e bf b9 	rex.RXB mov WORD PTR [r11-0x4640c15b],?
 2fe:	c2 7c 17             	ret    0x177c
 301:	5b                   	pop    rbx
 302:	b0 6d                	mov    al,0x6d
 304:	89 43 31             	mov    DWORD PTR [rbx+0x31],eax
 307:	ec                   	in     al,dx

Disassembly of section .gnu.hash:

0000000000000308 <.gnu.hash>:
 308:	02 00                	add    al,BYTE PTR [rax]
 30a:	00 00                	add    BYTE PTR [rax],al
 30c:	0c 00                	or     al,0x0
 30e:	00 00                	add    BYTE PTR [rax],al
 310:	01 00                	add    DWORD PTR [rax],eax
 312:	00 00                	add    BYTE PTR [rax],al
 314:	06                   	(bad)  
 315:	00 00                	add    BYTE PTR [rax],al
 317:	00 00                	add    BYTE PTR [rax],al
 319:	00 81 00 00 00 00    	add    BYTE PTR [rcx+0x0],al
 31f:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
 322:	00 00                	add    BYTE PTR [rax],al
 324:	00 00                	add    BYTE PTR [rax],al
 326:	00 00                	add    BYTE PTR [rax],al
 328:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 32b:	6d                   	ins    DWORD PTR es:[rdi],dx

Disassembly of section .dynsym:

0000000000000330 <.dynsym>:
	...
 348:	1b 00                	sbb    eax,DWORD PTR [rax]
 34a:	00 00                	add    BYTE PTR [rax],al
 34c:	12 00                	adc    al,BYTE PTR [rax]
	...
 35e:	00 00                	add    BYTE PTR [rax],al
 360:	64 00 00             	add    BYTE PTR fs:[rax],al
 363:	00 20                	add    BYTE PTR [rax],ah
	...
 375:	00 00                	add    BYTE PTR [rax],al
 377:	00 16                	add    BYTE PTR [rsi],dl
 379:	00 00                	add    BYTE PTR [rax],al
 37b:	00 12                	add    BYTE PTR [rdx],dl
	...
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 30                	add    BYTE PTR [rax],dh
 391:	00 00                	add    BYTE PTR [rax],al
 393:	00 12                	add    BYTE PTR [rdx],dl
	...
 3a5:	00 00                	add    BYTE PTR [rax],al
 3a7:	00 23                	add    BYTE PTR [rbx],ah
 3a9:	00 00                	add    BYTE PTR [rax],al
 3ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 3bd:	00 00                	add    BYTE PTR [rax],al
 3bf:	00 2a                	add    BYTE PTR [rdx],ch
 3c1:	00 00                	add    BYTE PTR [rax],al
 3c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 3d5:	00 00                	add    BYTE PTR [rax],al
 3d7:	00 46 00             	add    BYTE PTR [rsi+0x0],al
 3da:	00 00                	add    BYTE PTR [rax],al
 3dc:	12 00                	adc    al,BYTE PTR [rax]
	...
 3ee:	00 00                	add    BYTE PTR [rax],al
 3f0:	80 00 00             	add    BYTE PTR [rax],0x0
 3f3:	00 20                	add    BYTE PTR [rax],ah
	...
 405:	00 00                	add    BYTE PTR [rax],al
 407:	00 0b                	add    BYTE PTR [rbx],cl
 409:	00 00                	add    BYTE PTR [rax],al
 40b:	00 12                	add    BYTE PTR [rdx],dl
	...
 41d:	00 00                	add    BYTE PTR [rax],al
 41f:	00 10                	add    BYTE PTR [rax],dl
 421:	00 00                	add    BYTE PTR [rax],al
 423:	00 12                	add    BYTE PTR [rdx],dl
	...
 435:	00 00                	add    BYTE PTR [rax],al
 437:	00 8f 00 00 00 20    	add    BYTE PTR [rdi+0x20000000],cl
	...
 44d:	00 00                	add    BYTE PTR [rax],al
 44f:	00 37                	add    BYTE PTR [rdi],dh
 451:	00 00                	add    BYTE PTR [rax],al
 453:	00 22                	add    BYTE PTR [rdx],ah
	...

Disassembly of section .dynstr:

0000000000000468 <.dynstr>:
 468:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 46c:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 46e:	73 6f                	jae    4df <_init-0xb21>
 470:	2e 36 00 67 65       	cs add BYTE PTR ss:[rdi+0x65],ah
 475:	74 73                	je     4ea <_init-0xb16>
 477:	00 66 6f             	add    BYTE PTR [rsi+0x6f],ah
 47a:	70 65                	jo     4e1 <_init-0xb1f>
 47c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 47d:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 480:	74 73                	je     4f5 <_init-0xb0b>
 482:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 485:	74 63                	je     4ea <_init-0xb16>
 487:	68 61 72 00 70       	push   0x70007261
 48c:	72 69                	jb     4f7 <_init-0xb09>
 48e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 48f:	74 66                	je     4f7 <_init-0xb09>
 491:	00 66 67             	add    BYTE PTR [rsi+0x67],ah
 494:	65 74 63             	gs je  4fa <_init-0xb06>
 497:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
 49a:	6c                   	ins    BYTE PTR es:[rdi],dx
 49b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 49c:	73 65                	jae    503 <_init-0xafd>
 49e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 4a1:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 4a4:	5f                   	pop    rdi
 4a5:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 4ab:	7a 65                	jp     512 <_init-0xaee>
 4ad:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 4b0:	6c                   	ins    BYTE PTR es:[rdi],dx
 4b1:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 4b8:	72 74                	jb     52e <_init-0xad2>
 4ba:	5f                   	pop    rdi
 4bb:	6d                   	ins    DWORD PTR es:[rdi],dx
 4bc:	61                   	(bad)  
 4bd:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [rsi+0x0],0x42494c47
 4c4:	43 5f                	rex.XB pop r15
 4c6:	32 2e                	xor    ch,BYTE PTR [rsi]
 4c8:	32 2e                	xor    ch,BYTE PTR [rsi]
 4ca:	35 00 5f 49 54       	xor    eax,0x54495f00
 4cf:	4d 5f                	rex.WRB pop r15
 4d1:	64 65 72 65          	fs gs jb 53a <_init-0xac6>
 4d5:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 4dc:	4d 
 4dd:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 4df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4e1:	65 54                	gs push rsp
 4e3:	61                   	(bad)  
 4e4:	62                   	(bad)  
 4e5:	6c                   	ins    BYTE PTR es:[rdi],dx
 4e6:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 4ea:	67 6d                	ins    DWORD PTR es:[edi],dx
 4ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4ed:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4ee:	5f                   	pop    rdi
 4ef:	73 74                	jae    565 <_init-0xa9b>
 4f1:	61                   	(bad)  
 4f2:	72 74                	jb     568 <_init-0xa98>
 4f4:	5f                   	pop    rdi
 4f5:	5f                   	pop    rdi
 4f6:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 4f9:	54                   	push   rsp
 4fa:	4d 5f                	rex.WRB pop r15
 4fc:	72 65                	jb     563 <_init-0xa9d>
 4fe:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 505:	4d 
 506:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 508:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 509:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 50a:	65 54                	gs push rsp
 50c:	61                   	(bad)  
 50d:	62                   	.byte 0x62
 50e:	6c                   	ins    BYTE PTR es:[rdi],dx
 50f:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000512 <.gnu.version>:
 512:	00 00                	add    BYTE PTR [rax],al
 514:	02 00                	add    al,BYTE PTR [rax]
 516:	00 00                	add    BYTE PTR [rax],al
 518:	02 00                	add    al,BYTE PTR [rax]
 51a:	02 00                	add    al,BYTE PTR [rax]
 51c:	02 00                	add    al,BYTE PTR [rax]
 51e:	02 00                	add    al,BYTE PTR [rax]
 520:	02 00                	add    al,BYTE PTR [rax]
 522:	00 00                	add    BYTE PTR [rax],al
 524:	02 00                	add    al,BYTE PTR [rax]
 526:	02 00                	add    al,BYTE PTR [rax]
 528:	00 00                	add    BYTE PTR [rax],al
 52a:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .gnu.version_r:

0000000000000530 <.gnu.version_r>:
 530:	01 00                	add    DWORD PTR [rax],eax
 532:	01 00                	add    DWORD PTR [rax],eax
 534:	01 00                	add    DWORD PTR [rax],eax
 536:	00 00                	add    BYTE PTR [rax],al
 538:	10 00                	adc    BYTE PTR [rax],al
 53a:	00 00                	add    BYTE PTR [rax],al
 53c:	00 00                	add    BYTE PTR [rax],al
 53e:	00 00                	add    BYTE PTR [rax],al
 540:	75 1a                	jne    55c <_init-0xaa4>
 542:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 548:	58                   	pop    rax
 549:	00 00                	add    BYTE PTR [rax],al
 54b:	00 00                	add    BYTE PTR [rax],al
 54d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000550 <.rela.dyn>:
 550:	e8 3d 00 00 00       	call   592 <_init-0xa6e>
 555:	00 00                	add    BYTE PTR [rax],al
 557:	00 08                	add    BYTE PTR [rax],cl
 559:	00 00                	add    BYTE PTR [rax],al
 55b:	00 00                	add    BYTE PTR [rax],al
 55d:	00 00                	add    BYTE PTR [rax],al
 55f:	00 90 11 00 00 00    	add    BYTE PTR [rax+0x11],dl
 565:	00 00                	add    BYTE PTR [rax],al
 567:	00 f0                	add    al,dh
 569:	3d 00 00 00 00       	cmp    eax,0x0
 56e:	00 00                	add    BYTE PTR [rax],al
 570:	08 00                	or     BYTE PTR [rax],al
 572:	00 00                	add    BYTE PTR [rax],al
 574:	00 00                	add    BYTE PTR [rax],al
 576:	00 00                	add    BYTE PTR [rax],al
 578:	50                   	push   rax
 579:	11 00                	adc    DWORD PTR [rax],eax
 57b:	00 00                	add    BYTE PTR [rax],al
 57d:	00 00                	add    BYTE PTR [rax],al
 57f:	00 58 40             	add    BYTE PTR [rax+0x40],bl
 582:	00 00                	add    BYTE PTR [rax],al
 584:	00 00                	add    BYTE PTR [rax],al
 586:	00 00                	add    BYTE PTR [rax],al
 588:	08 00                	or     BYTE PTR [rax],al
 58a:	00 00                	add    BYTE PTR [rax],al
 58c:	00 00                	add    BYTE PTR [rax],al
 58e:	00 00                	add    BYTE PTR [rax],al
 590:	58                   	pop    rax
 591:	40 00 00             	add    BYTE PTR [rax],al
 594:	00 00                	add    BYTE PTR [rax],al
 596:	00 00                	add    BYTE PTR [rax],al
 598:	d8 3f                	fdivr  DWORD PTR [rdi]
 59a:	00 00                	add    BYTE PTR [rax],al
 59c:	00 00                	add    BYTE PTR [rax],al
 59e:	00 00                	add    BYTE PTR [rax],al
 5a0:	06                   	(bad)  
 5a1:	00 00                	add    BYTE PTR [rax],al
 5a3:	00 02                	add    BYTE PTR [rdx],al
	...
 5ad:	00 00                	add    BYTE PTR [rax],al
 5af:	00 e0                	add    al,ah
 5b1:	3f                   	(bad)  
 5b2:	00 00                	add    BYTE PTR [rax],al
 5b4:	00 00                	add    BYTE PTR [rax],al
 5b6:	00 00                	add    BYTE PTR [rax],al
 5b8:	06                   	(bad)  
 5b9:	00 00                	add    BYTE PTR [rax],al
 5bb:	00 07                	add    BYTE PTR [rdi],al
	...
 5c5:	00 00                	add    BYTE PTR [rax],al
 5c7:	00 e8                	add    al,ch
 5c9:	3f                   	(bad)  
 5ca:	00 00                	add    BYTE PTR [rax],al
 5cc:	00 00                	add    BYTE PTR [rax],al
 5ce:	00 00                	add    BYTE PTR [rax],al
 5d0:	06                   	(bad)  
 5d1:	00 00                	add    BYTE PTR [rax],al
 5d3:	00 08                	add    BYTE PTR [rax],cl
	...
 5dd:	00 00                	add    BYTE PTR [rax],al
 5df:	00 f0                	add    al,dh
 5e1:	3f                   	(bad)  
 5e2:	00 00                	add    BYTE PTR [rax],al
 5e4:	00 00                	add    BYTE PTR [rax],al
 5e6:	00 00                	add    BYTE PTR [rax],al
 5e8:	06                   	(bad)  
 5e9:	00 00                	add    BYTE PTR [rax],al
 5eb:	00 0b                	add    BYTE PTR [rbx],cl
	...
 5f5:	00 00                	add    BYTE PTR [rax],al
 5f7:	00 f8                	add    al,bh
 5f9:	3f                   	(bad)  
 5fa:	00 00                	add    BYTE PTR [rax],al
 5fc:	00 00                	add    BYTE PTR [rax],al
 5fe:	00 00                	add    BYTE PTR [rax],al
 600:	06                   	(bad)  
 601:	00 00                	add    BYTE PTR [rax],al
 603:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...

Disassembly of section .rela.plt:

0000000000000610 <.rela.plt>:
 610:	18 40 00             	sbb    BYTE PTR [rax+0x0],al
 613:	00 00                	add    BYTE PTR [rax],al
 615:	00 00                	add    BYTE PTR [rax],al
 617:	00 07                	add    BYTE PTR [rdi],al
 619:	00 00                	add    BYTE PTR [rax],al
 61b:	00 01                	add    BYTE PTR [rcx],al
	...
 625:	00 00                	add    BYTE PTR [rax],al
 627:	00 20                	add    BYTE PTR [rax],ah
 629:	40 00 00             	add    BYTE PTR [rax],al
 62c:	00 00                	add    BYTE PTR [rax],al
 62e:	00 00                	add    BYTE PTR [rax],al
 630:	07                   	(bad)  
 631:	00 00                	add    BYTE PTR [rax],al
 633:	00 03                	add    BYTE PTR [rbx],al
	...
 63d:	00 00                	add    BYTE PTR [rax],al
 63f:	00 28                	add    BYTE PTR [rax],ch
 641:	40 00 00             	add    BYTE PTR [rax],al
 644:	00 00                	add    BYTE PTR [rax],al
 646:	00 00                	add    BYTE PTR [rax],al
 648:	07                   	(bad)  
 649:	00 00                	add    BYTE PTR [rax],al
 64b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 656:	00 00                	add    BYTE PTR [rax],al
 658:	30 40 00             	xor    BYTE PTR [rax+0x0],al
 65b:	00 00                	add    BYTE PTR [rax],al
 65d:	00 00                	add    BYTE PTR [rax],al
 65f:	00 07                	add    BYTE PTR [rdi],al
 661:	00 00                	add    BYTE PTR [rax],al
 663:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 669 <_init-0x997>
 669:	00 00                	add    BYTE PTR [rax],al
 66b:	00 00                	add    BYTE PTR [rax],al
 66d:	00 00                	add    BYTE PTR [rax],al
 66f:	00 38                	add    BYTE PTR [rax],bh
 671:	40 00 00             	add    BYTE PTR [rax],al
 674:	00 00                	add    BYTE PTR [rax],al
 676:	00 00                	add    BYTE PTR [rax],al
 678:	07                   	(bad)  
 679:	00 00                	add    BYTE PTR [rax],al
 67b:	00 06                	add    BYTE PTR [rsi],al
	...
 685:	00 00                	add    BYTE PTR [rax],al
 687:	00 40 40             	add    BYTE PTR [rax+0x40],al
 68a:	00 00                	add    BYTE PTR [rax],al
 68c:	00 00                	add    BYTE PTR [rax],al
 68e:	00 00                	add    BYTE PTR [rax],al
 690:	07                   	(bad)  
 691:	00 00                	add    BYTE PTR [rax],al
 693:	00 09                	add    BYTE PTR [rcx],cl
	...
 69d:	00 00                	add    BYTE PTR [rax],al
 69f:	00 48 40             	add    BYTE PTR [rax+0x40],cl
 6a2:	00 00                	add    BYTE PTR [rax],al
 6a4:	00 00                	add    BYTE PTR [rax],al
 6a6:	00 00                	add    BYTE PTR [rax],al
 6a8:	07                   	(bad)  
 6a9:	00 00                	add    BYTE PTR [rax],al
 6ab:	00 0a                	add    BYTE PTR [rdx],cl
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    rsp,0x8
    1004:	48 8b 05 dd 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fdd]        # 3fe8 <_DYNAMIC+0x1f0>
    100b:	48 85 c0             	test   rax,rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	call   rax
    1012:	48 83 c4 08          	add    rsp,0x8
    1016:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <putchar@plt-0x10>:
    1020:	ff 35 e2 2f 00 00    	push   QWORD PTR [rip+0x2fe2]        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmp    QWORD PTR [rip+0x2fe4]        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001030 <putchar@plt>:
    1030:	ff 25 e2 2f 00 00    	jmp    QWORD PTR [rip+0x2fe2]        # 4018 <_GLOBAL_OFFSET_TABLE_+0x18>
    1036:	68 00 00 00 00       	push   0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <puts@plt>:
    1040:	ff 25 da 2f 00 00    	jmp    QWORD PTR [rip+0x2fda]        # 4020 <_GLOBAL_OFFSET_TABLE_+0x20>
    1046:	68 01 00 00 00       	push   0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <fclose@plt>:
    1050:	ff 25 d2 2f 00 00    	jmp    QWORD PTR [rip+0x2fd2]        # 4028 <_GLOBAL_OFFSET_TABLE_+0x28>
    1056:	68 02 00 00 00       	push   0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <printf@plt>:
    1060:	ff 25 ca 2f 00 00    	jmp    QWORD PTR [rip+0x2fca]        # 4030 <_GLOBAL_OFFSET_TABLE_+0x30>
    1066:	68 03 00 00 00       	push   0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <fgetc@plt>:
    1070:	ff 25 c2 2f 00 00    	jmp    QWORD PTR [rip+0x2fc2]        # 4038 <_GLOBAL_OFFSET_TABLE_+0x38>
    1076:	68 04 00 00 00       	push   0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <gets@plt>:
    1080:	ff 25 ba 2f 00 00    	jmp    QWORD PTR [rip+0x2fba]        # 4040 <_GLOBAL_OFFSET_TABLE_+0x40>
    1086:	68 05 00 00 00       	push   0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <fopen@plt>:
    1090:	ff 25 b2 2f 00 00    	jmp    QWORD PTR [rip+0x2fb2]        # 4048 <_GLOBAL_OFFSET_TABLE_+0x48>
    1096:	68 06 00 00 00       	push   0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00000000000010a0 <.plt.got>:
    10a0:	ff 25 52 2f 00 00    	jmp    QWORD PTR [rip+0x2f52]        # 3ff8 <_DYNAMIC+0x200>
    10a6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000010b0 <_start>:
    10b0:	31 ed                	xor    ebp,ebp
    10b2:	49 89 d1             	mov    r9,rdx
    10b5:	5e                   	pop    rsi
    10b6:	48 89 e2             	mov    rdx,rsp
    10b9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    10bd:	50                   	push   rax
    10be:	54                   	push   rsp
    10bf:	4c 8d 05 ea 01 00 00 	lea    r8,[rip+0x1ea]        # 12b0 <__libc_csu_fini>
    10c6:	48 8d 0d 73 01 00 00 	lea    rcx,[rip+0x173]        # 1240 <__libc_csu_init>
    10cd:	48 8d 3d c1 00 00 00 	lea    rdi,[rip+0xc1]        # 1195 <main>
    10d4:	ff 15 06 2f 00 00    	call   QWORD PTR [rip+0x2f06]        # 3fe0 <_DYNAMIC+0x1e8>
    10da:	f4                   	hlt    
    10db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010e0 <deregister_tm_clones>:
    10e0:	48 8d 3d 79 2f 00 00 	lea    rdi,[rip+0x2f79]        # 4060 <__TMC_END__>
    10e7:	48 8d 05 72 2f 00 00 	lea    rax,[rip+0x2f72]        # 4060 <__TMC_END__>
    10ee:	48 39 f8             	cmp    rax,rdi
    10f1:	74 15                	je     1108 <deregister_tm_clones+0x28>
    10f3:	48 8b 05 de 2e 00 00 	mov    rax,QWORD PTR [rip+0x2ede]        # 3fd8 <_DYNAMIC+0x1e0>
    10fa:	48 85 c0             	test   rax,rax
    10fd:	74 09                	je     1108 <deregister_tm_clones+0x28>
    10ff:	ff e0                	jmp    rax
    1101:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1108:	c3                   	ret    
    1109:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001110 <register_tm_clones>:
    1110:	48 8d 3d 49 2f 00 00 	lea    rdi,[rip+0x2f49]        # 4060 <__TMC_END__>
    1117:	48 8d 35 42 2f 00 00 	lea    rsi,[rip+0x2f42]        # 4060 <__TMC_END__>
    111e:	48 29 fe             	sub    rsi,rdi
    1121:	48 c1 fe 03          	sar    rsi,0x3
    1125:	48 89 f0             	mov    rax,rsi
    1128:	48 c1 e8 3f          	shr    rax,0x3f
    112c:	48 01 c6             	add    rsi,rax
    112f:	48 d1 fe             	sar    rsi,1
    1132:	74 14                	je     1148 <register_tm_clones+0x38>
    1134:	48 8b 05 b5 2e 00 00 	mov    rax,QWORD PTR [rip+0x2eb5]        # 3ff0 <_DYNAMIC+0x1f8>
    113b:	48 85 c0             	test   rax,rax
    113e:	74 08                	je     1148 <register_tm_clones+0x38>
    1140:	ff e0                	jmp    rax
    1142:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1148:	c3                   	ret    
    1149:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001150 <__do_global_dtors_aux>:
    1150:	80 3d 09 2f 00 00 00 	cmp    BYTE PTR [rip+0x2f09],0x0        # 4060 <__TMC_END__>
    1157:	75 2f                	jne    1188 <__do_global_dtors_aux+0x38>
    1159:	55                   	push   rbp
    115a:	48 83 3d 96 2e 00 00 	cmp    QWORD PTR [rip+0x2e96],0x0        # 3ff8 <_DYNAMIC+0x200>
    1161:	00 
    1162:	48 89 e5             	mov    rbp,rsp
    1165:	74 0c                	je     1173 <__do_global_dtors_aux+0x23>
    1167:	48 8b 3d ea 2e 00 00 	mov    rdi,QWORD PTR [rip+0x2eea]        # 4058 <__dso_handle>
    116e:	e8 2d ff ff ff       	call   10a0 <fopen@plt+0x10>
    1173:	e8 68 ff ff ff       	call   10e0 <deregister_tm_clones>
    1178:	c6 05 e1 2e 00 00 01 	mov    BYTE PTR [rip+0x2ee1],0x1        # 4060 <__TMC_END__>
    117f:	5d                   	pop    rbp
    1180:	c3                   	ret    
    1181:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1188:	c3                   	ret    
    1189:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001190 <frame_dummy>:
    1190:	e9 7b ff ff ff       	jmp    1110 <register_tm_clones>

0000000000001195 <main>:
    1195:	55                   	push   rbp
    1196:	48 89 e5             	mov    rbp,rsp
    1199:	48 83 ec 20          	sub    rsp,0x20
    119d:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
    11a4:	48 8d 3d 59 0e 00 00 	lea    rdi,[rip+0xe59]        # 2004 <_IO_stdin_used+0x4>
    11ab:	e8 90 fe ff ff       	call   1040 <puts@plt>
    11b0:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    11b4:	48 89 c7             	mov    rdi,rax
    11b7:	b8 00 00 00 00       	mov    eax,0x0
    11bc:	e8 bf fe ff ff       	call   1080 <gets@plt>
    11c1:	83 7d f8 01          	cmp    DWORD PTR [rbp-0x8],0x1
    11c5:	75 54                	jne    121b <main+0x86>
    11c7:	48 8d 35 50 0e 00 00 	lea    rsi,[rip+0xe50]        # 201e <_IO_stdin_used+0x1e>
    11ce:	48 8d 3d 4b 0e 00 00 	lea    rdi,[rip+0xe4b]        # 2020 <_IO_stdin_used+0x20>
    11d5:	e8 b6 fe ff ff       	call   1090 <fopen@plt>
    11da:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    11de:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    11e2:	48 89 c7             	mov    rdi,rax
    11e5:	e8 86 fe ff ff       	call   1070 <fgetc@plt>
    11ea:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    11ed:	eb 1a                	jmp    1209 <main+0x74>
    11ef:	0f be 45 ff          	movsx  eax,BYTE PTR [rbp-0x1]
    11f3:	89 c7                	mov    edi,eax
    11f5:	e8 36 fe ff ff       	call   1030 <putchar@plt>
    11fa:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    11fe:	48 89 c7             	mov    rdi,rax
    1201:	e8 6a fe ff ff       	call   1070 <fgetc@plt>
    1206:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    1209:	80 7d ff ff          	cmp    BYTE PTR [rbp-0x1],0xff
    120d:	75 e0                	jne    11ef <main+0x5a>
    120f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    1213:	48 89 c7             	mov    rdi,rax
    1216:	e8 35 fe ff ff       	call   1050 <fclose@plt>
    121b:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
    121e:	89 c6                	mov    esi,eax
    1220:	48 8d 3d 02 0e 00 00 	lea    rdi,[rip+0xe02]        # 2029 <_IO_stdin_used+0x29>
    1227:	b8 00 00 00 00       	mov    eax,0x0
    122c:	e8 2f fe ff ff       	call   1060 <printf@plt>
    1231:	b8 00 00 00 00       	mov    eax,0x0
    1236:	c9                   	leave  
    1237:	c3                   	ret    
    1238:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    123f:	00 

0000000000001240 <__libc_csu_init>:
    1240:	41 57                	push   r15
    1242:	41 56                	push   r14
    1244:	49 89 d7             	mov    r15,rdx
    1247:	41 55                	push   r13
    1249:	41 54                	push   r12
    124b:	4c 8d 25 96 2b 00 00 	lea    r12,[rip+0x2b96]        # 3de8 <__frame_dummy_init_array_entry>
    1252:	55                   	push   rbp
    1253:	48 8d 2d 96 2b 00 00 	lea    rbp,[rip+0x2b96]        # 3df0 <__init_array_end>
    125a:	53                   	push   rbx
    125b:	41 89 fd             	mov    r13d,edi
    125e:	49 89 f6             	mov    r14,rsi
    1261:	4c 29 e5             	sub    rbp,r12
    1264:	48 83 ec 08          	sub    rsp,0x8
    1268:	48 c1 fd 03          	sar    rbp,0x3
    126c:	e8 8f fd ff ff       	call   1000 <_init>
    1271:	48 85 ed             	test   rbp,rbp
    1274:	74 20                	je     1296 <__libc_csu_init+0x56>
    1276:	31 db                	xor    ebx,ebx
    1278:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    127f:	00 
    1280:	4c 89 fa             	mov    rdx,r15
    1283:	4c 89 f6             	mov    rsi,r14
    1286:	44 89 ef             	mov    edi,r13d
    1289:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
    128d:	48 83 c3 01          	add    rbx,0x1
    1291:	48 39 dd             	cmp    rbp,rbx
    1294:	75 ea                	jne    1280 <__libc_csu_init+0x40>
    1296:	48 83 c4 08          	add    rsp,0x8
    129a:	5b                   	pop    rbx
    129b:	5d                   	pop    rbp
    129c:	41 5c                	pop    r12
    129e:	41 5d                	pop    r13
    12a0:	41 5e                	pop    r14
    12a2:	41 5f                	pop    r15
    12a4:	c3                   	ret    
    12a5:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    12ac:	00 00 00 00 

00000000000012b0 <__libc_csu_fini>:
    12b0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000000012b4 <_fini>:
    12b4:	48 83 ec 08          	sub    rsp,0x8
    12b8:	48 83 c4 08          	add    rsp,0x8
    12bc:	c3                   	ret    

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    DWORD PTR [rax],eax
    2002:	02 00                	add    al,BYTE PTR [rax]
    2004:	50                   	push   rax
    2005:	6c                   	ins    BYTE PTR es:[rdi],dx
    2006:	65 61                	gs (bad) 
    2008:	73 65                	jae    206f <__GNU_EH_FRAME_HDR+0x3f>
    200a:	20 65 6e             	and    BYTE PTR [rbp+0x6e],ah
    200d:	74 65                	je     2074 <__GNU_EH_FRAME_HDR+0x44>
    200f:	72 20                	jb     2031 <__GNU_EH_FRAME_HDR+0x1>
    2011:	79 6f                	jns    2082 <__GNU_EH_FRAME_HDR+0x52>
    2013:	75 72                	jne    2087 <__GNU_EH_FRAME_HDR+0x57>
    2015:	20 41 50             	and    BYTE PTR [rcx+0x50],al
    2018:	49 20 6b 65          	rex.WB and BYTE PTR [r11+0x65],bpl
    201c:	79 00                	jns    201e <_IO_stdin_used+0x1e>
    201e:	72 00                	jb     2020 <_IO_stdin_used+0x20>
    2020:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2022:	61                   	(bad)  
    2023:	67 2e 74 78          	addr32 cs je 209f <__GNU_EH_FRAME_HDR+0x6f>
    2027:	74 00                	je     2029 <_IO_stdin_used+0x29>
    2029:	25 64 0a 20 00       	and    eax,0x200a64

Disassembly of section .eh_frame_hdr:

0000000000002030 <__GNU_EH_FRAME_HDR>:
    2030:	01 1b                	add    DWORD PTR [rbx],ebx
    2032:	03 3b                	add    edi,DWORD PTR [rbx]
    2034:	3c 00                	cmp    al,0x0
    2036:	00 00                	add    BYTE PTR [rax],al
    2038:	06                   	(bad)  
    2039:	00 00                	add    BYTE PTR [rax],al
    203b:	00 f0                	add    al,dh
    203d:	ef                   	out    dx,eax
    203e:	ff                   	(bad)  
    203f:	ff 88 00 00 00 70    	dec    DWORD PTR [rax+0x70000000]
    2045:	f0 ff                	lock (bad) 
    2047:	ff b0 00 00 00 80    	push   QWORD PTR [rax-0x80000000]
    204d:	f0 ff                	lock (bad) 
    204f:	ff 58 00             	call   FWORD PTR [rax+0x0]
    2052:	00 00                	add    BYTE PTR [rax],al
    2054:	65 f1                	gs icebp 
    2056:	ff                   	(bad)  
    2057:	ff c8                	dec    eax
    2059:	00 00                	add    BYTE PTR [rax],al
    205b:	00 10                	add    BYTE PTR [rax],dl
    205d:	f2 ff                	repnz (bad) 
    205f:	ff                   	(bad)  
    2060:	e8 00 00 00 80       	call   ffffffff80002065 <_end+0xffffffff7fffdffd>
    2065:	f2 ff                	repnz (bad) 
    2067:	ff 30                	push   QWORD PTR [rax]
    2069:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .eh_frame:

0000000000002070 <__FRAME_END__-0x104>:
    2070:	14 00                	adc    al,0x0
    2072:	00 00                	add    BYTE PTR [rax],al
    2074:	00 00                	add    BYTE PTR [rax],al
    2076:	00 00                	add    BYTE PTR [rax],al
    2078:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    207b:	00 01                	add    BYTE PTR [rcx],al
    207d:	78 10                	js     208f <__GNU_EH_FRAME_HDR+0x5f>
    207f:	01 1b                	add    DWORD PTR [rbx],ebx
    2081:	0c 07                	or     al,0x7
    2083:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
    2089:	00 00                	add    BYTE PTR [rax],al
    208b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    208e:	00 00                	add    BYTE PTR [rax],al
    2090:	20 f0                	and    al,dh
    2092:	ff                   	(bad)  
    2093:	ff 2b                	jmp    FWORD PTR [rbx]
	...
    209d:	00 00                	add    BYTE PTR [rax],al
    209f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    20a2:	00 00                	add    BYTE PTR [rax],al
    20a4:	00 00                	add    BYTE PTR [rax],al
    20a6:	00 00                	add    BYTE PTR [rax],al
    20a8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    20ab:	00 01                	add    BYTE PTR [rcx],al
    20ad:	78 10                	js     20bf <__GNU_EH_FRAME_HDR+0x8f>
    20af:	01 1b                	add    DWORD PTR [rbx],ebx
    20b1:	0c 07                	or     al,0x7
    20b3:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
    20b9:	00 00                	add    BYTE PTR [rax],al
    20bb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    20be:	00 00                	add    BYTE PTR [rax],al
    20c0:	60                   	(bad)  
    20c1:	ef                   	out    dx,eax
    20c2:	ff                   	(bad)  
    20c3:	ff 80 00 00 00 00    	inc    DWORD PTR [rax+0x0]
    20c9:	0e                   	(bad)  
    20ca:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    20cd:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    20d0:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    20d3:	80 00 3f             	add    BYTE PTR [rax],0x3f
    20d6:	1a 3b                	sbb    bh,BYTE PTR [rbx]
    20d8:	2a 33                	sub    dh,BYTE PTR [rbx]
    20da:	24 22                	and    al,0x22
    20dc:	00 00                	add    BYTE PTR [rax],al
    20de:	00 00                	add    BYTE PTR [rax],al
    20e0:	14 00                	adc    al,0x0
    20e2:	00 00                	add    BYTE PTR [rax],al
    20e4:	44 00 00             	add    BYTE PTR [rax],r8b
    20e7:	00 b8 ef ff ff 08    	add    BYTE PTR [rax+0x8ffffef],bh
	...
    20f5:	00 00                	add    BYTE PTR [rax],al
    20f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    20fa:	00 00                	add    BYTE PTR [rax],al
    20fc:	5c                   	pop    rsp
    20fd:	00 00                	add    BYTE PTR [rax],al
    20ff:	00 95 f0 ff ff a3    	add    BYTE PTR [rbp-0x5c000010],dl
    2105:	00 00                	add    BYTE PTR [rax],al
    2107:	00 00                	add    BYTE PTR [rax],al
    2109:	41 0e                	rex.B (bad) 
    210b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    2111:	02 9e 0c 07 08 00    	add    bl,BYTE PTR [rsi+0x8070c]
    2117:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
    211b:	00 7c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bh
    211f:	00 20                	add    BYTE PTR [rax],ah
    2121:	f1                   	icebp  
    2122:	ff                   	(bad)  
    2123:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
    2126:	00 00                	add    BYTE PTR [rax],al
    2128:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
    212b:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
    2131:	8e 03                	mov    es,WORD PTR [rbx]
    2133:	45 0e                	rex.RB (bad) 
    2135:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
    213b:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86302f89 <_end+0xffffffff862fef21>
    2141:	06                   	(bad)  
    2142:	48 0e                	rex.W (bad) 
    2144:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
    214a:	72 0e                	jb     215a <__GNU_EH_FRAME_HDR+0x12a>
    214c:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    214f:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    2152:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    2155:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    2158:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    215b:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    215e:	08 00                	or     BYTE PTR [rax],al
    2160:	10 00                	adc    BYTE PTR [rax],al
    2162:	00 00                	add    BYTE PTR [rax],al
    2164:	c4                   	(bad)  
    2165:	00 00                	add    BYTE PTR [rax],al
    2167:	00 48 f1             	add    BYTE PTR [rax-0xf],cl
    216a:	ff                   	(bad)  
    216b:	ff 02                	inc    DWORD PTR [rdx]
    216d:	00 00                	add    BYTE PTR [rax],al
    216f:	00 00                	add    BYTE PTR [rax],al
    2171:	00 00                	add    BYTE PTR [rax],al
	...

0000000000002174 <__FRAME_END__>:
    2174:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000003de8 <__frame_dummy_init_array_entry>:
    3de8:	90                   	nop
    3de9:	11 00                	adc    DWORD PTR [rax],eax
    3deb:	00 00                	add    BYTE PTR [rax],al
    3ded:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000003df0 <__do_global_dtors_aux_fini_array_entry>:
    3df0:	50                   	push   rax
    3df1:	11 00                	adc    DWORD PTR [rax],eax
    3df3:	00 00                	add    BYTE PTR [rax],al
    3df5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000003df8 <_DYNAMIC>:
    3df8:	01 00                	add    DWORD PTR [rax],eax
    3dfa:	00 00                	add    BYTE PTR [rax],al
    3dfc:	00 00                	add    BYTE PTR [rax],al
    3dfe:	00 00                	add    BYTE PTR [rax],al
    3e00:	01 00                	add    DWORD PTR [rax],eax
    3e02:	00 00                	add    BYTE PTR [rax],al
    3e04:	00 00                	add    BYTE PTR [rax],al
    3e06:	00 00                	add    BYTE PTR [rax],al
    3e08:	0c 00                	or     al,0x0
    3e0a:	00 00                	add    BYTE PTR [rax],al
    3e0c:	00 00                	add    BYTE PTR [rax],al
    3e0e:	00 00                	add    BYTE PTR [rax],al
    3e10:	00 10                	add    BYTE PTR [rax],dl
    3e12:	00 00                	add    BYTE PTR [rax],al
    3e14:	00 00                	add    BYTE PTR [rax],al
    3e16:	00 00                	add    BYTE PTR [rax],al
    3e18:	0d 00 00 00 00       	or     eax,0x0
    3e1d:	00 00                	add    BYTE PTR [rax],al
    3e1f:	00 b4 12 00 00 00 00 	add    BYTE PTR [rdx+rdx*1+0x0],dh
    3e26:	00 00                	add    BYTE PTR [rax],al
    3e28:	19 00                	sbb    DWORD PTR [rax],eax
    3e2a:	00 00                	add    BYTE PTR [rax],al
    3e2c:	00 00                	add    BYTE PTR [rax],al
    3e2e:	00 00                	add    BYTE PTR [rax],al
    3e30:	e8 3d 00 00 00       	call   3e72 <_DYNAMIC+0x7a>
    3e35:	00 00                	add    BYTE PTR [rax],al
    3e37:	00 1b                	add    BYTE PTR [rbx],bl
    3e39:	00 00                	add    BYTE PTR [rax],al
    3e3b:	00 00                	add    BYTE PTR [rax],al
    3e3d:	00 00                	add    BYTE PTR [rax],al
    3e3f:	00 08                	add    BYTE PTR [rax],cl
    3e41:	00 00                	add    BYTE PTR [rax],al
    3e43:	00 00                	add    BYTE PTR [rax],al
    3e45:	00 00                	add    BYTE PTR [rax],al
    3e47:	00 1a                	add    BYTE PTR [rdx],bl
    3e49:	00 00                	add    BYTE PTR [rax],al
    3e4b:	00 00                	add    BYTE PTR [rax],al
    3e4d:	00 00                	add    BYTE PTR [rax],al
    3e4f:	00 f0                	add    al,dh
    3e51:	3d 00 00 00 00       	cmp    eax,0x0
    3e56:	00 00                	add    BYTE PTR [rax],al
    3e58:	1c 00                	sbb    al,0x0
    3e5a:	00 00                	add    BYTE PTR [rax],al
    3e5c:	00 00                	add    BYTE PTR [rax],al
    3e5e:	00 00                	add    BYTE PTR [rax],al
    3e60:	08 00                	or     BYTE PTR [rax],al
    3e62:	00 00                	add    BYTE PTR [rax],al
    3e64:	00 00                	add    BYTE PTR [rax],al
    3e66:	00 00                	add    BYTE PTR [rax],al
    3e68:	f5                   	cmc    
    3e69:	fe                   	(bad)  
    3e6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3e6d:	00 00                	add    BYTE PTR [rax],al
    3e6f:	00 08                	add    BYTE PTR [rax],cl
    3e71:	03 00                	add    eax,DWORD PTR [rax]
    3e73:	00 00                	add    BYTE PTR [rax],al
    3e75:	00 00                	add    BYTE PTR [rax],al
    3e77:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3e7d <_DYNAMIC+0x85>
    3e7d:	00 00                	add    BYTE PTR [rax],al
    3e7f:	00 68 04             	add    BYTE PTR [rax+0x4],ch
    3e82:	00 00                	add    BYTE PTR [rax],al
    3e84:	00 00                	add    BYTE PTR [rax],al
    3e86:	00 00                	add    BYTE PTR [rax],al
    3e88:	06                   	(bad)  
    3e89:	00 00                	add    BYTE PTR [rax],al
    3e8b:	00 00                	add    BYTE PTR [rax],al
    3e8d:	00 00                	add    BYTE PTR [rax],al
    3e8f:	00 30                	add    BYTE PTR [rax],dh
    3e91:	03 00                	add    eax,DWORD PTR [rax]
    3e93:	00 00                	add    BYTE PTR [rax],al
    3e95:	00 00                	add    BYTE PTR [rax],al
    3e97:	00 0a                	add    BYTE PTR [rdx],cl
    3e99:	00 00                	add    BYTE PTR [rax],al
    3e9b:	00 00                	add    BYTE PTR [rax],al
    3e9d:	00 00                	add    BYTE PTR [rax],al
    3e9f:	00 a9 00 00 00 00    	add    BYTE PTR [rcx+0x0],ch
    3ea5:	00 00                	add    BYTE PTR [rax],al
    3ea7:	00 0b                	add    BYTE PTR [rbx],cl
    3ea9:	00 00                	add    BYTE PTR [rax],al
    3eab:	00 00                	add    BYTE PTR [rax],al
    3ead:	00 00                	add    BYTE PTR [rax],al
    3eaf:	00 18                	add    BYTE PTR [rax],bl
    3eb1:	00 00                	add    BYTE PTR [rax],al
    3eb3:	00 00                	add    BYTE PTR [rax],al
    3eb5:	00 00                	add    BYTE PTR [rax],al
    3eb7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 3ebd <_DYNAMIC+0xc5>
	...
    3ec5:	00 00                	add    BYTE PTR [rax],al
    3ec7:	00 03                	add    BYTE PTR [rbx],al
	...
    3ed1:	40 00 00             	add    BYTE PTR [rax],al
    3ed4:	00 00                	add    BYTE PTR [rax],al
    3ed6:	00 00                	add    BYTE PTR [rax],al
    3ed8:	02 00                	add    al,BYTE PTR [rax]
    3eda:	00 00                	add    BYTE PTR [rax],al
    3edc:	00 00                	add    BYTE PTR [rax],al
    3ede:	00 00                	add    BYTE PTR [rax],al
    3ee0:	a8 00                	test   al,0x0
    3ee2:	00 00                	add    BYTE PTR [rax],al
    3ee4:	00 00                	add    BYTE PTR [rax],al
    3ee6:	00 00                	add    BYTE PTR [rax],al
    3ee8:	14 00                	adc    al,0x0
    3eea:	00 00                	add    BYTE PTR [rax],al
    3eec:	00 00                	add    BYTE PTR [rax],al
    3eee:	00 00                	add    BYTE PTR [rax],al
    3ef0:	07                   	(bad)  
    3ef1:	00 00                	add    BYTE PTR [rax],al
    3ef3:	00 00                	add    BYTE PTR [rax],al
    3ef5:	00 00                	add    BYTE PTR [rax],al
    3ef7:	00 17                	add    BYTE PTR [rdi],dl
    3ef9:	00 00                	add    BYTE PTR [rax],al
    3efb:	00 00                	add    BYTE PTR [rax],al
    3efd:	00 00                	add    BYTE PTR [rax],al
    3eff:	00 10                	add    BYTE PTR [rax],dl
    3f01:	06                   	(bad)  
    3f02:	00 00                	add    BYTE PTR [rax],al
    3f04:	00 00                	add    BYTE PTR [rax],al
    3f06:	00 00                	add    BYTE PTR [rax],al
    3f08:	07                   	(bad)  
    3f09:	00 00                	add    BYTE PTR [rax],al
    3f0b:	00 00                	add    BYTE PTR [rax],al
    3f0d:	00 00                	add    BYTE PTR [rax],al
    3f0f:	00 50 05             	add    BYTE PTR [rax+0x5],dl
    3f12:	00 00                	add    BYTE PTR [rax],al
    3f14:	00 00                	add    BYTE PTR [rax],al
    3f16:	00 00                	add    BYTE PTR [rax],al
    3f18:	08 00                	or     BYTE PTR [rax],al
    3f1a:	00 00                	add    BYTE PTR [rax],al
    3f1c:	00 00                	add    BYTE PTR [rax],al
    3f1e:	00 00                	add    BYTE PTR [rax],al
    3f20:	c0 00 00             	rol    BYTE PTR [rax],0x0
    3f23:	00 00                	add    BYTE PTR [rax],al
    3f25:	00 00                	add    BYTE PTR [rax],al
    3f27:	00 09                	add    BYTE PTR [rcx],cl
    3f29:	00 00                	add    BYTE PTR [rax],al
    3f2b:	00 00                	add    BYTE PTR [rax],al
    3f2d:	00 00                	add    BYTE PTR [rax],al
    3f2f:	00 18                	add    BYTE PTR [rax],bl
    3f31:	00 00                	add    BYTE PTR [rax],al
    3f33:	00 00                	add    BYTE PTR [rax],al
    3f35:	00 00                	add    BYTE PTR [rax],al
    3f37:	00 fb                	add    bl,bh
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f3d:	00 00                	add    BYTE PTR [rax],al
    3f3f:	00 00                	add    BYTE PTR [rax],al
    3f41:	00 00                	add    BYTE PTR [rax],al
    3f43:	08 00                	or     BYTE PTR [rax],al
    3f45:	00 00                	add    BYTE PTR [rax],al
    3f47:	00 fe                	add    dh,bh
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f4d:	00 00                	add    BYTE PTR [rax],al
    3f4f:	00 30                	add    BYTE PTR [rax],dh
    3f51:	05 00 00 00 00       	add    eax,0x0
    3f56:	00 00                	add    BYTE PTR [rax],al
    3f58:	ff                   	(bad)  
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f5d:	00 00                	add    BYTE PTR [rax],al
    3f5f:	00 01                	add    BYTE PTR [rcx],al
    3f61:	00 00                	add    BYTE PTR [rax],al
    3f63:	00 00                	add    BYTE PTR [rax],al
    3f65:	00 00                	add    BYTE PTR [rax],al
    3f67:	00 f0                	add    al,dh
    3f69:	ff                   	(bad)  
    3f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f6d:	00 00                	add    BYTE PTR [rax],al
    3f6f:	00 12                	add    BYTE PTR [rdx],dl
    3f71:	05 00 00 00 00       	add    eax,0x0
    3f76:	00 00                	add    BYTE PTR [rax],al
    3f78:	f9                   	stc    
    3f79:	ff                   	(bad)  
    3f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f7d:	00 00                	add    BYTE PTR [rax],al
    3f7f:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000003fd8 <.got>:
	...

Disassembly of section .got.plt:

0000000000004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	f8                   	clc    
    4001:	3d 00 00 00 00       	cmp    eax,0x0
	...
    4016:	00 00                	add    BYTE PTR [rax],al
    4018:	36 10 00             	adc    BYTE PTR ss:[rax],al
    401b:	00 00                	add    BYTE PTR [rax],al
    401d:	00 00                	add    BYTE PTR [rax],al
    401f:	00 46 10             	add    BYTE PTR [rsi+0x10],al
    4022:	00 00                	add    BYTE PTR [rax],al
    4024:	00 00                	add    BYTE PTR [rax],al
    4026:	00 00                	add    BYTE PTR [rax],al
    4028:	56                   	push   rsi
    4029:	10 00                	adc    BYTE PTR [rax],al
    402b:	00 00                	add    BYTE PTR [rax],al
    402d:	00 00                	add    BYTE PTR [rax],al
    402f:	00 66 10             	add    BYTE PTR [rsi+0x10],ah
    4032:	00 00                	add    BYTE PTR [rax],al
    4034:	00 00                	add    BYTE PTR [rax],al
    4036:	00 00                	add    BYTE PTR [rax],al
    4038:	76 10                	jbe    404a <_GLOBAL_OFFSET_TABLE_+0x4a>
    403a:	00 00                	add    BYTE PTR [rax],al
    403c:	00 00                	add    BYTE PTR [rax],al
    403e:	00 00                	add    BYTE PTR [rax],al
    4040:	86 10                	xchg   BYTE PTR [rax],dl
    4042:	00 00                	add    BYTE PTR [rax],al
    4044:	00 00                	add    BYTE PTR [rax],al
    4046:	00 00                	add    BYTE PTR [rax],al
    4048:	96                   	xchg   esi,eax
    4049:	10 00                	adc    BYTE PTR [rax],al
    404b:	00 00                	add    BYTE PTR [rax],al
    404d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000004050 <__data_start>:
	...

0000000000004058 <__dso_handle>:
    4058:	58                   	pop    rax
    4059:	40 00 00             	add    BYTE PTR [rax],al
    405c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000004060 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 44 65 62          	sub    BYTE PTR [rbp+riz*2+0x62],al
   9:	69 61 6e 20 38 2e 32 	imul   esp,DWORD PTR [rcx+0x6e],0x322e3820
  10:	2e 30 2d 39 29 20 38 	xor    BYTE PTR cs:[rip+0x38202939],ch        # 38202950 <_end+0x381fe8e8>
  17:	2e 32 2e             	xor    ch,BYTE PTR cs:[rsi]
  1a:	30 00                	xor    BYTE PTR [rax],al

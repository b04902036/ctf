
challenge:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	ins    BYTE PTR es:[edi],dx
 8048156:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 804815d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 8048164:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    al,0x0
 804816a:	00 00                	add    BYTE PTR [eax],al
 804816c:	10 00                	adc    BYTE PTR [eax],al
 804816e:	00 00                	add    BYTE PTR [eax],al
 8048170:	01 00                	add    DWORD PTR [eax],eax
 8048172:	00 00                	add    BYTE PTR [eax],al
 8048174:	47                   	inc    edi
 8048175:	4e                   	dec    esi
 8048176:	55                   	push   ebp
 8048177:	00 00                	add    BYTE PTR [eax],al
 8048179:	00 00                	add    BYTE PTR [eax],al
 804817b:	00 02                	add    BYTE PTR [edx],al
 804817d:	00 00                	add    BYTE PTR [eax],al
 804817f:	00 06                	add    BYTE PTR [esi],al
 8048181:	00 00                	add    BYTE PTR [eax],al
 8048183:	00 20                	add    BYTE PTR [eax],ah
 8048185:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    al,0x0
 804818a:	00 00                	add    BYTE PTR [eax],al
 804818c:	14 00                	adc    al,0x0
 804818e:	00 00                	add    BYTE PTR [eax],al
 8048190:	03 00                	add    eax,DWORD PTR [eax]
 8048192:	00 00                	add    BYTE PTR [eax],al
 8048194:	47                   	inc    edi
 8048195:	4e                   	dec    esi
 8048196:	55                   	push   ebp
 8048197:	00 5b 36             	add    BYTE PTR [ebx+0x36],bl
 804819a:	69 19 45 80 90 51    	imul   ebx,DWORD PTR [ecx],0x51908045
 80481a0:	0a 28                	or     ch,BYTE PTR [eax]
 80481a2:	0d 88 9c 80 8a       	or     eax,0x8a809c88
 80481a7:	de ec                	fsubrp st(4),st
 80481a9:	41                   	inc    ecx
 80481aa:	23                   	.byte 0x23
 80481ab:	8b                   	.byte 0x8b

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    al,BYTE PTR [eax]
 80481ae:	00 00                	add    BYTE PTR [eax],al
 80481b0:	10 00                	adc    BYTE PTR [eax],al
 80481b2:	00 00                	add    BYTE PTR [eax],al
 80481b4:	01 00                	add    DWORD PTR [eax],eax
 80481b6:	00 00                	add    BYTE PTR [eax],al
 80481b8:	05 00 00 00 00       	add    eax,0x0
 80481bd:	20 00                	and    BYTE PTR [eax],al
 80481bf:	20 00                	and    BYTE PTR [eax],al
 80481c1:	00 00                	add    BYTE PTR [eax],al
 80481c3:	00 10                	add    BYTE PTR [eax],dl
 80481c5:	00 00                	add    BYTE PTR [eax],al
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   eax,DWORD PTR ds:[esi]
 80481c9:	4b                   	dec    ebx
 80481ca:	e3 c0                	jecxz  804818c <signal@plt-0x374>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	b0 00                	mov    al,0x0
	...
 80481e6:	00 00                	add    BYTE PTR [eax],al
 80481e8:	12 00                	adc    al,BYTE PTR [eax]
 80481ea:	00 00                	add    BYTE PTR [eax],al
 80481ec:	2e 00 00             	add    BYTE PTR cs:[eax],al
	...
 80481f7:	00 20                	add    BYTE PTR [eax],ah
 80481f9:	00 00                	add    BYTE PTR [eax],al
 80481fb:	00 3d 00 00 00 00    	add    BYTE PTR ds:0x0,bh
 8048201:	00 00                	add    BYTE PTR [eax],al
 8048203:	00 00                	add    BYTE PTR [eax],al
 8048205:	00 00                	add    BYTE PTR [eax],al
 8048207:	00 20                	add    BYTE PTR [eax],ah
 8048209:	00 00                	add    BYTE PTR [eax],al
 804820b:	00 d4                	add    ah,dl
	...
 8048215:	00 00                	add    BYTE PTR [eax],al
 8048217:	00 12                	add    BYTE PTR [edx],dl
 8048219:	00 00                	add    BYTE PTR [eax],al
 804821b:	00 e2                	add    dl,ah
	...
 8048225:	00 00                	add    BYTE PTR [eax],al
 8048227:	00 12                	add    BYTE PTR [edx],dl
 8048229:	00 00                	add    BYTE PTR [eax],al
 804822b:	00 12                	add    BYTE PTR [edx],dl
	...
 8048235:	00 00                	add    BYTE PTR [eax],al
 8048237:	00 20                	add    BYTE PTR [eax],ah
 8048239:	00 00                	add    BYTE PTR [eax],al
 804823b:	00 51 00             	add    BYTE PTR [ecx+0x0],dl
	...
 8048246:	00 00                	add    BYTE PTR [eax],al
 8048248:	20 00                	and    BYTE PTR [eax],al
 804824a:	00 00                	add    BYTE PTR [eax],al
 804824c:	85 00                	test   DWORD PTR [eax],eax
	...
 8048256:	00 00                	add    BYTE PTR [eax],al
 8048258:	12 00                	adc    al,BYTE PTR [eax]
 804825a:	00 00                	add    BYTE PTR [eax],al
 804825c:	cd 00                	int    0x0
	...
 8048266:	00 00                	add    BYTE PTR [eax],al
 8048268:	12 00                	adc    al,BYTE PTR [eax]
 804826a:	00 00                	add    BYTE PTR [eax],al
 804826c:	db 00                	fild   DWORD PTR [eax]
	...
 8048276:	00 00                	add    BYTE PTR [eax],al
 8048278:	12 00                	adc    al,BYTE PTR [eax]
 804827a:	00 00                	add    BYTE PTR [eax],al
 804827c:	bc 00 00 00 00       	mov    esp,0x0
 8048281:	00 00                	add    BYTE PTR [eax],al
 8048283:	00 00                	add    BYTE PTR [eax],al
 8048285:	00 00                	add    BYTE PTR [eax],al
 8048287:	00 12                	add    BYTE PTR [edx],dl
 8048289:	00 00                	add    BYTE PTR [eax],al
 804828b:	00 b7 00 00 00 00    	add    BYTE PTR [edi+0x0],dh
 8048291:	00 00                	add    BYTE PTR [eax],al
 8048293:	00 00                	add    BYTE PTR [eax],al
 8048295:	00 00                	add    BYTE PTR [eax],al
 8048297:	00 12                	add    BYTE PTR [edx],dl
 8048299:	00 00                	add    BYTE PTR [eax],al
 804829b:	00 77 00             	add    BYTE PTR [edi+0x0],dh
	...
 80482a6:	00 00                	add    BYTE PTR [eax],al
 80482a8:	12 00                	adc    al,BYTE PTR [eax]
 80482aa:	00 00                	add    BYTE PTR [eax],al
 80482ac:	6b 00 00             	imul   eax,DWORD PTR [eax],0x0
	...
 80482b7:	00 12                	add    BYTE PTR [edx],dl
 80482b9:	00 00                	add    BYTE PTR [eax],al
 80482bb:	00 ab 00 00 00 00    	add    BYTE PTR [ebx+0x0],ch
 80482c1:	00 00                	add    BYTE PTR [eax],al
 80482c3:	00 00                	add    BYTE PTR [eax],al
 80482c5:	00 00                	add    BYTE PTR [eax],al
 80482c7:	00 12                	add    BYTE PTR [edx],dl
 80482c9:	00 00                	add    BYTE PTR [eax],al
 80482cb:	00 9c 00 00 00 fc 91 	add    BYTE PTR [eax+eax*1-0x6e040000],bl
 80482d2:	04 08                	add    al,0x8
 80482d4:	04 00                	add    al,0x0
 80482d6:	00 00                	add    BYTE PTR [eax],al
 80482d8:	11 00                	adc    DWORD PTR [eax],eax
 80482da:	10 00                	adc    BYTE PTR [eax],al

Disassembly of section .dynstr:

080482dc <.dynstr>:
 80482dc:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 80482e0:	63 72 79             	arpl   WORD PTR [edx+0x79],si
 80482e3:	70 74                	jo     8048359 <signal@plt-0x1a7>
 80482e5:	6f                   	outs   dx,DWORD PTR ds:[esi]
 80482e6:	2e 73 6f             	cs jae 8048358 <signal@plt-0x1a8>
 80482e9:	2e 31 2e             	xor    DWORD PTR cs:[esi],ebp
 80482ec:	31 00                	xor    DWORD PTR [eax],eax
 80482ee:	5f                   	pop    edi
 80482ef:	49                   	dec    ecx
 80482f0:	54                   	push   esp
 80482f1:	4d                   	dec    ebp
 80482f2:	5f                   	pop    edi
 80482f3:	64 65 72 65          	fs gs jb 804835c <signal@plt-0x1a4>
 80482f7:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 80482fe:	4d 
 80482ff:	43                   	inc    ebx
 8048300:	6c                   	ins    BYTE PTR es:[edi],dx
 8048301:	6f                   	outs   dx,DWORD PTR ds:[esi]
 8048302:	6e                   	outs   dx,BYTE PTR ds:[esi]
 8048303:	65 54                	gs push esp
 8048305:	61                   	popa   
 8048306:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
 804830a:	5f                   	pop    edi
 804830b:	5f                   	pop    edi
 804830c:	67 6d                	ins    DWORD PTR es:[di],dx
 804830e:	6f                   	outs   dx,DWORD PTR ds:[esi]
 804830f:	6e                   	outs   dx,BYTE PTR ds:[esi]
 8048310:	5f                   	pop    edi
 8048311:	73 74                	jae    8048387 <signal@plt-0x179>
 8048313:	61                   	popa   
 8048314:	72 74                	jb     804838a <signal@plt-0x176>
 8048316:	5f                   	pop    edi
 8048317:	5f                   	pop    edi
 8048318:	00 5f 4a             	add    BYTE PTR [edi+0x4a],bl
 804831b:	76 5f                	jbe    804837c <signal@plt-0x184>
 804831d:	52                   	push   edx
 804831e:	65 67 69 73 74 65 72 	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
 8048325:	43 6c 
 8048327:	61                   	popa   
 8048328:	73 73                	jae    804839d <signal@plt-0x163>
 804832a:	65 73 00             	gs jae 804832d <signal@plt-0x1d3>
 804832d:	5f                   	pop    edi
 804832e:	49                   	dec    ecx
 804832f:	54                   	push   esp
 8048330:	4d                   	dec    ebp
 8048331:	5f                   	pop    edi
 8048332:	72 65                	jb     8048399 <signal@plt-0x167>
 8048334:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 804833b:	4d 
 804833c:	43                   	inc    ebx
 804833d:	6c                   	ins    BYTE PTR es:[edi],dx
 804833e:	6f                   	outs   dx,DWORD PTR ds:[esi]
 804833f:	6e                   	outs   dx,BYTE PTR ds:[esi]
 8048340:	65 54                	gs push esp
 8048342:	61                   	popa   
 8048343:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
 8048347:	53                   	push   ebx
 8048348:	48                   	dec    eax
 8048349:	41                   	inc    ecx
 804834a:	32 35 36 5f 49 6e    	xor    dh,BYTE PTR ds:0x6e495f36
 8048350:	69 74 00 53 48 41 32 	imul   esi,DWORD PTR [eax+eax*1+0x53],0x35324148
 8048357:	35 
 8048358:	36 5f                	ss pop edi
 804835a:	55                   	push   ebp
 804835b:	70 64                	jo     80483c1 <signal@plt-0x13f>
 804835d:	61                   	popa   
 804835e:	74 65                	je     80483c5 <signal@plt-0x13b>
 8048360:	00 53 48             	add    BYTE PTR [ebx+0x48],dl
 8048363:	41                   	inc    ecx
 8048364:	32 35 36 5f 46 69    	xor    dh,BYTE PTR ds:0x69465f36
 804836a:	6e                   	outs   dx,BYTE PTR ds:[esi]
 804836b:	61                   	popa   
 804836c:	6c                   	ins    BYTE PTR es:[edi],dx
 804836d:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 8048371:	63 2e                	arpl   WORD PTR [esi],bp
 8048373:	73 6f                	jae    80483e4 <signal@plt-0x11c>
 8048375:	2e 36 00 5f 49       	cs add BYTE PTR ss:[edi+0x49],bl
 804837a:	4f                   	dec    edi
 804837b:	5f                   	pop    edi
 804837c:	73 74                	jae    80483f2 <signal@plt-0x10e>
 804837e:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 8048385:	64 
 8048386:	00 65 78             	add    BYTE PTR [ebp+0x78],ah
 8048389:	69 74 00 73 69 67 6e 	imul   esi,DWORD PTR [eax+eax*1+0x73],0x616e6769
 8048390:	61 
 8048391:	6c                   	ins    BYTE PTR es:[edi],dx
 8048392:	00 70 75             	add    BYTE PTR [eax+0x75],dh
 8048395:	74 73                	je     804840a <signal@plt-0xf6>
 8048397:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 804839a:	73 74                	jae    8048410 <signal@plt-0xf0>
 804839c:	61                   	popa   
 804839d:	63 6b 5f             	arpl   WORD PTR [ebx+0x5f],bp
 80483a0:	63 68 6b             	arpl   WORD PTR [eax+0x6b],bp
 80483a3:	5f                   	pop    edi
 80483a4:	66 61                	popaw  
 80483a6:	69 6c 00 73 74 72 6c 	imul   ebp,DWORD PTR [eax+eax*1+0x73],0x656c7274
 80483ad:	65 
 80483ae:	6e                   	outs   dx,BYTE PTR ds:[esi]
 80483af:	00 6d 65             	add    BYTE PTR [ebp+0x65],ch
 80483b2:	6d                   	ins    DWORD PTR es:[edi],dx
 80483b3:	73 65                	jae    804841a <signal@plt-0xe6>
 80483b5:	74 00                	je     80483b7 <signal@plt-0x149>
 80483b7:	6d                   	ins    DWORD PTR es:[edi],dx
 80483b8:	61                   	popa   
 80483b9:	6c                   	ins    BYTE PTR es:[edi],dx
 80483ba:	6c                   	ins    BYTE PTR es:[edi],dx
 80483bb:	6f                   	outs   dx,DWORD PTR ds:[esi]
 80483bc:	63 00                	arpl   WORD PTR [eax],ax
 80483be:	5f                   	pop    edi
 80483bf:	5f                   	pop    edi
 80483c0:	6c                   	ins    BYTE PTR es:[edi],dx
 80483c1:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 80483c8:	72 74                	jb     804843e <signal@plt-0xc2>
 80483ca:	5f                   	pop    edi
 80483cb:	6d                   	ins    DWORD PTR es:[edi],dx
 80483cc:	61                   	popa   
 80483cd:	69 6e 00 4f 50 45 4e 	imul   ebp,DWORD PTR [esi+0x0],0x4e45504f
 80483d4:	53                   	push   ebx
 80483d5:	53                   	push   ebx
 80483d6:	4c                   	dec    esp
 80483d7:	5f                   	pop    edi
 80483d8:	31 5f 31             	xor    DWORD PTR [edi+0x31],ebx
 80483db:	5f                   	pop    edi
 80483dc:	30 00                	xor    BYTE PTR [eax],al
 80483de:	47                   	inc    edi
 80483df:	4c                   	dec    esp
 80483e0:	49                   	dec    ecx
 80483e1:	42                   	inc    edx
 80483e2:	43                   	inc    ebx
 80483e3:	5f                   	pop    edi
 80483e4:	32 2e                	xor    ch,BYTE PTR [esi]
 80483e6:	34 00                	xor    al,0x0
 80483e8:	47                   	inc    edi
 80483e9:	4c                   	dec    esp
 80483ea:	49                   	dec    ecx
 80483eb:	42                   	inc    edx
 80483ec:	43                   	inc    ebx
 80483ed:	5f                   	pop    edi
 80483ee:	32 2e                	xor    ch,BYTE PTR [esi]
 80483f0:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .gnu.version:

080483f2 <.gnu.version>:
 80483f2:	00 00                	add    BYTE PTR [eax],al
 80483f4:	02 00                	add    al,BYTE PTR [eax]
 80483f6:	00 00                	add    BYTE PTR [eax],al
 80483f8:	00 00                	add    BYTE PTR [eax],al
 80483fa:	02 00                	add    al,BYTE PTR [eax]
 80483fc:	02 00                	add    al,BYTE PTR [eax]
 80483fe:	00 00                	add    BYTE PTR [eax],al
 8048400:	00 00                	add    BYTE PTR [eax],al
 8048402:	03 00                	add    eax,DWORD PTR [eax]
 8048404:	02 00                	add    al,BYTE PTR [eax]
 8048406:	02 00                	add    al,BYTE PTR [eax]
 8048408:	04 00                	add    al,0x0
 804840a:	02 00                	add    al,BYTE PTR [eax]
 804840c:	03 00                	add    eax,DWORD PTR [eax]
 804840e:	03 00                	add    eax,DWORD PTR [eax]
 8048410:	02 00                	add    al,BYTE PTR [eax]
 8048412:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

08048414 <.gnu.version_r>:
 8048414:	01 00                	add    DWORD PTR [eax],eax
 8048416:	01 00                	add    DWORD PTR [eax],eax
 8048418:	01 00                	add    DWORD PTR [eax],eax
 804841a:	00 00                	add    BYTE PTR [eax],al
 804841c:	10 00                	adc    BYTE PTR [eax],al
 804841e:	00 00                	add    BYTE PTR [eax],al
 8048420:	20 00                	and    BYTE PTR [eax],al
 8048422:	00 00                	add    BYTE PTR [eax],al
 8048424:	10 1f                	adc    BYTE PTR [edi],bl
 8048426:	6d                   	ins    DWORD PTR es:[edi],dx
 8048427:	06                   	push   es
 8048428:	00 00                	add    BYTE PTR [eax],al
 804842a:	03 00                	add    eax,DWORD PTR [eax]
 804842c:	f4                   	hlt    
 804842d:	00 00                	add    BYTE PTR [eax],al
 804842f:	00 00                	add    BYTE PTR [eax],al
 8048431:	00 00                	add    BYTE PTR [eax],al
 8048433:	00 01                	add    BYTE PTR [ecx],al
 8048435:	00 02                	add    BYTE PTR [edx],al
 8048437:	00 92 00 00 00 10    	add    BYTE PTR [edx+0x10000000],dl
 804843d:	00 00                	add    BYTE PTR [eax],al
 804843f:	00 00                	add    BYTE PTR [eax],al
 8048441:	00 00                	add    BYTE PTR [eax],al
 8048443:	00 14 69             	add    BYTE PTR [ecx+ebp*2],dl
 8048446:	69 0d 00 00 04 00 02 	imul   ecx,DWORD PTR ds:0x40000,0x102
 804844d:	01 00 00 
 8048450:	10 00                	adc    BYTE PTR [eax],al
 8048452:	00 00                	add    BYTE PTR [eax],al
 8048454:	10 69 69             	adc    BYTE PTR [ecx+0x69],ch
 8048457:	0d 00 00 02 00       	or     eax,0x20000
 804845c:	0c 01                	or     al,0x1
 804845e:	00 00                	add    BYTE PTR [eax],al
 8048460:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

08048464 <.rel.dyn>:
 8048464:	fc                   	cld    
 8048465:	af                   	scas   eax,DWORD PTR es:[edi]
 8048466:	04 08                	add    al,0x8
 8048468:	06                   	push   es
 8048469:	02 00                	add    al,BYTE PTR [eax]
	...

Disassembly of section .rel.plt:

0804846c <.rel.plt>:
 804846c:	0c b0                	or     al,0xb0
 804846e:	04 08                	add    al,0x8
 8048470:	07                   	pop    es
 8048471:	01 00                	add    DWORD PTR [eax],eax
 8048473:	00 10                	add    BYTE PTR [eax],dl
 8048475:	b0 04                	mov    al,0x4
 8048477:	08 07                	or     BYTE PTR [edi],al
 8048479:	04 00                	add    al,0x0
 804847b:	00 14 b0             	add    BYTE PTR [eax+esi*4],dl
 804847e:	04 08                	add    al,0x8
 8048480:	07                   	pop    es
 8048481:	05 00 00 18 b0       	add    eax,0xb0180000
 8048486:	04 08                	add    al,0x8
 8048488:	07                   	pop    es
 8048489:	08 00                	or     BYTE PTR [eax],al
 804848b:	00 1c b0             	add    BYTE PTR [eax+esi*4],bl
 804848e:	04 08                	add    al,0x8
 8048490:	07                   	pop    es
 8048491:	09 00                	or     DWORD PTR [eax],eax
 8048493:	00 20                	add    BYTE PTR [eax],ah
 8048495:	b0 04                	mov    al,0x4
 8048497:	08 07                	or     BYTE PTR [edi],al
 8048499:	0a 00                	or     al,BYTE PTR [eax]
 804849b:	00 24 b0             	add    BYTE PTR [eax+esi*4],ah
 804849e:	04 08                	add    al,0x8
 80484a0:	07                   	pop    es
 80484a1:	0b 00                	or     eax,DWORD PTR [eax]
 80484a3:	00 28                	add    BYTE PTR [eax],ch
 80484a5:	b0 04                	mov    al,0x4
 80484a7:	08 07                	or     BYTE PTR [edi],al
 80484a9:	0c 00                	or     al,0x0
 80484ab:	00 2c b0             	add    BYTE PTR [eax+esi*4],ch
 80484ae:	04 08                	add    al,0x8
 80484b0:	07                   	pop    es
 80484b1:	0d 00 00 30 b0       	or     eax,0xb0300000
 80484b6:	04 08                	add    al,0x8
 80484b8:	07                   	pop    es
 80484b9:	0e                   	push   cs
 80484ba:	00 00                	add    BYTE PTR [eax],al
 80484bc:	34 b0                	xor    al,0xb0
 80484be:	04 08                	add    al,0x8
 80484c0:	07                   	pop    es
 80484c1:	0f 00 00             	sldt   WORD PTR [eax]

Disassembly of section .init:

080484c4 <.init>:
 80484c4:	53                   	push   ebx
 80484c5:	83 ec 08             	sub    esp,0x8
 80484c8:	e8 23 01 00 00       	call   80485f0 <exit@plt+0x50>
 80484cd:	81 c3 33 2b 00 00    	add    ebx,0x2b33
 80484d3:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 80484d9:	85 c0                	test   eax,eax
 80484db:	74 05                	je     80484e2 <signal@plt-0x1e>
 80484dd:	e8 ce 00 00 00       	call   80485b0 <exit@plt+0x10>
 80484e2:	83 c4 08             	add    esp,0x8
 80484e5:	5b                   	pop    ebx
 80484e6:	c3                   	ret    

Disassembly of section .plt:

080484f0 <signal@plt-0x10>:
 80484f0:	ff 35 04 b0 04 08    	push   DWORD PTR ds:0x804b004
 80484f6:	ff 25 08 b0 04 08    	jmp    DWORD PTR ds:0x804b008
 80484fc:	00 00                	add    BYTE PTR [eax],al
	...

08048500 <signal@plt>:
 8048500:	ff 25 0c b0 04 08    	jmp    DWORD PTR ds:0x804b00c
 8048506:	68 00 00 00 00       	push   0x0
 804850b:	e9 e0 ff ff ff       	jmp    80484f0 <signal@plt-0x10>

08048510 <memset@plt>:
 8048510:	ff 25 10 b0 04 08    	jmp    DWORD PTR ds:0x804b010
 8048516:	68 08 00 00 00       	push   0x8
 804851b:	e9 d0 ff ff ff       	jmp    80484f0 <signal@plt-0x10>

08048520 <__libc_start_main@plt>:
 8048520:	ff 25 14 b0 04 08    	jmp    DWORD PTR ds:0x804b014
 8048526:	68 10 00 00 00       	push   0x10
 804852b:	e9 c0 ff ff ff       	jmp    80484f0 <signal@plt-0x10>

08048530 <SHA256_Final@plt>:
 8048530:	ff 25 18 b0 04 08    	jmp    DWORD PTR ds:0x804b018
 8048536:	68 18 00 00 00       	push   0x18
 804853b:	e9 b0 ff ff ff       	jmp    80484f0 <signal@plt-0x10>

08048540 <strlen@plt>:
 8048540:	ff 25 1c b0 04 08    	jmp    DWORD PTR ds:0x804b01c
 8048546:	68 20 00 00 00       	push   0x20
 804854b:	e9 a0 ff ff ff       	jmp    80484f0 <signal@plt-0x10>

08048550 <malloc@plt>:
 8048550:	ff 25 20 b0 04 08    	jmp    DWORD PTR ds:0x804b020
 8048556:	68 28 00 00 00       	push   0x28
 804855b:	e9 90 ff ff ff       	jmp    80484f0 <signal@plt-0x10>

08048560 <__stack_chk_fail@plt>:
 8048560:	ff 25 24 b0 04 08    	jmp    DWORD PTR ds:0x804b024
 8048566:	68 30 00 00 00       	push   0x30
 804856b:	e9 80 ff ff ff       	jmp    80484f0 <signal@plt-0x10>

08048570 <puts@plt>:
 8048570:	ff 25 28 b0 04 08    	jmp    DWORD PTR ds:0x804b028
 8048576:	68 38 00 00 00       	push   0x38
 804857b:	e9 70 ff ff ff       	jmp    80484f0 <signal@plt-0x10>

08048580 <SHA256_Update@plt>:
 8048580:	ff 25 2c b0 04 08    	jmp    DWORD PTR ds:0x804b02c
 8048586:	68 40 00 00 00       	push   0x40
 804858b:	e9 60 ff ff ff       	jmp    80484f0 <signal@plt-0x10>

08048590 <SHA256_Init@plt>:
 8048590:	ff 25 30 b0 04 08    	jmp    DWORD PTR ds:0x804b030
 8048596:	68 48 00 00 00       	push   0x48
 804859b:	e9 50 ff ff ff       	jmp    80484f0 <signal@plt-0x10>

080485a0 <exit@plt>:
 80485a0:	ff 25 34 b0 04 08    	jmp    DWORD PTR ds:0x804b034
 80485a6:	68 50 00 00 00       	push   0x50
 80485ab:	e9 40 ff ff ff       	jmp    80484f0 <signal@plt-0x10>

Disassembly of section .plt.got:

080485b0 <.plt.got>:
 80485b0:	ff 25 fc af 04 08    	jmp    DWORD PTR ds:0x804affc
 80485b6:	66 90                	xchg   ax,ax

Disassembly of section .text:

080485c0 <.text>:
 80485c0:	31 ed                	xor    ebp,ebp
 80485c2:	5e                   	pop    esi
 80485c3:	89 e1                	mov    ecx,esp
 80485c5:	83 e4 f0             	and    esp,0xfffffff0
 80485c8:	50                   	push   eax
 80485c9:	54                   	push   esp
 80485ca:	52                   	push   edx
 80485cb:	68 e0 91 04 08       	push   0x80491e0
 80485d0:	68 80 91 04 08       	push   0x8049180
 80485d5:	51                   	push   ecx
 80485d6:	56                   	push   esi
 80485d7:	68 bb 86 04 08       	push   0x80486bb
 80485dc:	e8 3f ff ff ff       	call   8048520 <__libc_start_main@plt>
 80485e1:	f4                   	hlt    
 80485e2:	66 90                	xchg   ax,ax
 80485e4:	66 90                	xchg   ax,ax
 80485e6:	66 90                	xchg   ax,ax
 80485e8:	66 90                	xchg   ax,ax
 80485ea:	66 90                	xchg   ax,ax
 80485ec:	66 90                	xchg   ax,ax
 80485ee:	66 90                	xchg   ax,ax
 80485f0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80485f3:	c3                   	ret    
 80485f4:	66 90                	xchg   ax,ax
 80485f6:	66 90                	xchg   ax,ax
 80485f8:	66 90                	xchg   ax,ax
 80485fa:	66 90                	xchg   ax,ax
 80485fc:	66 90                	xchg   ax,ax
 80485fe:	66 90                	xchg   ax,ax
 8048600:	b8 8b b0 04 08       	mov    eax,0x804b08b
 8048605:	2d 88 b0 04 08       	sub    eax,0x804b088
 804860a:	83 f8 06             	cmp    eax,0x6
 804860d:	76 1a                	jbe    8048629 <exit@plt+0x89>
 804860f:	b8 00 00 00 00       	mov    eax,0x0
 8048614:	85 c0                	test   eax,eax
 8048616:	74 11                	je     8048629 <exit@plt+0x89>
 8048618:	55                   	push   ebp
 8048619:	89 e5                	mov    ebp,esp
 804861b:	83 ec 14             	sub    esp,0x14
 804861e:	68 88 b0 04 08       	push   0x804b088
 8048623:	ff d0                	call   eax
 8048625:	83 c4 10             	add    esp,0x10
 8048628:	c9                   	leave  
 8048629:	f3 c3                	repz ret 
 804862b:	90                   	nop
 804862c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048630:	b8 88 b0 04 08       	mov    eax,0x804b088
 8048635:	2d 88 b0 04 08       	sub    eax,0x804b088
 804863a:	c1 f8 02             	sar    eax,0x2
 804863d:	89 c2                	mov    edx,eax
 804863f:	c1 ea 1f             	shr    edx,0x1f
 8048642:	01 d0                	add    eax,edx
 8048644:	d1 f8                	sar    eax,1
 8048646:	74 1b                	je     8048663 <exit@plt+0xc3>
 8048648:	ba 00 00 00 00       	mov    edx,0x0
 804864d:	85 d2                	test   edx,edx
 804864f:	74 12                	je     8048663 <exit@plt+0xc3>
 8048651:	55                   	push   ebp
 8048652:	89 e5                	mov    ebp,esp
 8048654:	83 ec 10             	sub    esp,0x10
 8048657:	50                   	push   eax
 8048658:	68 88 b0 04 08       	push   0x804b088
 804865d:	ff d2                	call   edx
 804865f:	83 c4 10             	add    esp,0x10
 8048662:	c9                   	leave  
 8048663:	f3 c3                	repz ret 
 8048665:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048669:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
 8048670:	80 3d 88 b0 04 08 00 	cmp    BYTE PTR ds:0x804b088,0x0
 8048677:	75 13                	jne    804868c <exit@plt+0xec>
 8048679:	55                   	push   ebp
 804867a:	89 e5                	mov    ebp,esp
 804867c:	83 ec 08             	sub    esp,0x8
 804867f:	e8 7c ff ff ff       	call   8048600 <exit@plt+0x60>
 8048684:	c6 05 88 b0 04 08 01 	mov    BYTE PTR ds:0x804b088,0x1
 804868b:	c9                   	leave  
 804868c:	f3 c3                	repz ret 
 804868e:	66 90                	xchg   ax,ax
 8048690:	b8 08 af 04 08       	mov    eax,0x804af08
 8048695:	8b 10                	mov    edx,DWORD PTR [eax]
 8048697:	85 d2                	test   edx,edx
 8048699:	75 05                	jne    80486a0 <exit@plt+0x100>
 804869b:	eb 93                	jmp    8048630 <exit@plt+0x90>
 804869d:	8d 76 00             	lea    esi,[esi+0x0]
 80486a0:	ba 00 00 00 00       	mov    edx,0x0
 80486a5:	85 d2                	test   edx,edx
 80486a7:	74 f2                	je     804869b <exit@plt+0xfb>
 80486a9:	55                   	push   ebp
 80486aa:	89 e5                	mov    ebp,esp
 80486ac:	83 ec 14             	sub    esp,0x14
 80486af:	50                   	push   eax
 80486b0:	ff d2                	call   edx
 80486b2:	83 c4 10             	add    esp,0x10
 80486b5:	c9                   	leave  
 80486b6:	e9 75 ff ff ff       	jmp    8048630 <exit@plt+0x90>
 80486bb:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 80486bf:	83 e4 f0             	and    esp,0xfffffff0
 80486c2:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 80486c5:	55                   	push   ebp
 80486c6:	89 e5                	mov    ebp,esp
 80486c8:	57                   	push   edi
 80486c9:	56                   	push   esi
 80486ca:	53                   	push   ebx
 80486cb:	51                   	push   ecx
 80486cc:	83 ec 78             	sub    esp,0x78
 80486cf:	89 c8                	mov    eax,ecx
 80486d1:	8b 50 04             	mov    edx,DWORD PTR [eax+0x4]
 80486d4:	89 55 84             	mov    DWORD PTR [ebp-0x7c],edx
 80486d7:	65 8b 1d 14 00 00 00 	mov    ebx,DWORD PTR gs:0x14
 80486de:	89 5d e4             	mov    DWORD PTR [ebp-0x1c],ebx
 80486e1:	31 db                	xor    ebx,ebx
 80486e3:	c7 45 94 7f 8a 04 08 	mov    DWORD PTR [ebp-0x6c],0x8048a7f
 80486ea:	c7 45 98 00 00 00 00 	mov    DWORD PTR [ebp-0x68],0x0
 80486f1:	83 38 02             	cmp    DWORD PTR [eax],0x2
 80486f4:	0f 85 7f 01 00 00    	jne    8048879 <exit@plt+0x2d9>
 80486fa:	c7 05 84 b0 04 08 54 	mov    DWORD PTR ds:0x804b084,0x52454754
 8048701:	47 45 52 
 8048704:	8b 45 84             	mov    eax,DWORD PTR [ebp-0x7c]
 8048707:	8b 00                	mov    eax,DWORD PTR [eax]
 8048709:	83 ec 0c             	sub    esp,0xc
 804870c:	50                   	push   eax
 804870d:	e8 a0 01 00 00       	call   80488b2 <exit@plt+0x312>
 8048712:	83 c4 10             	add    esp,0x10
 8048715:	85 c0                	test   eax,eax
 8048717:	0f 85 35 01 00 00    	jne    8048852 <exit@plt+0x2b2>
 804871d:	8b 45 98             	mov    eax,DWORD PTR [ebp-0x68]
 8048720:	8b 7d 84             	mov    edi,DWORD PTR [ebp-0x7c]
 8048723:	89 c1                	mov    ecx,eax
 8048725:	89 f8                	mov    eax,edi
 8048727:	8b 70 04             	mov    esi,DWORD PTR [eax+0x4]
 804872a:	31 db                	xor    ebx,ebx
 804872c:	8a 1c 0e             	mov    bl,BYTE PTR [esi+ecx*1]
 804872f:	41                   	inc    ecx
 8048730:	31 d2                	xor    edx,edx
 8048732:	b8 42 42 42 42       	mov    eax,0x42424242
 8048737:	f7 f3                	div    ebx
 8048739:	83 fa 00             	cmp    edx,0x0
 804873c:	ba 00 00 00 00       	mov    edx,0x0
 8048741:	75 e7                	jne    804872a <exit@plt+0x18a>
 8048743:	89 4d 98             	mov    DWORD PTR [ebp-0x68],ecx
 8048746:	cc                   	int3   
 8048747:	cc                   	int3   
 8048748:	83 7d 98 32          	cmp    DWORD PTR [ebp-0x68],0x32
 804874c:	0f 85 3e 01 00 00    	jne    8048890 <exit@plt+0x2f0>
 8048752:	8b 45 84             	mov    eax,DWORD PTR [ebp-0x7c]
 8048755:	83 c0 04             	add    eax,0x4
 8048758:	8b 00                	mov    eax,DWORD PTR [eax]
 804875a:	83 c0 03             	add    eax,0x3
 804875d:	83 ec 0c             	sub    esp,0xc
 8048760:	50                   	push   eax
 8048761:	e8 ae 03 00 00       	call   8048b14 <exit@plt+0x574>
 8048766:	83 c4 10             	add    esp,0x10
 8048769:	85 c0                	test   eax,eax
 804876b:	0f 84 1f 01 00 00    	je     8048890 <exit@plt+0x2f0>
 8048771:	8b 45 84             	mov    eax,DWORD PTR [ebp-0x7c]
 8048774:	83 c0 04             	add    eax,0x4
 8048777:	8b 00                	mov    eax,DWORD PTR [eax]
 8048779:	83 c0 10             	add    eax,0x10
 804877c:	83 ec 08             	sub    esp,0x8
 804877f:	50                   	push   eax
 8048780:	ff 75 84             	push   DWORD PTR [ebp-0x7c]
 8048783:	e8 f5 05 00 00       	call   8048d7d <exit@plt+0x7dd>
 8048788:	83 c4 10             	add    esp,0x10
 804878b:	85 c0                	test   eax,eax
 804878d:	0f 84 fd 00 00 00    	je     8048890 <exit@plt+0x2f0>
 8048793:	8b 45 84             	mov    eax,DWORD PTR [ebp-0x7c]
 8048796:	83 c0 04             	add    eax,0x4
 8048799:	8b 00                	mov    eax,DWORD PTR [eax]
 804879b:	83 c0 2a             	add    eax,0x2a
 804879e:	83 ec 0c             	sub    esp,0xc
 80487a1:	50                   	push   eax
 80487a2:	e8 8d 06 00 00       	call   8048e34 <exit@plt+0x894>
 80487a7:	83 c4 10             	add    esp,0x10
 80487aa:	85 c0                	test   eax,eax
 80487ac:	0f 84 de 00 00 00    	je     8048890 <exit@plt+0x2f0>
 80487b2:	8b 45 84             	mov    eax,DWORD PTR [ebp-0x7c]
 80487b5:	83 c0 04             	add    eax,0x4
 80487b8:	8b 00                	mov    eax,DWORD PTR [eax]
 80487ba:	83 c0 0d             	add    eax,0xd
 80487bd:	83 ec 0c             	sub    esp,0xc
 80487c0:	50                   	push   eax
 80487c1:	e8 c3 07 00 00       	call   8048f89 <exit@plt+0x9e9>
 80487c6:	83 c4 10             	add    esp,0x10
 80487c9:	85 c0                	test   eax,eax
 80487cb:	0f 84 bf 00 00 00    	je     8048890 <exit@plt+0x2f0>
 80487d1:	8b 45 84             	mov    eax,DWORD PTR [ebp-0x7c]
 80487d4:	83 c0 04             	add    eax,0x4
 80487d7:	8b 00                	mov    eax,DWORD PTR [eax]
 80487d9:	83 c0 1f             	add    eax,0x1f
 80487dc:	83 ec 0c             	sub    esp,0xc
 80487df:	50                   	push   eax
 80487e0:	e8 54 07 00 00       	call   8048f39 <exit@plt+0x999>
 80487e5:	83 c4 10             	add    esp,0x10
 80487e8:	85 c0                	test   eax,eax
 80487ea:	0f 84 a0 00 00 00    	je     8048890 <exit@plt+0x2f0>
 80487f0:	8b 45 84             	mov    eax,DWORD PTR [ebp-0x7c]
 80487f3:	83 c0 04             	add    eax,0x4
 80487f6:	8b 00                	mov    eax,DWORD PTR [eax]
 80487f8:	83 c0 14             	add    eax,0x14
 80487fb:	83 ec 0c             	sub    esp,0xc
 80487fe:	50                   	push   eax
 80487ff:	e8 85 06 00 00       	call   8048e89 <exit@plt+0x8e9>
 8048804:	83 c4 10             	add    esp,0x10
 8048807:	85 c0                	test   eax,eax
 8048809:	0f 84 81 00 00 00    	je     8048890 <exit@plt+0x2f0>
 804880f:	8b 45 84             	mov    eax,DWORD PTR [ebp-0x7c]
 8048812:	83 c0 04             	add    eax,0x4
 8048815:	8b 00                	mov    eax,DWORD PTR [eax]
 8048817:	83 ec 0c             	sub    esp,0xc
 804881a:	50                   	push   eax
 804881b:	e8 80 08 00 00       	call   80490a0 <exit@plt+0xb00>
 8048820:	83 c4 10             	add    esp,0x10
 8048823:	85 c0                	test   eax,eax
 8048825:	74 69                	je     8048890 <exit@plt+0x2f0>
 8048827:	8d 45 9c             	lea    eax,[ebp-0x64]
 804882a:	bb 38 92 04 08       	mov    ebx,0x8049238
 804882f:	ba 12 00 00 00       	mov    edx,0x12
 8048834:	89 c7                	mov    edi,eax
 8048836:	89 de                	mov    esi,ebx
 8048838:	89 d1                	mov    ecx,edx
 804883a:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 804883c:	83 ec 0c             	sub    esp,0xc
 804883f:	8d 45 9c             	lea    eax,[ebp-0x64]
 8048842:	50                   	push   eax
 8048843:	e8 f4 07 00 00       	call   804903c <exit@plt+0xa9c>
 8048848:	83 c4 10             	add    esp,0x10
 804884b:	b8 00 00 00 00       	mov    eax,0x0
 8048850:	eb 43                	jmp    8048895 <exit@plt+0x2f5>
 8048852:	8b 45 84             	mov    eax,DWORD PTR [ebp-0x7c]
 8048855:	83 c0 04             	add    eax,0x4
 8048858:	8b 00                	mov    eax,DWORD PTR [eax]
 804885a:	83 ec 0c             	sub    esp,0xc
 804885d:	50                   	push   eax
 804885e:	e8 dd fc ff ff       	call   8048540 <strlen@plt>
 8048863:	83 c4 10             	add    esp,0x10
 8048866:	89 45 98             	mov    DWORD PTR [ebp-0x68],eax
 8048869:	83 7d 98 2a          	cmp    DWORD PTR [ebp-0x68],0x2a
 804886d:	74 21                	je     8048890 <exit@plt+0x2f0>
 804886f:	83 ec 0c             	sub    esp,0xc
 8048872:	6a 01                	push   0x1
 8048874:	e8 27 fd ff ff       	call   80485a0 <exit@plt>
 8048879:	83 ec 0c             	sub    esp,0xc
 804887c:	68 00 92 04 08       	push   0x8049200
 8048881:	e8 ea fc ff ff       	call   8048570 <puts@plt>
 8048886:	83 c4 10             	add    esp,0x10
 8048889:	b8 01 00 00 00       	mov    eax,0x1
 804888e:	eb 05                	jmp    8048895 <exit@plt+0x2f5>
 8048890:	b8 01 00 00 00       	mov    eax,0x1
 8048895:	8b 75 e4             	mov    esi,DWORD PTR [ebp-0x1c]
 8048898:	65 33 35 14 00 00 00 	xor    esi,DWORD PTR gs:0x14
 804889f:	74 05                	je     80488a6 <exit@plt+0x306>
 80488a1:	e8 ba fc ff ff       	call   8048560 <__stack_chk_fail@plt>
 80488a6:	8d 65 f0             	lea    esp,[ebp-0x10]
 80488a9:	59                   	pop    ecx
 80488aa:	5b                   	pop    ebx
 80488ab:	5e                   	pop    esi
 80488ac:	5f                   	pop    edi
 80488ad:	5d                   	pop    ebp
 80488ae:	8d 61 fc             	lea    esp,[ecx-0x4]
 80488b1:	c3                   	ret    
 80488b2:	55                   	push   ebp
 80488b3:	89 e5                	mov    ebp,esp
 80488b5:	56                   	push   esi
 80488b6:	53                   	push   ebx
 80488b7:	81 ec b0 00 00 00    	sub    esp,0xb0
 80488bd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 80488c0:	89 85 54 ff ff ff    	mov    DWORD PTR [ebp-0xac],eax
 80488c6:	65 a1 14 00 00 00    	mov    eax,gs:0x14
 80488cc:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 80488cf:	31 c0                	xor    eax,eax
 80488d1:	c6 85 5e ff ff ff 42 	mov    BYTE PTR [ebp-0xa2],0x42
 80488d8:	83 ec 0c             	sub    esp,0xc
 80488db:	8d 85 64 ff ff ff    	lea    eax,[ebp-0x9c]
 80488e1:	50                   	push   eax
 80488e2:	e8 a9 fc ff ff       	call   8048590 <SHA256_Init@plt>
 80488e7:	83 c4 10             	add    esp,0x10
 80488ea:	83 ec 0c             	sub    esp,0xc
 80488ed:	ff b5 54 ff ff ff    	push   DWORD PTR [ebp-0xac]
 80488f3:	e8 48 fc ff ff       	call   8048540 <strlen@plt>
 80488f8:	83 c4 10             	add    esp,0x10
 80488fb:	83 ec 04             	sub    esp,0x4
 80488fe:	50                   	push   eax
 80488ff:	ff b5 54 ff ff ff    	push   DWORD PTR [ebp-0xac]
 8048905:	8d 85 64 ff ff ff    	lea    eax,[ebp-0x9c]
 804890b:	50                   	push   eax
 804890c:	e8 6f fc ff ff       	call   8048580 <SHA256_Update@plt>
 8048911:	83 c4 10             	add    esp,0x10
 8048914:	83 ec 08             	sub    esp,0x8
 8048917:	8d 85 64 ff ff ff    	lea    eax,[ebp-0x9c]
 804891d:	50                   	push   eax
 804891e:	8d 45 d4             	lea    eax,[ebp-0x2c]
 8048921:	50                   	push   eax
 8048922:	e8 09 fc ff ff       	call   8048530 <SHA256_Final@plt>
 8048927:	83 c4 10             	add    esp,0x10
 804892a:	c7 85 60 ff ff ff 00 	mov    DWORD PTR [ebp-0xa0],0x0
 8048931:	00 00 00 
 8048934:	eb 68                	jmp    804899e <exit@plt+0x3fe>
 8048936:	8d 55 d4             	lea    edx,[ebp-0x2c]
 8048939:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
 804893f:	01 d0                	add    eax,edx
 8048941:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048944:	32 85 5e ff ff ff    	xor    al,BYTE PTR [ebp-0xa2]
 804894a:	88 85 5f ff ff ff    	mov    BYTE PTR [ebp-0xa1],al
 8048950:	0f be 95 5f ff ff ff 	movsx  edx,BYTE PTR [ebp-0xa1]
 8048957:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
 804895d:	05 60 b0 04 08       	add    eax,0x804b060
 8048962:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048965:	0f b6 c0             	movzx  eax,al
 8048968:	39 c2                	cmp    edx,eax
 804896a:	74 2b                	je     8048997 <exit@plt+0x3f7>
 804896c:	0f b6 95 5e ff ff ff 	movzx  edx,BYTE PTR [ebp-0xa2]
 8048973:	be c6 89 04 08       	mov    esi,0x80489c6
 8048978:	31 c0                	xor    eax,eax
 804897a:	88 d0                	mov    al,dl
 804897c:	40                   	inc    eax
 804897d:	6a 08                	push   0x8
 804897f:	5b                   	pop    ebx
 8048980:	6a 00                	push   0x0
 8048982:	6a 00                	push   0x0
 8048984:	6a 00                	push   0x0
 8048986:	56                   	push   esi
 8048987:	89 e1                	mov    ecx,esp
 8048989:	31 d2                	xor    edx,edx
 804898b:	cd 80                	int    0x80
 804898d:	83 ec 10             	sub    esp,0x10
 8048990:	b8 00 00 00 00       	mov    eax,0x0
 8048995:	eb 17                	jmp    80489ae <exit@plt+0x40e>
 8048997:	83 85 60 ff ff ff 01 	add    DWORD PTR [ebp-0xa0],0x1
 804899e:	83 bd 60 ff ff ff 1f 	cmp    DWORD PTR [ebp-0xa0],0x1f
 80489a5:	7e 8f                	jle    8048936 <exit@plt+0x396>
 80489a7:	cc                   	int3   
 80489a8:	cc                   	int3   
 80489a9:	b8 01 00 00 00       	mov    eax,0x1
 80489ae:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
 80489b1:	65 33 0d 14 00 00 00 	xor    ecx,DWORD PTR gs:0x14
 80489b8:	74 05                	je     80489bf <exit@plt+0x41f>
 80489ba:	e8 a1 fb ff ff       	call   8048560 <__stack_chk_fail@plt>
 80489bf:	8d 65 f8             	lea    esp,[ebp-0x8]
 80489c2:	5b                   	pop    ebx
 80489c3:	5e                   	pop    esi
 80489c4:	5d                   	pop    ebp
 80489c5:	c3                   	ret    
 80489c6:	55                   	push   ebp
 80489c7:	89 e5                	mov    ebp,esp
 80489c9:	56                   	push   esi
 80489ca:	53                   	push   ebx
 80489cb:	a1 84 b0 04 08       	mov    eax,ds:0x804b084
 80489d0:	3d 54 47 45 52       	cmp    eax,0x52454754
 80489d5:	75 3f                	jne    8048a16 <exit@plt+0x476>
 80489d7:	be bb 86 04 08       	mov    esi,0x80486bb
 80489dc:	6a 7d                	push   0x7d
 80489de:	58                   	pop    eax
 80489df:	68 00 20 00 00       	push   0x2000
 80489e4:	59                   	pop    ecx
 80489e5:	56                   	push   esi
 80489e6:	5b                   	pop    ebx
 80489e7:	81 e3 00 f0 ff ff    	and    ebx,0xfffff000
 80489ed:	53                   	push   ebx
 80489ee:	6a 07                	push   0x7
 80489f0:	5a                   	pop    edx
 80489f1:	cd 80                	int    0x80
 80489f3:	5b                   	pop    ebx
 80489f4:	ff 4c 24 4c          	dec    DWORD PTR [esp+0x4c]
 80489f8:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
 80489fc:	c7 00 51 6a 05 5b    	mov    DWORD PTR [eax],0x5b056a51
 8048a02:	c7 40 04 6a 30 58 8b 	mov    DWORD PTR [eax+0x4],0x8b58306a
 8048a09:	c7 40 08 4d 94 cd 80 	mov    DWORD PTR [eax+0x8],0x80cd944d
 8048a10:	c6 40 0c 59          	mov    BYTE PTR [eax+0xc],0x59
 8048a14:	eb 65                	jmp    8048a7b <exit@plt+0x4db>
 8048a16:	a1 84 b0 04 08       	mov    eax,ds:0x804b084
 8048a1b:	3d 50 50 4f 4e       	cmp    eax,0x4e4f5050
 8048a20:	74 58                	je     8048a7a <exit@plt+0x4da>
 8048a22:	a1 84 b0 04 08       	mov    eax,ds:0x804b084
 8048a27:	3d 33 30 47 46       	cmp    eax,0x46473033
 8048a2c:	75 23                	jne    8048a51 <exit@plt+0x4b1>
 8048a2e:	c7 44 24 38 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
 8048a35:	00 
 8048a36:	c7 44 24 34 64 00 00 	mov    DWORD PTR [esp+0x34],0x64
 8048a3d:	00 
 8048a3e:	8b 4c 24 3c          	mov    ecx,DWORD PTR [esp+0x3c]
 8048a42:	31 c0                	xor    eax,eax
 8048a44:	8a 01                	mov    al,BYTE PTR [ecx]
 8048a46:	88 44 24 40          	mov    BYTE PTR [esp+0x40],al
 8048a4a:	83 44 24 3c 04       	add    DWORD PTR [esp+0x3c],0x4
 8048a4f:	eb 2a                	jmp    8048a7b <exit@plt+0x4db>
 8048a51:	a1 84 b0 04 08       	mov    eax,ds:0x804b084
 8048a56:	3d 31 34 47 46       	cmp    eax,0x46473431
 8048a5b:	75 19                	jne    8048a76 <exit@plt+0x4d6>
 8048a5d:	c7 05 84 b0 04 08 50 	mov    DWORD PTR ds:0x804b084,0x4e4f5050
 8048a64:	50 4f 4e 
 8048a67:	83 44 24 4c 02       	add    DWORD PTR [esp+0x4c],0x2
 8048a6c:	c7 44 24 40 94 00 00 	mov    DWORD PTR [esp+0x40],0x94
 8048a73:	00 
 8048a74:	eb 05                	jmp    8048a7b <exit@plt+0x4db>
 8048a76:	cc                   	int3   
 8048a77:	cc                   	int3   
 8048a78:	eb 01                	jmp    8048a7b <exit@plt+0x4db>
 8048a7a:	90                   	nop
 8048a7b:	5b                   	pop    ebx
 8048a7c:	5e                   	pop    esi
 8048a7d:	5d                   	pop    ebp
 8048a7e:	c3                   	ret    
 8048a7f:	55                   	push   ebp
 8048a80:	89 e5                	mov    ebp,esp
 8048a82:	83 ec 08             	sub    esp,0x8
 8048a85:	a1 84 b0 04 08       	mov    eax,ds:0x804b084
 8048a8a:	3d 54 47 45 52       	cmp    eax,0x52454754
 8048a8f:	75 1e                	jne    8048aaf <exit@plt+0x50f>
 8048a91:	83 ec 08             	sub    esp,0x8
 8048a94:	68 7f 8a 04 08       	push   0x8048a7f
 8048a99:	6a 05                	push   0x5
 8048a9b:	e8 60 fa ff ff       	call   8048500 <signal@plt>
 8048aa0:	83 c4 10             	add    esp,0x10
 8048aa3:	c7 05 84 b0 04 08 50 	mov    DWORD PTR ds:0x804b084,0x4e4f5050
 8048aaa:	50 4f 4e 
 8048aad:	eb 63                	jmp    8048b12 <exit@plt+0x572>
 8048aaf:	a1 84 b0 04 08       	mov    eax,ds:0x804b084
 8048ab4:	3d 50 50 4f 4e       	cmp    eax,0x4e4f5050
 8048ab9:	74 56                	je     8048b11 <exit@plt+0x571>
 8048abb:	a1 84 b0 04 08       	mov    eax,ds:0x804b084
 8048ac0:	3d 52 43 53 55       	cmp    eax,0x55534352
 8048ac5:	75 14                	jne    8048adb <exit@plt+0x53b>
 8048ac7:	c7 05 84 b0 04 08 50 	mov    DWORD PTR ds:0x804b084,0x4e4f5050
 8048ace:	50 4f 4e 
 8048ad1:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
 8048ad5:	c6 40 f2 5f          	mov    BYTE PTR [eax-0xe],0x5f
 8048ad9:	eb 37                	jmp    8048b12 <exit@plt+0x572>
 8048adb:	a1 84 b0 04 08       	mov    eax,ds:0x804b084
 8048ae0:	3d 37 33 47 46       	cmp    eax,0x46473337
 8048ae5:	75 25                	jne    8048b0c <exit@plt+0x56c>
 8048ae7:	c7 05 84 b0 04 08 50 	mov    DWORD PTR ds:0x804b084,0x4e4f5050
 8048aee:	50 4f 4e 
 8048af1:	8b 4c 24 3c          	mov    ecx,DWORD PTR [esp+0x3c]
 8048af5:	8b 5c 24 34          	mov    ebx,DWORD PTR [esp+0x34]
 8048af9:	8b 01                	mov    eax,DWORD PTR [ecx]
 8048afb:	25 ff ff ff 00       	and    eax,0xffffff
 8048b00:	3d 66 30 72 00       	cmp    eax,0x723066
 8048b05:	75 03                	jne    8048b0a <exit@plt+0x56a>
 8048b07:	c6 03 01             	mov    BYTE PTR [ebx],0x1
 8048b0a:	eb 06                	jmp    8048b12 <exit@plt+0x572>
 8048b0c:	cc                   	int3   
 8048b0d:	cc                   	int3   
 8048b0e:	90                   	nop
 8048b0f:	eb 01                	jmp    8048b12 <exit@plt+0x572>
 8048b11:	90                   	nop
 8048b12:	c9                   	leave  
 8048b13:	c3                   	ret    
 8048b14:	55                   	push   ebp
 8048b15:	89 e5                	mov    ebp,esp
 8048b17:	56                   	push   esi
 8048b18:	53                   	push   ebx
 8048b19:	83 ec 10             	sub    esp,0x10
 8048b1c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048b1f:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 8048b22:	c7 05 84 b0 04 08 33 	mov    DWORD PTR ds:0x804b084,0x46473033
 8048b29:	30 47 46 
 8048b2c:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
 8048b2f:	89 c6                	mov    esi,eax
 8048b31:	31 d2                	xor    edx,edx
 8048b33:	89 f1                	mov    ecx,esi
 8048b35:	31 c0                	xor    eax,eax
 8048b37:	8a 01                	mov    al,BYTE PTR [ecx]
 8048b39:	6a 64                	push   0x64
 8048b3b:	5b                   	pop    ebx
 8048b3c:	29 c3                	sub    ebx,eax
 8048b3e:	f7 f3                	div    ebx
 8048b40:	83 fa 01             	cmp    edx,0x1
 8048b43:	89 ce                	mov    esi,ecx
 8048b45:	7c 07                	jl     8048b4e <exit@plt+0x5ae>
 8048b47:	6a 04                	push   0x4
 8048b49:	e8 52 fa ff ff       	call   80485a0 <exit@plt>
 8048b4e:	89 75 f4             	mov    DWORD PTR [ebp-0xc],esi
 8048b51:	a1 84 b0 04 08       	mov    eax,ds:0x804b084
 8048b56:	35 63 60 08 08       	xor    eax,0x8086063
 8048b5b:	a3 84 b0 04 08       	mov    ds:0x804b084,eax
 8048b60:	cc                   	int3   
 8048b61:	cc                   	int3   
 8048b62:	83 ec 0c             	sub    esp,0xc
 8048b65:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
 8048b68:	e8 5f 00 00 00       	call   8048bcc <exit@plt+0x62c>
 8048b6d:	83 c4 10             	add    esp,0x10
 8048b70:	85 c0                	test   eax,eax
 8048b72:	75 0a                	jne    8048b7e <exit@plt+0x5de>
 8048b74:	83 ec 0c             	sub    esp,0xc
 8048b77:	6a 01                	push   0x1
 8048b79:	e8 22 fa ff ff       	call   80485a0 <exit@plt>
 8048b7e:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
 8048b81:	83 e8 01             	sub    eax,0x1
 8048b84:	83 ec 0c             	sub    esp,0xc
 8048b87:	50                   	push   eax
 8048b88:	e8 21 01 00 00       	call   8048cae <exit@plt+0x70e>
 8048b8d:	83 c4 10             	add    esp,0x10
 8048b90:	85 c0                	test   eax,eax
 8048b92:	75 0a                	jne    8048b9e <exit@plt+0x5fe>
 8048b94:	83 ec 0c             	sub    esp,0xc
 8048b97:	6a 02                	push   0x2
 8048b99:	e8 02 fa ff ff       	call   80485a0 <exit@plt>
 8048b9e:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
 8048ba1:	83 c0 03             	add    eax,0x3
 8048ba4:	83 ec 0c             	sub    esp,0xc
 8048ba7:	50                   	push   eax
 8048ba8:	e8 7d 00 00 00       	call   8048c2a <exit@plt+0x68a>
 8048bad:	83 c4 10             	add    esp,0x10
 8048bb0:	85 c0                	test   eax,eax
 8048bb2:	75 0a                	jne    8048bbe <exit@plt+0x61e>
 8048bb4:	83 ec 0c             	sub    esp,0xc
 8048bb7:	6a 03                	push   0x3
 8048bb9:	e8 e2 f9 ff ff       	call   80485a0 <exit@plt>
 8048bbe:	cc                   	int3   
 8048bbf:	cc                   	int3   
 8048bc0:	b8 01 00 00 00       	mov    eax,0x1
 8048bc5:	8d 65 f8             	lea    esp,[ebp-0x8]
 8048bc8:	5b                   	pop    ebx
 8048bc9:	5e                   	pop    esi
 8048bca:	5d                   	pop    ebp
 8048bcb:	c3                   	ret    
 8048bcc:	55                   	push   ebp
 8048bcd:	89 e5                	mov    ebp,esp
 8048bcf:	83 ec 10             	sub    esp,0x10
 8048bd2:	c7 45 f8 80 92 04 08 	mov    DWORD PTR [ebp-0x8],0x8049280
 8048bd9:	c7 45 fc 84 92 04 08 	mov    DWORD PTR [ebp-0x4],0x8049284
 8048be0:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
 8048be7:	eb 34                	jmp    8048c1d <exit@plt+0x67d>
 8048be9:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
 8048bec:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048bef:	01 d0                	add    eax,edx
 8048bf1:	0f b6 08             	movzx  ecx,BYTE PTR [eax]
 8048bf4:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
 8048bf7:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
 8048bfa:	01 d0                	add    eax,edx
 8048bfc:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048bff:	31 c1                	xor    ecx,eax
 8048c01:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
 8048c04:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
 8048c07:	01 d0                	add    eax,edx
 8048c09:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048c0c:	38 c1                	cmp    cl,al
 8048c0e:	74 09                	je     8048c19 <exit@plt+0x679>
 8048c10:	cc                   	int3   
 8048c11:	cc                   	int3   
 8048c12:	b8 00 00 00 00       	mov    eax,0x0
 8048c17:	eb 0f                	jmp    8048c28 <exit@plt+0x688>
 8048c19:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
 8048c1d:	83 7d f4 02          	cmp    DWORD PTR [ebp-0xc],0x2
 8048c21:	7e c6                	jle    8048be9 <exit@plt+0x649>
 8048c23:	b8 01 00 00 00       	mov    eax,0x1
 8048c28:	c9                   	leave  
 8048c29:	c3                   	ret    
 8048c2a:	55                   	push   ebp
 8048c2b:	89 e5                	mov    ebp,esp
 8048c2d:	83 ec 10             	sub    esp,0x10
 8048c30:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
 8048c37:	c7 45 fc a8 01 00 00 	mov    DWORD PTR [ebp-0x4],0x1a8
 8048c3e:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
 8048c45:	eb 15                	jmp    8048c5c <exit@plt+0x6bc>
 8048c47:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
 8048c4a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048c4d:	01 d0                	add    eax,edx
 8048c4f:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048c52:	0f be c0             	movsx  eax,al
 8048c55:	01 45 f4             	add    DWORD PTR [ebp-0xc],eax
 8048c58:	83 45 f8 01          	add    DWORD PTR [ebp-0x8],0x1
 8048c5c:	83 7d f8 04          	cmp    DWORD PTR [ebp-0x8],0x4
 8048c60:	7e e5                	jle    8048c47 <exit@plt+0x6a7>
 8048c62:	cc                   	int3   
 8048c63:	cc                   	int3   
 8048c64:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
 8048c67:	3b 45 fc             	cmp    eax,DWORD PTR [ebp-0x4]
 8048c6a:	75 3b                	jne    8048ca7 <exit@plt+0x707>
 8048c6c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048c6f:	83 c0 01             	add    eax,0x1
 8048c72:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048c75:	3c 6c                	cmp    al,0x6c
 8048c77:	75 2e                	jne    8048ca7 <exit@plt+0x707>
 8048c79:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048c7c:	83 c0 02             	add    eax,0x2
 8048c7f:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048c82:	3c 33                	cmp    al,0x33
 8048c84:	75 21                	jne    8048ca7 <exit@plt+0x707>
 8048c86:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048c89:	83 c0 03             	add    eax,0x3
 8048c8c:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048c8f:	3c 74                	cmp    al,0x74
 8048c91:	75 14                	jne    8048ca7 <exit@plt+0x707>
 8048c93:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048c96:	83 c0 04             	add    eax,0x4
 8048c99:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048c9c:	3c 65                	cmp    al,0x65
 8048c9e:	75 07                	jne    8048ca7 <exit@plt+0x707>
 8048ca0:	b8 01 00 00 00       	mov    eax,0x1
 8048ca5:	eb 05                	jmp    8048cac <exit@plt+0x70c>
 8048ca7:	b8 00 00 00 00       	mov    eax,0x0
 8048cac:	c9                   	leave  
 8048cad:	c3                   	ret    
 8048cae:	55                   	push   ebp
 8048caf:	89 e5                	mov    ebp,esp
 8048cb1:	83 ec 28             	sub    esp,0x28
 8048cb4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048cb7:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
 8048cba:	65 a1 14 00 00 00    	mov    eax,gs:0x14
 8048cc0:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 8048cc3:	31 c0                	xor    eax,eax
 8048cc5:	a1 84 b0 04 08       	mov    eax,ds:0x804b084
 8048cca:	35 02 13 1c 1b       	xor    eax,0x1b1c1302
 8048ccf:	a3 84 b0 04 08       	mov    ds:0x804b084,eax
 8048cd4:	66 c7 45 f2 61 00    	mov    WORD PTR [ebp-0xe],0x61
 8048cda:	cc                   	int3   
 8048cdb:	cc                   	int3   
 8048cdc:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
 8048cdf:	0f b6 10             	movzx  edx,BYTE PTR [eax]
 8048ce2:	0f b6 45 f2          	movzx  eax,BYTE PTR [ebp-0xe]
 8048ce6:	38 c2                	cmp    dl,al
 8048ce8:	74 07                	je     8048cf1 <exit@plt+0x751>
 8048cea:	b8 00 00 00 00       	mov    eax,0x0
 8048cef:	eb 79                	jmp    8048d6a <exit@plt+0x7ca>
 8048cf1:	cc                   	int3   
 8048cf2:	cc                   	int3   
 8048cf3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
 8048cf6:	0f b6 10             	movzx  edx,BYTE PTR [eax]
 8048cf9:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
 8048cfc:	83 c0 09             	add    eax,0x9
 8048cff:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048d02:	38 c2                	cmp    dl,al
 8048d04:	75 5f                	jne    8048d65 <exit@plt+0x7c5>
 8048d06:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
 8048d09:	83 c0 0d             	add    eax,0xd
 8048d0c:	0f b6 10             	movzx  edx,BYTE PTR [eax]
 8048d0f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
 8048d12:	83 c0 18             	add    eax,0x18
 8048d15:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048d18:	38 c2                	cmp    dl,al
 8048d1a:	75 49                	jne    8048d65 <exit@plt+0x7c5>
 8048d1c:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
 8048d1f:	83 c0 1e             	add    eax,0x1e
 8048d22:	0f b6 10             	movzx  edx,BYTE PTR [eax]
 8048d25:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
 8048d28:	83 c0 22             	add    eax,0x22
 8048d2b:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048d2e:	38 c2                	cmp    dl,al
 8048d30:	75 33                	jne    8048d65 <exit@plt+0x7c5>
 8048d32:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
 8048d35:	83 c0 22             	add    eax,0x22
 8048d38:	0f b6 10             	movzx  edx,BYTE PTR [eax]
 8048d3b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
 8048d3e:	83 c0 09             	add    eax,0x9
 8048d41:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048d44:	38 c2                	cmp    dl,al
 8048d46:	75 1d                	jne    8048d65 <exit@plt+0x7c5>
 8048d48:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
 8048d4b:	83 c0 18             	add    eax,0x18
 8048d4e:	0f b6 10             	movzx  edx,BYTE PTR [eax]
 8048d51:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
 8048d54:	83 c0 1e             	add    eax,0x1e
 8048d57:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048d5a:	38 c2                	cmp    dl,al
 8048d5c:	75 07                	jne    8048d65 <exit@plt+0x7c5>
 8048d5e:	b8 01 00 00 00       	mov    eax,0x1
 8048d63:	eb 05                	jmp    8048d6a <exit@plt+0x7ca>
 8048d65:	b8 00 00 00 00       	mov    eax,0x0
 8048d6a:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
 8048d6d:	65 33 0d 14 00 00 00 	xor    ecx,DWORD PTR gs:0x14
 8048d74:	74 05                	je     8048d7b <exit@plt+0x7db>
 8048d76:	e8 e5 f7 ff ff       	call   8048560 <__stack_chk_fail@plt>
 8048d7b:	c9                   	leave  
 8048d7c:	c3                   	ret    
 8048d7d:	55                   	push   ebp
 8048d7e:	89 e5                	mov    ebp,esp
 8048d80:	83 ec 18             	sub    esp,0x18
 8048d83:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 8048d86:	83 c0 02             	add    eax,0x2
 8048d89:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
 8048d8c:	83 c2 02             	add    edx,0x2
 8048d8f:	0f b6 12             	movzx  edx,BYTE PTR [edx]
 8048d92:	83 f2 64             	xor    edx,0x64
 8048d95:	88 10                	mov    BYTE PTR [eax],dl
 8048d97:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048d9a:	83 c0 04             	add    eax,0x4
 8048d9d:	8b 00                	mov    eax,DWORD PTR [eax]
 8048d9f:	83 ec 0c             	sub    esp,0xc
 8048da2:	50                   	push   eax
 8048da3:	e8 98 f7 ff ff       	call   8048540 <strlen@plt>
 8048da8:	83 c4 10             	add    esp,0x10
 8048dab:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 8048dae:	83 7d f4 12          	cmp    DWORD PTR [ebp-0xc],0x12
 8048db2:	74 07                	je     8048dbb <exit@plt+0x81b>
 8048db4:	b8 00 00 00 00       	mov    eax,0x0
 8048db9:	eb 77                	jmp    8048e32 <exit@plt+0x892>
 8048dbb:	cc                   	int3   
 8048dbc:	cc                   	int3   
 8048dbd:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 8048dc0:	83 c0 01             	add    eax,0x1
 8048dc3:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
 8048dc6:	83 c2 01             	add    edx,0x1
 8048dc9:	0f b6 12             	movzx  edx,BYTE PTR [edx]
 8048dcc:	83 f2 6e             	xor    edx,0x6e
 8048dcf:	88 10                	mov    BYTE PTR [eax],dl
 8048dd1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048dd4:	83 c0 04             	add    eax,0x4
 8048dd7:	8b 00                	mov    eax,DWORD PTR [eax]
 8048dd9:	83 ec 0c             	sub    esp,0xc
 8048ddc:	50                   	push   eax
 8048ddd:	e8 5e f7 ff ff       	call   8048540 <strlen@plt>
 8048de2:	83 c4 10             	add    esp,0x10
 8048de5:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 8048de8:	83 7d f4 11          	cmp    DWORD PTR [ebp-0xc],0x11
 8048dec:	74 07                	je     8048df5 <exit@plt+0x855>
 8048dee:	b8 00 00 00 00       	mov    eax,0x0
 8048df3:	eb 3d                	jmp    8048e32 <exit@plt+0x892>
 8048df5:	cc                   	int3   
 8048df6:	cc                   	int3   
 8048df7:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 8048dfa:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048dfd:	83 f0 61             	xor    eax,0x61
 8048e00:	89 c2                	mov    edx,eax
 8048e02:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 8048e05:	88 10                	mov    BYTE PTR [eax],dl
 8048e07:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048e0a:	83 c0 04             	add    eax,0x4
 8048e0d:	8b 00                	mov    eax,DWORD PTR [eax]
 8048e0f:	83 ec 0c             	sub    esp,0xc
 8048e12:	50                   	push   eax
 8048e13:	e8 28 f7 ff ff       	call   8048540 <strlen@plt>
 8048e18:	83 c4 10             	add    esp,0x10
 8048e1b:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 8048e1e:	83 7d f4 10          	cmp    DWORD PTR [ebp-0xc],0x10
 8048e22:	74 07                	je     8048e2b <exit@plt+0x88b>
 8048e24:	b8 00 00 00 00       	mov    eax,0x0
 8048e29:	eb 07                	jmp    8048e32 <exit@plt+0x892>
 8048e2b:	cc                   	int3   
 8048e2c:	cc                   	int3   
 8048e2d:	b8 01 00 00 00       	mov    eax,0x1
 8048e32:	c9                   	leave  
 8048e33:	c3                   	ret    
 8048e34:	55                   	push   ebp
 8048e35:	89 e5                	mov    ebp,esp
 8048e37:	83 ec 28             	sub    esp,0x28
 8048e3a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048e3d:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
 8048e40:	65 a1 14 00 00 00    	mov    eax,gs:0x14
 8048e46:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 8048e49:	31 c0                	xor    eax,eax
 8048e4b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
 8048e4e:	83 e8 05             	sub    eax,0x5
 8048e51:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
 8048e54:	c6 45 ef 00          	mov    BYTE PTR [ebp-0x11],0x0
 8048e58:	cc                   	int3   
 8048e59:	cc                   	int3   
 8048e5a:	c7 05 84 b0 04 08 37 	mov    DWORD PTR ds:0x804b084,0x46473337
 8048e61:	33 47 46 
 8048e64:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
 8048e67:	8d 55 ef             	lea    edx,[ebp-0x11]
 8048e6a:	89 d3                	mov    ebx,edx
 8048e6c:	89 c1                	mov    ecx,eax
 8048e6e:	cc                   	int3   
 8048e6f:	0f b6 45 ef          	movzx  eax,BYTE PTR [ebp-0x11]
 8048e73:	0f b6 c0             	movzx  eax,al
 8048e76:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
 8048e79:	65 33 0d 14 00 00 00 	xor    ecx,DWORD PTR gs:0x14
 8048e80:	74 05                	je     8048e87 <exit@plt+0x8e7>
 8048e82:	e8 d9 f6 ff ff       	call   8048560 <__stack_chk_fail@plt>
 8048e87:	c9                   	leave  
 8048e88:	c3                   	ret    
 8048e89:	55                   	push   ebp
 8048e8a:	89 e5                	mov    ebp,esp
 8048e8c:	83 ec 38             	sub    esp,0x38
 8048e8f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048e92:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
 8048e95:	65 a1 14 00 00 00    	mov    eax,gs:0x14
 8048e9b:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 8048e9e:	31 c0                	xor    eax,eax
 8048ea0:	c6 45 df 39          	mov    BYTE PTR [ebp-0x21],0x39
 8048ea4:	c6 45 e0 38          	mov    BYTE PTR [ebp-0x20],0x38
 8048ea8:	c6 45 e1 30          	mov    BYTE PTR [ebp-0x1f],0x30
 8048eac:	c6 45 e2 3a          	mov    BYTE PTR [ebp-0x1e],0x3a
 8048eb0:	c6 45 e3 3b          	mov    BYTE PTR [ebp-0x1d],0x3b
 8048eb4:	c6 45 e4 3d          	mov    BYTE PTR [ebp-0x1c],0x3d
 8048eb8:	c6 45 e5 3c          	mov    BYTE PTR [ebp-0x1b],0x3c
 8048ebc:	c6 45 e6 3f          	mov    BYTE PTR [ebp-0x1a],0x3f
 8048ec0:	c6 45 e7 3e          	mov    BYTE PTR [ebp-0x19],0x3e
 8048ec4:	c6 45 e8 31          	mov    BYTE PTR [ebp-0x18],0x31
 8048ec8:	c7 45 e9 55 6e 6c 30 	mov    DWORD PTR [ebp-0x17],0x306c6e55
 8048ecf:	c7 45 ed 76 34 62 6c 	mov    DWORD PTR [ebp-0x13],0x6c623476
 8048ed6:	66 c7 45 f1 33 53    	mov    WORD PTR [ebp-0xf],0x5333
 8048edc:	c6 45 f3 00          	mov    BYTE PTR [ebp-0xd],0x0
 8048ee0:	c7 45 d8 00 00 00 00 	mov    DWORD PTR [ebp-0x28],0x0
 8048ee7:	eb 30                	jmp    8048f19 <exit@plt+0x979>
 8048ee9:	8b 55 d8             	mov    edx,DWORD PTR [ebp-0x28]
 8048eec:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
 8048eef:	01 d0                	add    eax,edx
 8048ef1:	0f b6 10             	movzx  edx,BYTE PTR [eax]
 8048ef4:	8d 4d df             	lea    ecx,[ebp-0x21]
 8048ef7:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
 8048efa:	01 c8                	add    eax,ecx
 8048efc:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048eff:	83 f0 39             	xor    eax,0x39
 8048f02:	0f b6 c0             	movzx  eax,al
 8048f05:	0f b6 44 05 e9       	movzx  eax,BYTE PTR [ebp+eax*1-0x17]
 8048f0a:	38 c2                	cmp    dl,al
 8048f0c:	74 07                	je     8048f15 <exit@plt+0x975>
 8048f0e:	b8 00 00 00 00       	mov    eax,0x0
 8048f13:	eb 11                	jmp    8048f26 <exit@plt+0x986>
 8048f15:	83 45 d8 01          	add    DWORD PTR [ebp-0x28],0x1
 8048f19:	83 7d d8 09          	cmp    DWORD PTR [ebp-0x28],0x9
 8048f1d:	7e ca                	jle    8048ee9 <exit@plt+0x949>
 8048f1f:	cc                   	int3   
 8048f20:	cc                   	int3   
 8048f21:	b8 01 00 00 00       	mov    eax,0x1
 8048f26:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
 8048f29:	65 33 0d 14 00 00 00 	xor    ecx,DWORD PTR gs:0x14
 8048f30:	74 05                	je     8048f37 <exit@plt+0x997>
 8048f32:	e8 29 f6 ff ff       	call   8048560 <__stack_chk_fail@plt>
 8048f37:	c9                   	leave  
 8048f38:	c3                   	ret    
 8048f39:	55                   	push   ebp
 8048f3a:	89 e5                	mov    ebp,esp
 8048f3c:	56                   	push   esi
 8048f3d:	83 ec 10             	sub    esp,0x10
 8048f40:	c6 45 fb 00          	mov    BYTE PTR [ebp-0x5],0x0
 8048f44:	cc                   	int3   
 8048f45:	cc                   	int3   
 8048f46:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
 8048f49:	89 d6                	mov    esi,edx
 8048f4b:	31 c0                	xor    eax,eax
 8048f4d:	8a 06                	mov    al,BYTE PTR [esi]
 8048f4f:	3c 6c                	cmp    al,0x6c
 8048f51:	75 23                	jne    8048f76 <exit@plt+0x9d6>
 8048f53:	46                   	inc    esi
 8048f54:	8a 06                	mov    al,BYTE PTR [esi]
 8048f56:	3c 33                	cmp    al,0x33
 8048f58:	75 1c                	jne    8048f76 <exit@plt+0x9d6>
 8048f5a:	46                   	inc    esi
 8048f5b:	8a 06                	mov    al,BYTE PTR [esi]
 8048f5d:	3c 76                	cmp    al,0x76
 8048f5f:	75 15                	jne    8048f76 <exit@plt+0x9d6>
 8048f61:	46                   	inc    esi
 8048f62:	8a 06                	mov    al,BYTE PTR [esi]
 8048f64:	3c 33                	cmp    al,0x33
 8048f66:	75 0e                	jne    8048f76 <exit@plt+0x9d6>
 8048f68:	46                   	inc    esi
 8048f69:	8a 06                	mov    al,BYTE PTR [esi]
 8048f6b:	3c 6c                	cmp    al,0x6c
 8048f6d:	75 07                	jne    8048f76 <exit@plt+0x9d6>
 8048f6f:	b8 01 00 00 00       	mov    eax,0x1
 8048f74:	eb 02                	jmp    8048f78 <exit@plt+0x9d8>
 8048f76:	31 c0                	xor    eax,eax
 8048f78:	88 c2                	mov    dl,al
 8048f7a:	88 55 fb             	mov    BYTE PTR [ebp-0x5],dl
 8048f7d:	cc                   	int3   
 8048f7e:	cc                   	int3   
 8048f7f:	0f b6 45 fb          	movzx  eax,BYTE PTR [ebp-0x5]
 8048f83:	83 c4 10             	add    esp,0x10
 8048f86:	5e                   	pop    esi
 8048f87:	5d                   	pop    ebp
 8048f88:	c3                   	ret    
 8048f89:	55                   	push   ebp
 8048f8a:	89 e5                	mov    ebp,esp
 8048f8c:	53                   	push   ebx
 8048f8d:	83 ec 34             	sub    esp,0x34
 8048f90:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048f93:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
 8048f96:	65 a1 14 00 00 00    	mov    eax,gs:0x14
 8048f9c:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 8048f9f:	31 c0                	xor    eax,eax
 8048fa1:	a1 88 92 04 08       	mov    eax,ds:0x8049288
 8048fa6:	89 45 ea             	mov    DWORD PTR [ebp-0x16],eax
 8048fa9:	a1 8c 92 04 08       	mov    eax,ds:0x804928c
 8048fae:	89 45 ee             	mov    DWORD PTR [ebp-0x12],eax
 8048fb1:	0f b7 05 90 92 04 08 	movzx  eax,WORD PTR ds:0x8049290
 8048fb8:	66 89 45 f2          	mov    WORD PTR [ebp-0xe],ax
 8048fbc:	c7 05 84 b0 04 08 31 	mov    DWORD PTR ds:0x804b084,0x46473431
 8048fc3:	34 47 46 
 8048fc6:	ba 01 00 00 00       	mov    edx,0x1
 8048fcb:	f7 d2                	not    edx
 8048fcd:	89 d0                	mov    eax,edx
 8048fcf:	bb 42 00 00 00       	mov    ebx,0x42
 8048fd4:	f7 f3                	div    ebx
 8048fd6:	88 c1                	mov    cl,al
 8048fd8:	88 4d e3             	mov    BYTE PTR [ebp-0x1d],cl
 8048fdb:	cc                   	int3   
 8048fdc:	cc                   	int3   
 8048fdd:	c7 45 e4 1c 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x1c
 8048fe4:	eb 34                	jmp    804901a <exit@plt+0xa7a>
 8048fe6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
 8048fe9:	83 e8 1c             	sub    eax,0x1c
 8048fec:	0f b6 44 05 ea       	movzx  eax,BYTE PTR [ebp+eax*1-0x16]
 8048ff1:	0f be c0             	movsx  eax,al
 8048ff4:	0f b6 c0             	movzx  eax,al
 8048ff7:	8b 4d e4             	mov    ecx,DWORD PTR [ebp-0x1c]
 8048ffa:	8b 55 d4             	mov    edx,DWORD PTR [ebp-0x2c]
 8048ffd:	01 ca                	add    edx,ecx
 8048fff:	0f b6 12             	movzx  edx,BYTE PTR [edx]
 8049002:	0f be ca             	movsx  ecx,dl
 8049005:	0f b6 55 e3          	movzx  edx,BYTE PTR [ebp-0x1d]
 8049009:	31 ca                	xor    edx,ecx
 804900b:	39 d0                	cmp    eax,edx
 804900d:	74 07                	je     8049016 <exit@plt+0xa76>
 804900f:	b8 00 00 00 00       	mov    eax,0x0
 8049014:	eb 0f                	jmp    8049025 <exit@plt+0xa85>
 8049016:	83 45 e4 01          	add    DWORD PTR [ebp-0x1c],0x1
 804901a:	83 7d e4 23          	cmp    DWORD PTR [ebp-0x1c],0x23
 804901e:	7e c6                	jle    8048fe6 <exit@plt+0xa46>
 8049020:	b8 01 00 00 00       	mov    eax,0x1
 8049025:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
 8049028:	65 33 1d 14 00 00 00 	xor    ebx,DWORD PTR gs:0x14
 804902f:	74 05                	je     8049036 <exit@plt+0xa96>
 8049031:	e8 2a f5 ff ff       	call   8048560 <__stack_chk_fail@plt>
 8049036:	83 c4 34             	add    esp,0x34
 8049039:	5b                   	pop    ebx
 804903a:	5d                   	pop    ebp
 804903b:	c3                   	ret    
 804903c:	55                   	push   ebp
 804903d:	89 e5                	mov    ebp,esp
 804903f:	83 ec 18             	sub    esp,0x18
 8049042:	83 ec 0c             	sub    esp,0xc
 8049045:	6a 46                	push   0x46
 8049047:	e8 04 f5 ff ff       	call   8048550 <malloc@plt>
 804904c:	83 c4 10             	add    esp,0x10
 804904f:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 8049052:	83 ec 04             	sub    esp,0x4
 8049055:	6a 46                	push   0x46
 8049057:	6a 00                	push   0x0
 8049059:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
 804905c:	e8 af f4 ff ff       	call   8048510 <memset@plt>
 8049061:	83 c4 10             	add    esp,0x10
 8049064:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
 804906b:	eb 1c                	jmp    8049089 <exit@plt+0xae9>
 804906d:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
 8049070:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
 8049073:	01 d0                	add    eax,edx
 8049075:	8b 4d f0             	mov    ecx,DWORD PTR [ebp-0x10]
 8049078:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
 804907b:	01 ca                	add    edx,ecx
 804907d:	0f b6 12             	movzx  edx,BYTE PTR [edx]
 8049080:	83 f2 72             	xor    edx,0x72
 8049083:	88 10                	mov    BYTE PTR [eax],dl
 8049085:	83 45 f0 01          	add    DWORD PTR [ebp-0x10],0x1
 8049089:	83 7d f0 45          	cmp    DWORD PTR [ebp-0x10],0x45
 804908d:	7e de                	jle    804906d <exit@plt+0xacd>
 804908f:	83 ec 0c             	sub    esp,0xc
 8049092:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
 8049095:	e8 d6 f4 ff ff       	call   8048570 <puts@plt>
 804909a:	83 c4 10             	add    esp,0x10
 804909d:	90                   	nop
 804909e:	c9                   	leave  
 804909f:	c3                   	ret    
 80490a0:	55                   	push   ebp
 80490a1:	89 e5                	mov    ebp,esp
 80490a3:	83 ec 10             	sub    esp,0x10
 80490a6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 80490a9:	83 c0 04             	add    eax,0x4
 80490ac:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
 80490af:	cc                   	int3   
 80490b0:	cc                   	int3   
 80490b1:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
 80490b4:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 80490b7:	0f be c0             	movsx  eax,al
 80490ba:	83 e0 04             	and    eax,0x4
 80490bd:	85 c0                	test   eax,eax
 80490bf:	0f 84 b3 00 00 00    	je     8049178 <exit@plt+0xbd8>
 80490c5:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
 80490c8:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 80490cb:	0f be c0             	movsx  eax,al
 80490ce:	83 e0 40             	and    eax,0x40
 80490d1:	85 c0                	test   eax,eax
 80490d3:	0f 84 9f 00 00 00    	je     8049178 <exit@plt+0xbd8>
 80490d9:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
 80490dc:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 80490df:	0f be c0             	movsx  eax,al
 80490e2:	83 e0 01             	and    eax,0x1
 80490e5:	85 c0                	test   eax,eax
 80490e7:	0f 84 8b 00 00 00    	je     8049178 <exit@plt+0xbd8>
 80490ed:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
 80490f0:	83 c0 01             	add    eax,0x1
 80490f3:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 80490f6:	0f be c0             	movsx  eax,al
 80490f9:	f7 d0                	not    eax
 80490fb:	0f b6 c0             	movzx  eax,al
 80490fe:	3d 91 00 00 00       	cmp    eax,0x91
 8049103:	75 73                	jne    8049178 <exit@plt+0xbd8>
 8049105:	cc                   	int3   
 8049106:	cc                   	int3   
 8049107:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 804910a:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 804910d:	0f be c0             	movsx  eax,al
 8049110:	83 e0 20             	and    eax,0x20
 8049113:	89 c2                	mov    edx,eax
 8049115:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8049118:	83 c0 01             	add    eax,0x1
 804911b:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 804911e:	0f be c0             	movsx  eax,al
 8049121:	83 e0 20             	and    eax,0x20
 8049124:	01 c2                	add    edx,eax
 8049126:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8049129:	83 c0 02             	add    eax,0x2
 804912c:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 804912f:	0f be c0             	movsx  eax,al
 8049132:	83 e0 20             	and    eax,0x20
 8049135:	01 d0                	add    eax,edx
 8049137:	85 c0                	test   eax,eax
 8049139:	75 3d                	jne    8049178 <exit@plt+0xbd8>
 804913b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 804913e:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8049141:	0f be c0             	movsx  eax,al
 8049144:	83 e0 08             	and    eax,0x8
 8049147:	85 c0                	test   eax,eax
 8049149:	74 2d                	je     8049178 <exit@plt+0xbd8>
 804914b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 804914e:	83 c0 02             	add    eax,0x2
 8049151:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8049154:	0f be c0             	movsx  eax,al
 8049157:	83 e0 04             	and    eax,0x4
 804915a:	85 c0                	test   eax,eax
 804915c:	74 1a                	je     8049178 <exit@plt+0xbd8>
 804915e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8049161:	83 c0 01             	add    eax,0x1
 8049164:	0f b6 10             	movzx  edx,BYTE PTR [eax]
 8049167:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 804916a:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 804916d:	38 c2                	cmp    dl,al
 804916f:	74 07                	je     8049178 <exit@plt+0xbd8>
 8049171:	b8 01 00 00 00       	mov    eax,0x1
 8049176:	eb 05                	jmp    804917d <exit@plt+0xbdd>
 8049178:	b8 00 00 00 00       	mov    eax,0x0
 804917d:	c9                   	leave  
 804917e:	c3                   	ret    
 804917f:	90                   	nop
 8049180:	55                   	push   ebp
 8049181:	57                   	push   edi
 8049182:	56                   	push   esi
 8049183:	53                   	push   ebx
 8049184:	e8 67 f4 ff ff       	call   80485f0 <exit@plt+0x50>
 8049189:	81 c3 77 1e 00 00    	add    ebx,0x1e77
 804918f:	83 ec 0c             	sub    esp,0xc
 8049192:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
 8049196:	8d b3 04 ff ff ff    	lea    esi,[ebx-0xfc]
 804919c:	e8 23 f3 ff ff       	call   80484c4 <signal@plt-0x3c>
 80491a1:	8d 83 00 ff ff ff    	lea    eax,[ebx-0x100]
 80491a7:	29 c6                	sub    esi,eax
 80491a9:	c1 fe 02             	sar    esi,0x2
 80491ac:	85 f6                	test   esi,esi
 80491ae:	74 25                	je     80491d5 <exit@plt+0xc35>
 80491b0:	31 ff                	xor    edi,edi
 80491b2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80491b8:	83 ec 04             	sub    esp,0x4
 80491bb:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 80491bf:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 80491c3:	55                   	push   ebp
 80491c4:	ff 94 bb 00 ff ff ff 	call   DWORD PTR [ebx+edi*4-0x100]
 80491cb:	83 c7 01             	add    edi,0x1
 80491ce:	83 c4 10             	add    esp,0x10
 80491d1:	39 f7                	cmp    edi,esi
 80491d3:	75 e3                	jne    80491b8 <exit@plt+0xc18>
 80491d5:	83 c4 0c             	add    esp,0xc
 80491d8:	5b                   	pop    ebx
 80491d9:	5e                   	pop    esi
 80491da:	5f                   	pop    edi
 80491db:	5d                   	pop    ebp
 80491dc:	c3                   	ret    
 80491dd:	8d 76 00             	lea    esi,[esi+0x0]
 80491e0:	f3 c3                	repz ret 

Disassembly of section .fini:

080491e4 <.fini>:
 80491e4:	53                   	push   ebx
 80491e5:	83 ec 08             	sub    esp,0x8
 80491e8:	e8 03 f4 ff ff       	call   80485f0 <exit@plt+0x50>
 80491ed:	81 c3 13 1e 00 00    	add    ebx,0x1e13
 80491f3:	83 c4 08             	add    esp,0x8
 80491f6:	5b                   	pop    ebx
 80491f7:	c3                   	ret    

Disassembly of section .rodata:

080491f8 <_IO_stdin_used@@Base-0x4>:
 80491f8:	03 00                	add    eax,DWORD PTR [eax]
	...

080491fc <_IO_stdin_used@@Base>:
 80491fc:	01 00                	add    DWORD PTR [eax],eax
 80491fe:	02 00                	add    al,BYTE PTR [eax]
 8049200:	59                   	pop    ecx
 8049201:	6f                   	outs   dx,DWORD PTR ds:[esi]
 8049202:	75 20                	jne    8049224 <_IO_stdin_used@@Base+0x28>
 8049204:	6d                   	ins    DWORD PTR es:[edi],dx
 8049205:	69 67 68 74 20 77 61 	imul   esp,DWORD PTR [edi+0x68],0x61772074
 804920c:	6e                   	outs   dx,BYTE PTR ds:[esi]
 804920d:	74 20                	je     804922f <_IO_stdin_used@@Base+0x33>
 804920f:	74 6f                	je     8049280 <_IO_stdin_used@@Base+0x84>
 8049211:	20 73 75             	and    BYTE PTR [ebx+0x75],dh
 8049214:	62 6d 69             	bound  ebp,QWORD PTR [ebp+0x69]
 8049217:	74 20                	je     8049239 <_IO_stdin_used@@Base+0x3d>
 8049219:	74 68                	je     8049283 <_IO_stdin_used@@Base+0x87>
 804921b:	65 20 70 61          	and    BYTE PTR gs:[eax+0x61],dh
 804921f:	73 73                	jae    8049294 <_IO_stdin_used@@Base+0x98>
 8049221:	77 6f                	ja     8049292 <_IO_stdin_used@@Base+0x96>
 8049223:	72 64                	jb     8049289 <_IO_stdin_used@@Base+0x8d>
 8049225:	20 74 6f 20          	and    BYTE PTR [edi+ebp*2+0x20],dh
 8049229:	67 61                	addr16 popa 
 804922b:	69 6e 20 61 63 63 65 	imul   ebp,DWORD PTR [esi+0x20],0x65636361
 8049232:	73 73                	jae    80492a7 <_IO_stdin_used@@Base+0xab>
 8049234:	2e 00 00             	add    BYTE PTR cs:[eax],al
 8049237:	00 31                	add    BYTE PTR [ecx],dh
 8049239:	1d 1c 15 00 13       	sbb    eax,0x1300151c
 804923e:	06                   	push   es
 804923f:	07                   	pop    es
 8049240:	1e                   	push   ds
 8049241:	13 06                	adc    eax,DWORD PTR [esi]
 8049243:	1b 1d 1c 01 5c 52    	sbb    ebx,DWORD PTR ds:0x525c011c
 8049249:	26 1a 17             	sbb    dl,BYTE PTR es:[edi]
 804924c:	52                   	push   edx
 804924d:	11 1a                	adc    DWORD PTR [edx],ebx
 804924f:	17                   	pop    ss
 8049250:	13 06                	adc    eax,DWORD PTR [esi]
 8049252:	17                   	pop    ss
 8049253:	00 52 14             	add    BYTE PTR [edx+0x14],dl
 8049256:	1d 07 1c 16 52       	sbb    eax,0x52161c07
 804925b:	1a 1b                	sbb    bl,BYTE PTR [ebx]
 804925d:	01 52 05             	add    DWORD PTR [edx+0x5],edx
 8049260:	13 0b                	adc    ecx,DWORD PTR [ebx]
 8049262:	52                   	push   edx
 8049263:	1b 1c 52             	sbb    ebx,DWORD PTR [edx+edx*2]
 8049266:	10 0b                	adc    BYTE PTR [ebx],cl
 8049268:	52                   	push   edx
 8049269:	16                   	push   ss
 804926a:	1b 01                	sbb    eax,DWORD PTR [ecx]
 804926c:	11 1d 04 17 00 1b    	adc    DWORD PTR ds:0x1b001704,ebx
 8049272:	1c 15                	sbb    al,0x15
 8049274:	52                   	push   edx
 8049275:	06                   	push   es
 8049276:	1a 17                	sbb    dl,BYTE PTR [edi]
 8049278:	52                   	push   edx
 8049279:	14 1e                	adc    al,0x1e
 804927b:	13 15 5c 00 00 4b    	adc    edx,DWORD PTR ds:0x4b00005c
 8049281:	45                   	inc    ebp
 8049282:	59                   	pop    ecx
 8049283:	00 04 27             	add    BYTE PTR [edi+eiz*1],al
 8049286:	6c                   	ins    BYTE PTR es:[edi],dx
 8049287:	00 d7                	add    bh,dl
 8049289:	dc a7 d5 c0 a7 c6    	fsub   QWORD PTR [edi-0x39583f2b]
 804928f:	a1                   	.byte 0xa1
	...

Disassembly of section .eh_frame_hdr:

08049294 <.eh_frame_hdr>:
 8049294:	01 1b                	add    DWORD PTR [ebx],ebx
 8049296:	03 3b                	add    edi,DWORD PTR [ebx]
 8049298:	98                   	cwde   
 8049299:	00 00                	add    BYTE PTR [eax],al
 804929b:	00 12                	add    BYTE PTR [edx],dl
 804929d:	00 00                	add    BYTE PTR [eax],al
 804929f:	00 5c f2 ff          	add    BYTE PTR [edx+esi*8-0x1],bl
 80492a3:	ff b4 00 00 00 27 f4 	push   DWORD PTR [eax+eax*1-0xbd90000]
 80492aa:	ff                   	(bad)  
 80492ab:	ff                   	(bad)  
 80492ac:	d8 00                	fadd   DWORD PTR [eax]
 80492ae:	00 00                	add    BYTE PTR [eax],al
 80492b0:	1e                   	push   ds
 80492b1:	f6 ff                	idiv   bh
 80492b3:	ff 1c 01             	call   FWORD PTR [ecx+eax*1]
 80492b6:	00 00                	add    BYTE PTR [eax],al
 80492b8:	32 f7                	xor    dh,bh
 80492ba:	ff                   	(bad)  
 80492bb:	ff 48 01             	dec    DWORD PTR [eax+0x1]
 80492be:	00 00                	add    BYTE PTR [eax],al
 80492c0:	eb f7                	jmp    80492b9 <_IO_stdin_used@@Base+0xbd>
 80492c2:	ff                   	(bad)  
 80492c3:	ff 70 01             	push   DWORD PTR [eax+0x1]
 80492c6:	00 00                	add    BYTE PTR [eax],al
 80492c8:	80 f8 ff             	cmp    al,0xff
 80492cb:	ff 90 01 00 00 38    	call   DWORD PTR [eax+0x38000001]
 80492d1:	f9                   	stc    
 80492d2:	ff                   	(bad)  
 80492d3:	ff                   	(bad)  
 80492d4:	b8 01 00 00 96       	mov    eax,0x96000001
 80492d9:	f9                   	stc    
 80492da:	ff                   	(bad)  
 80492db:	ff                   	(bad)  
 80492dc:	d8 01                	fadd   DWORD PTR [ecx]
 80492de:	00 00                	add    BYTE PTR [eax],al
 80492e0:	1a fa                	sbb    bh,dl
 80492e2:	ff                   	(bad)  
 80492e3:	ff                   	(bad)  
 80492e4:	f8                   	clc    
 80492e5:	01 00                	add    DWORD PTR [eax],eax
 80492e7:	00 e9                	add    cl,ch
 80492e9:	fa                   	cli    
 80492ea:	ff                   	(bad)  
 80492eb:	ff 18                	call   FWORD PTR [eax]
 80492ed:	02 00                	add    al,BYTE PTR [eax]
 80492ef:	00 a0 fb ff ff 38    	add    BYTE PTR [eax+0x38fffffb],ah
 80492f5:	02 00                	add    al,BYTE PTR [eax]
 80492f7:	00 f5                	add    ch,dh
 80492f9:	fb                   	sti    
 80492fa:	ff                   	(bad)  
 80492fb:	ff 58 02             	call   FWORD PTR [eax+0x2]
 80492fe:	00 00                	add    BYTE PTR [eax],al
 8049300:	a5                   	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 8049301:	fc                   	cld    
 8049302:	ff                   	(bad)  
 8049303:	ff                   	(bad)  
 8049304:	78 02                	js     8049308 <_IO_stdin_used@@Base+0x10c>
 8049306:	00 00                	add    BYTE PTR [eax],al
 8049308:	f5                   	cmc    
 8049309:	fc                   	cld    
 804930a:	ff                   	(bad)  
 804930b:	ff 9c 02 00 00 a8 fd 	call   FWORD PTR [edx+eax*1-0x2580000]
 8049312:	ff                   	(bad)  
 8049313:	ff c0                	inc    eax
 8049315:	02 00                	add    al,BYTE PTR [eax]
 8049317:	00 0c fe             	add    BYTE PTR [esi+edi*8],cl
 804931a:	ff                   	(bad)  
 804931b:	ff e0                	jmp    eax
 804931d:	02 00                	add    al,BYTE PTR [eax]
 804931f:	00 ec                	add    ah,ch
 8049321:	fe                   	(bad)  
 8049322:	ff                   	(bad)  
 8049323:	ff 00                	inc    DWORD PTR [eax]
 8049325:	03 00                	add    eax,DWORD PTR [eax]
 8049327:	00 4c ff ff          	add    BYTE PTR [edi+edi*8-0x1],cl
 804932b:	ff 4c 03 00          	dec    DWORD PTR [ebx+eax*1+0x0]
	...

Disassembly of section .eh_frame:

08049330 <.eh_frame>:
 8049330:	14 00                	adc    al,0x0
 8049332:	00 00                	add    BYTE PTR [eax],al
 8049334:	00 00                	add    BYTE PTR [eax],al
 8049336:	00 00                	add    BYTE PTR [eax],al
 8049338:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 804933b:	00 01                	add    BYTE PTR [ecx],al
 804933d:	7c 08                	jl     8049347 <_IO_stdin_used@@Base+0x14b>
 804933f:	01 1b                	add    DWORD PTR [ebx],ebx
 8049341:	0c 04                	or     al,0x4
 8049343:	04 88                	add    al,0x88
 8049345:	01 00                	add    DWORD PTR [eax],eax
 8049347:	00 20                	add    BYTE PTR [eax],ah
 8049349:	00 00                	add    BYTE PTR [eax],al
 804934b:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 804934e:	00 00                	add    BYTE PTR [eax],al
 8049350:	a0 f1 ff ff c0       	mov    al,ds:0xc0fffff1
 8049355:	00 00                	add    BYTE PTR [eax],al
 8049357:	00 00                	add    BYTE PTR [eax],al
 8049359:	0e                   	push   cs
 804935a:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 804935d:	0c 4a                	or     al,0x4a
 804935f:	0f 0b                	ud2    
 8049361:	74 04                	je     8049367 <_IO_stdin_used@@Base+0x16b>
 8049363:	78 00                	js     8049365 <_IO_stdin_used@@Base+0x169>
 8049365:	3f                   	aas    
 8049366:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 8049368:	2a 32                	sub    dh,BYTE PTR [edx]
 804936a:	24 22                	and    al,0x22
 804936c:	40                   	inc    eax
 804936d:	00 00                	add    BYTE PTR [eax],al
 804936f:	00 40 00             	add    BYTE PTR [eax+0x0],al
 8049372:	00 00                	add    BYTE PTR [eax],al
 8049374:	47                   	inc    edi
 8049375:	f3 ff                	repz (bad) 
 8049377:	ff f7                	push   edi
 8049379:	01 00                	add    DWORD PTR [eax],eax
 804937b:	00 00                	add    BYTE PTR [eax],al
 804937d:	44                   	inc    esp
 804937e:	0c 01                	or     al,0x1
 8049380:	00 47 10             	add    BYTE PTR [edi+0x10],al
 8049383:	05 02 75 00 46       	add    eax,0x46007502
 8049388:	0f 03 75 70          	lsl    esi,WORD PTR [ebp+0x70]
 804938c:	06                   	push   es
 804938d:	10 07                	adc    BYTE PTR [edi],al
 804938f:	02 75 7c             	add    dh,BYTE PTR [ebp+0x7c]
 8049392:	10 06                	adc    BYTE PTR [esi],al
 8049394:	02 75 78             	add    dh,BYTE PTR [ebp+0x78]
 8049397:	10 03                	adc    BYTE PTR [ebx],al
 8049399:	02 75 74             	add    dh,BYTE PTR [ebp+0x74]
 804939c:	03 de                	add    ebx,esi
 804939e:	01 c1                	add    ecx,eax
 80493a0:	0c 01                	or     al,0x1
 80493a2:	00 41 c3             	add    BYTE PTR [ecx-0x3d],al
 80493a5:	41                   	inc    ecx
 80493a6:	c6 41 c7 41          	mov    BYTE PTR [ecx-0x39],0x41
 80493aa:	c5 43 0c             	lds    eax,FWORD PTR [ebx+0xc]
 80493ad:	04 04                	add    al,0x4
 80493af:	00 28                	add    BYTE PTR [eax],ch
 80493b1:	00 00                	add    BYTE PTR [eax],al
 80493b3:	00 84 00 00 00 fa f4 	add    BYTE PTR [eax+eax*1-0xb060000],al
 80493ba:	ff                   	(bad)  
 80493bb:	ff 14 01             	call   DWORD PTR [ecx+eax*1]
 80493be:	00 00                	add    BYTE PTR [eax],al
 80493c0:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 80493c3:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 80493c9:	48                   	dec    eax
 80493ca:	86 03                	xchg   BYTE PTR [ebx],al
 80493cc:	83 04 03 06          	add    DWORD PTR [ebx+eax*1],0x6
 80493d0:	01 c3                	add    ebx,eax
 80493d2:	41                   	inc    ecx
 80493d3:	c6 41 c5 0c          	mov    BYTE PTR [ecx-0x3b],0xc
 80493d7:	04 04                	add    al,0x4
 80493d9:	00 00                	add    BYTE PTR [eax],al
 80493db:	00 24 00             	add    BYTE PTR [eax+eax*1],ah
 80493de:	00 00                	add    BYTE PTR [eax],al
 80493e0:	b0 00                	mov    al,0x0
 80493e2:	00 00                	add    BYTE PTR [eax],al
 80493e4:	e2 f5                	loop   80493db <_IO_stdin_used@@Base+0x1df>
 80493e6:	ff                   	(bad)  
 80493e7:	ff                   	(bad)  
 80493e8:	b9 00 00 00 00       	mov    ecx,0x0
 80493ed:	41                   	inc    ecx
 80493ee:	0e                   	push   cs
 80493ef:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 80493f5:	42                   	inc    edx
 80493f6:	86 03                	xchg   BYTE PTR [ebx],al
 80493f8:	83 04 02 b1          	add    DWORD PTR [edx+eax*1],0xffffffb1
 80493fc:	c3                   	ret    
 80493fd:	41                   	inc    ecx
 80493fe:	c6 41 c5 0c          	mov    BYTE PTR [ecx-0x3b],0xc
 8049402:	04 04                	add    al,0x4
 8049404:	1c 00                	sbb    al,0x0
 8049406:	00 00                	add    BYTE PTR [eax],al
 8049408:	d8 00                	fadd   DWORD PTR [eax]
 804940a:	00 00                	add    BYTE PTR [eax],al
 804940c:	73 f6                	jae    8049404 <_IO_stdin_used@@Base+0x208>
 804940e:	ff                   	(bad)  
 804940f:	ff 95 00 00 00 00    	call   DWORD PTR [ebp+0x0]
 8049415:	41                   	inc    ecx
 8049416:	0e                   	push   cs
 8049417:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 804941d:	02 91 c5 0c 04 04    	add    dl,BYTE PTR [ecx+0x4040cc5]
 8049423:	00 24 00             	add    BYTE PTR [eax+eax*1],ah
 8049426:	00 00                	add    BYTE PTR [eax],al
 8049428:	f8                   	clc    
 8049429:	00 00                	add    BYTE PTR [eax],al
 804942b:	00 e8                	add    al,ch
 804942d:	f6 ff                	idiv   bh
 804942f:	ff                   	(bad)  
 8049430:	b8 00 00 00 00       	mov    eax,0x0
 8049435:	41                   	inc    ecx
 8049436:	0e                   	push   cs
 8049437:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 804943d:	45                   	inc    ebp
 804943e:	86 03                	xchg   BYTE PTR [ebx],al
 8049440:	83 04 02 ad          	add    DWORD PTR [edx+eax*1],0xffffffad
 8049444:	c3                   	ret    
 8049445:	41                   	inc    ecx
 8049446:	c6 41 c5 0c          	mov    BYTE PTR [ecx-0x3b],0xc
 804944a:	04 04                	add    al,0x4
 804944c:	1c 00                	sbb    al,0x0
 804944e:	00 00                	add    BYTE PTR [eax],al
 8049450:	20 01                	and    BYTE PTR [ecx],al
 8049452:	00 00                	add    BYTE PTR [eax],al
 8049454:	78 f7                	js     804944d <_IO_stdin_used@@Base+0x251>
 8049456:	ff                   	(bad)  
 8049457:	ff 5e 00             	call   FWORD PTR [esi+0x0]
 804945a:	00 00                	add    BYTE PTR [eax],al
 804945c:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 804945f:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8049465:	02 5a c5             	add    bl,BYTE PTR [edx-0x3b]
 8049468:	0c 04                	or     al,0x4
 804946a:	04 00                	add    al,0x0
 804946c:	1c 00                	sbb    al,0x0
 804946e:	00 00                	add    BYTE PTR [eax],al
 8049470:	40                   	inc    eax
 8049471:	01 00                	add    DWORD PTR [eax],eax
 8049473:	00 b6 f7 ff ff 84    	add    BYTE PTR [esi-0x7b000009],dh
 8049479:	00 00                	add    BYTE PTR [eax],al
 804947b:	00 00                	add    BYTE PTR [eax],al
 804947d:	41                   	inc    ecx
 804947e:	0e                   	push   cs
 804947f:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8049485:	02 80 c5 0c 04 04    	add    al,BYTE PTR [eax+0x4040cc5]
 804948b:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 804948e:	00 00                	add    BYTE PTR [eax],al
 8049490:	60                   	pusha  
 8049491:	01 00                	add    DWORD PTR [eax],eax
 8049493:	00 1a                	add    BYTE PTR [edx],bl
 8049495:	f8                   	clc    
 8049496:	ff                   	(bad)  
 8049497:	ff cf                	dec    edi
 8049499:	00 00                	add    BYTE PTR [eax],al
 804949b:	00 00                	add    BYTE PTR [eax],al
 804949d:	41                   	inc    ecx
 804949e:	0e                   	push   cs
 804949f:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 80494a5:	02 cb                	add    cl,bl
 80494a7:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 80494aa:	04 00                	add    al,0x0
 80494ac:	1c 00                	sbb    al,0x0
 80494ae:	00 00                	add    BYTE PTR [eax],al
 80494b0:	80 01 00             	add    BYTE PTR [ecx],0x0
 80494b3:	00 c9                	add    cl,cl
 80494b5:	f8                   	clc    
 80494b6:	ff                   	(bad)  
 80494b7:	ff b7 00 00 00 00    	push   DWORD PTR [edi+0x0]
 80494bd:	41                   	inc    ecx
 80494be:	0e                   	push   cs
 80494bf:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 80494c5:	02 b3 c5 0c 04 04    	add    dh,BYTE PTR [ebx+0x4040cc5]
 80494cb:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 80494ce:	00 00                	add    BYTE PTR [eax],al
 80494d0:	a0 01 00 00 60       	mov    al,ds:0x60000001
 80494d5:	f9                   	stc    
 80494d6:	ff                   	(bad)  
 80494d7:	ff 55 00             	call   DWORD PTR [ebp+0x0]
 80494da:	00 00                	add    BYTE PTR [eax],al
 80494dc:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 80494df:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 80494e5:	02 51 c5             	add    dl,BYTE PTR [ecx-0x3b]
 80494e8:	0c 04                	or     al,0x4
 80494ea:	04 00                	add    al,0x0
 80494ec:	1c 00                	sbb    al,0x0
 80494ee:	00 00                	add    BYTE PTR [eax],al
 80494f0:	c0 01 00             	rol    BYTE PTR [ecx],0x0
 80494f3:	00 95 f9 ff ff b0    	add    BYTE PTR [ebp-0x4f000007],dl
 80494f9:	00 00                	add    BYTE PTR [eax],al
 80494fb:	00 00                	add    BYTE PTR [eax],al
 80494fd:	41                   	inc    ecx
 80494fe:	0e                   	push   cs
 80494ff:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8049505:	02 ac c5 0c 04 04 00 	add    ch,BYTE PTR [ebp+eax*8+0x4040c]
 804950c:	20 00                	and    BYTE PTR [eax],al
 804950e:	00 00                	add    BYTE PTR [eax],al
 8049510:	e0 01                	loopne 8049513 <_IO_stdin_used@@Base+0x317>
 8049512:	00 00                	add    BYTE PTR [eax],al
 8049514:	25 fa ff ff 50       	and    eax,0x50fffffa
 8049519:	00 00                	add    BYTE PTR [eax],al
 804951b:	00 00                	add    BYTE PTR [eax],al
 804951d:	41                   	inc    ecx
 804951e:	0e                   	push   cs
 804951f:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8049525:	44                   	inc    esp
 8049526:	86 03                	xchg   BYTE PTR [ebx],al
 8049528:	02 47 c6             	add    al,BYTE PTR [edi-0x3a]
 804952b:	41                   	inc    ecx
 804952c:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 804952f:	04 20                	add    al,0x20
 8049531:	00 00                	add    BYTE PTR [eax],al
 8049533:	00 04 02             	add    BYTE PTR [edx+eax*1],al
 8049536:	00 00                	add    BYTE PTR [eax],al
 8049538:	51                   	push   ecx
 8049539:	fa                   	cli    
 804953a:	ff                   	(bad)  
 804953b:	ff b3 00 00 00 00    	push   DWORD PTR [ebx+0x0]
 8049541:	41                   	inc    ecx
 8049542:	0e                   	push   cs
 8049543:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8049549:	44                   	inc    esp
 804954a:	83 03 02             	add    DWORD PTR [ebx],0x2
 804954d:	aa                   	stos   BYTE PTR es:[edi],al
 804954e:	c3                   	ret    
 804954f:	41                   	inc    ecx
 8049550:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 8049553:	04 1c                	add    al,0x1c
 8049555:	00 00                	add    BYTE PTR [eax],al
 8049557:	00 28                	add    BYTE PTR [eax],ch
 8049559:	02 00                	add    al,BYTE PTR [eax]
 804955b:	00 e0                	add    al,ah
 804955d:	fa                   	cli    
 804955e:	ff                   	(bad)  
 804955f:	ff 64 00 00          	jmp    DWORD PTR [eax+eax*1+0x0]
 8049563:	00 00                	add    BYTE PTR [eax],al
 8049565:	41                   	inc    ecx
 8049566:	0e                   	push   cs
 8049567:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 804956d:	02 60 c5             	add    ah,BYTE PTR [eax-0x3b]
 8049570:	0c 04                	or     al,0x4
 8049572:	04 00                	add    al,0x0
 8049574:	1c 00                	sbb    al,0x0
 8049576:	00 00                	add    BYTE PTR [eax],al
 8049578:	48                   	dec    eax
 8049579:	02 00                	add    al,BYTE PTR [eax]
 804957b:	00 24 fb             	add    BYTE PTR [ebx+edi*8],ah
 804957e:	ff                   	(bad)  
 804957f:	ff                   	(bad)  
 8049580:	df 00                	fild   WORD PTR [eax]
 8049582:	00 00                	add    BYTE PTR [eax],al
 8049584:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 8049587:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 804958d:	02 db                	add    bl,bl
 804958f:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 8049592:	04 00                	add    al,0x0
 8049594:	48                   	dec    eax
 8049595:	00 00                	add    BYTE PTR [eax],al
 8049597:	00 68 02             	add    BYTE PTR [eax+0x2],ch
 804959a:	00 00                	add    BYTE PTR [eax],al
 804959c:	e4 fb                	in     al,0xfb
 804959e:	ff                   	(bad)  
 804959f:	ff 5d 00             	call   FWORD PTR [ebp+0x0]
 80495a2:	00 00                	add    BYTE PTR [eax],al
 80495a4:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 80495a7:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 80495ad:	87 03                	xchg   DWORD PTR [ebx],eax
 80495af:	41                   	inc    ecx
 80495b0:	0e                   	push   cs
 80495b1:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 80495b7:	83 05 4e 0e 20 69 0e 	add    DWORD PTR ds:0x69200e4e,0xe
 80495be:	24 44                	and    al,0x44
 80495c0:	0e                   	push   cs
 80495c1:	28 44 0e 2c          	sub    BYTE PTR [esi+ecx*1+0x2c],al
 80495c5:	41                   	inc    ecx
 80495c6:	0e                   	push   cs
 80495c7:	30 4d 0e             	xor    BYTE PTR [ebp+0xe],cl
 80495ca:	20 47 0e             	and    BYTE PTR [edi+0xe],al
 80495cd:	14 41                	adc    al,0x41
 80495cf:	c3                   	ret    
 80495d0:	0e                   	push   cs
 80495d1:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 80495d4:	0e                   	push   cs
 80495d5:	0c 41                	or     al,0x41
 80495d7:	c7                   	(bad)  
 80495d8:	0e                   	push   cs
 80495d9:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 80495dc:	0e                   	push   cs
 80495dd:	04 00                	add    al,0x0
 80495df:	00 10                	add    BYTE PTR [eax],dl
 80495e1:	00 00                	add    BYTE PTR [eax],al
 80495e3:	00 b4 02 00 00 f8 fb 	add    BYTE PTR [edx+eax*1-0x4080000],dh
 80495ea:	ff                   	(bad)  
 80495eb:	ff 02                	inc    DWORD PTR [edx]
	...

Disassembly of section .init_array:

0804af00 <.init_array>:
 804af00:	90                   	nop
 804af01:	86 04 08             	xchg   BYTE PTR [eax+ecx*1],al

Disassembly of section .fini_array:

0804af04 <.fini_array>:
 804af04:	70 86                	jo     804ae8c <_IO_stdin_used@@Base+0x1c90>
 804af06:	04 08                	add    al,0x8

Disassembly of section .jcr:

0804af08 <.jcr>:
 804af08:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynamic:

0804af0c <.dynamic>:
 804af0c:	01 00                	add    DWORD PTR [eax],eax
 804af0e:	00 00                	add    BYTE PTR [eax],al
 804af10:	01 00                	add    DWORD PTR [eax],eax
 804af12:	00 00                	add    BYTE PTR [eax],al
 804af14:	01 00                	add    DWORD PTR [eax],eax
 804af16:	00 00                	add    BYTE PTR [eax],al
 804af18:	92                   	xchg   edx,eax
 804af19:	00 00                	add    BYTE PTR [eax],al
 804af1b:	00 0c 00             	add    BYTE PTR [eax+eax*1],cl
 804af1e:	00 00                	add    BYTE PTR [eax],al
 804af20:	c4 84 04 08 0d 00 00 	les    eax,FWORD PTR [esp+eax*1+0xd08]
 804af27:	00 e4                	add    ah,ah
 804af29:	91                   	xchg   ecx,eax
 804af2a:	04 08                	add    al,0x8
 804af2c:	19 00                	sbb    DWORD PTR [eax],eax
 804af2e:	00 00                	add    BYTE PTR [eax],al
 804af30:	00 af 04 08 1b 00    	add    BYTE PTR [edi+0x1b0804],ch
 804af36:	00 00                	add    BYTE PTR [eax],al
 804af38:	04 00                	add    al,0x0
 804af3a:	00 00                	add    BYTE PTR [eax],al
 804af3c:	1a 00                	sbb    al,BYTE PTR [eax]
 804af3e:	00 00                	add    BYTE PTR [eax],al
 804af40:	04 af                	add    al,0xaf
 804af42:	04 08                	add    al,0x8
 804af44:	1c 00                	sbb    al,0x0
 804af46:	00 00                	add    BYTE PTR [eax],al
 804af48:	04 00                	add    al,0x0
 804af4a:	00 00                	add    BYTE PTR [eax],al
 804af4c:	f5                   	cmc    
 804af4d:	fe                   	(bad)  
 804af4e:	ff 6f ac             	jmp    FWORD PTR [edi-0x54]
 804af51:	81 04 08 05 00 00 00 	add    DWORD PTR [eax+ecx*1],0x5
 804af58:	dc 82 04 08 06 00    	fadd   QWORD PTR [edx+0x60804]
 804af5e:	00 00                	add    BYTE PTR [eax],al
 804af60:	cc                   	int3   
 804af61:	81 04 08 0a 00 00 00 	add    DWORD PTR [eax+ecx*1],0xa
 804af68:	16                   	push   ss
 804af69:	01 00                	add    DWORD PTR [eax],eax
 804af6b:	00 0b                	add    BYTE PTR [ebx],cl
 804af6d:	00 00                	add    BYTE PTR [eax],al
 804af6f:	00 10                	add    BYTE PTR [eax],dl
 804af71:	00 00                	add    BYTE PTR [eax],al
 804af73:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
 804af79:	00 00                	add    BYTE PTR [eax],al
 804af7b:	00 03                	add    BYTE PTR [ebx],al
 804af7d:	00 00                	add    BYTE PTR [eax],al
 804af7f:	00 00                	add    BYTE PTR [eax],al
 804af81:	b0 04                	mov    al,0x4
 804af83:	08 02                	or     BYTE PTR [edx],al
 804af85:	00 00                	add    BYTE PTR [eax],al
 804af87:	00 58 00             	add    BYTE PTR [eax+0x0],bl
 804af8a:	00 00                	add    BYTE PTR [eax],al
 804af8c:	14 00                	adc    al,0x0
 804af8e:	00 00                	add    BYTE PTR [eax],al
 804af90:	11 00                	adc    DWORD PTR [eax],eax
 804af92:	00 00                	add    BYTE PTR [eax],al
 804af94:	17                   	pop    ss
 804af95:	00 00                	add    BYTE PTR [eax],al
 804af97:	00 6c 84 04          	add    BYTE PTR [esp+eax*4+0x4],ch
 804af9b:	08 11                	or     BYTE PTR [ecx],dl
 804af9d:	00 00                	add    BYTE PTR [eax],al
 804af9f:	00 64 84 04          	add    BYTE PTR [esp+eax*4+0x4],ah
 804afa3:	08 12                	or     BYTE PTR [edx],dl
 804afa5:	00 00                	add    BYTE PTR [eax],al
 804afa7:	00 08                	add    BYTE PTR [eax],cl
 804afa9:	00 00                	add    BYTE PTR [eax],al
 804afab:	00 13                	add    BYTE PTR [ebx],dl
 804afad:	00 00                	add    BYTE PTR [eax],al
 804afaf:	00 08                	add    BYTE PTR [eax],cl
 804afb1:	00 00                	add    BYTE PTR [eax],al
 804afb3:	00 fe                	add    dh,bh
 804afb5:	ff                   	(bad)  
 804afb6:	ff 6f 14             	jmp    FWORD PTR [edi+0x14]
 804afb9:	84 04 08             	test   BYTE PTR [eax+ecx*1],al
 804afbc:	ff                   	(bad)  
 804afbd:	ff                   	(bad)  
 804afbe:	ff 6f 02             	jmp    FWORD PTR [edi+0x2]
 804afc1:	00 00                	add    BYTE PTR [eax],al
 804afc3:	00 f0                	add    al,dh
 804afc5:	ff                   	(bad)  
 804afc6:	ff 6f f2             	jmp    FWORD PTR [edi-0xe]
 804afc9:	83 04 08 00          	add    DWORD PTR [eax+ecx*1],0x0
	...

Disassembly of section .got:

0804affc <.got>:
 804affc:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

0804b000 <.got.plt>:
 804b000:	0c af                	or     al,0xaf
 804b002:	04 08                	add    al,0x8
	...
 804b00c:	06                   	push   es
 804b00d:	85 04 08             	test   DWORD PTR [eax+ecx*1],eax
 804b010:	16                   	push   ss
 804b011:	85 04 08             	test   DWORD PTR [eax+ecx*1],eax
 804b014:	26 85 04 08          	test   DWORD PTR es:[eax+ecx*1],eax
 804b018:	36 85 04 08          	test   DWORD PTR ss:[eax+ecx*1],eax
 804b01c:	46                   	inc    esi
 804b01d:	85 04 08             	test   DWORD PTR [eax+ecx*1],eax
 804b020:	56                   	push   esi
 804b021:	85 04 08             	test   DWORD PTR [eax+ecx*1],eax
 804b024:	66 85 04 08          	test   WORD PTR [eax+ecx*1],ax
 804b028:	76 85                	jbe    804afaf <_IO_stdin_used@@Base+0x1db3>
 804b02a:	04 08                	add    al,0x8
 804b02c:	86 85 04 08 96 85    	xchg   BYTE PTR [ebp-0x7a69f7fc],al
 804b032:	04 08                	add    al,0x8
 804b034:	a6                   	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 804b035:	85 04 08             	test   DWORD PTR [eax+ecx*1],eax

Disassembly of section .data:

0804b040 <.data>:
	...
 804b060:	15 27 2e 2e 62       	adc    eax,0x622e2e27
 804b065:	26 2d 2c 27 6e 62    	es sub eax,0x626e272c
 804b06b:	20 37                	and    BYTE PTR [edi],dh
 804b06d:	36 62 3b             	bound  edi,QWORD PTR ss:[ebx]
 804b070:	2d 37 62 35 27       	sub    eax,0x27356237
 804b075:	30 27                	xor    BYTE PTR [edi],ah
 804b077:	62 2f                	bound  ebp,QWORD PTR [edi]
 804b079:	2b 31                	sub    esi,DWORD PTR [ecx]
 804b07b:	2e 27                	cs daa 
 804b07d:	23 26                	and    esp,DWORD PTR [esi]
 804b07f:	6c                   	ins    BYTE PTR es:[edi],dx
 804b080:	00 00                	add    BYTE PTR [eax],al
 804b082:	00 00                	add    BYTE PTR [eax],al
 804b084:	ef                   	out    dx,eax
 804b085:	be                   	.byte 0xbe
 804b086:	ad                   	lods   eax,DWORD PTR ds:[esi]
 804b087:	de                   	.byte 0xde

Disassembly of section .bss:

0804b088 <.bss>:
 804b088:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
   8:	75 6e                	jne    78 <signal@plt-0x8048488>
   a:	74 75                	je     81 <signal@plt-0x804847f>
   c:	20 35 2e 34 2e 30    	and    BYTE PTR ds:0x302e342e,dh
  12:	2d 36 75 62 75       	sub    eax,0x75627536
  17:	6e                   	outs   dx,BYTE PTR ds:[esi]
  18:	74 75                	je     8f <signal@plt-0x8048471>
  1a:	31 7e 31             	xor    DWORD PTR [esi+0x31],edi
  1d:	36 2e 30 34 2e       	ss xor BYTE PTR cs:[esi+ebp*1],dh
  22:	31 30                	xor    DWORD PTR [eax],esi
  24:	29 20                	sub    DWORD PTR [eax],esp
  26:	35 2e 34 2e 30       	xor    eax,0x302e342e
  2b:	20 32                	and    BYTE PTR [edx],dh
  2d:	30 31                	xor    BYTE PTR [ecx],dh
  2f:	36 30 36             	xor    BYTE PTR ss:[esi],dh
  32:	30 39                	xor    BYTE PTR [ecx],bh
	...


shellsort:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	ins    BYTE PTR es:[rdi],dx
 23a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 246:	78 2d                	js     275 <_init-0x3ab>
 248:	78 38                	js     282 <_init-0x39e>
 24a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    al,0x0
 256:	00 00                	add    BYTE PTR [rax],al
 258:	10 00                	adc    BYTE PTR [rax],al
 25a:	00 00                	add    BYTE PTR [rax],al
 25c:	01 00                	add    DWORD PTR [rax],eax
 25e:	00 00                	add    BYTE PTR [rax],al
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push rbp
 263:	00 00                	add    BYTE PTR [rax],al
 265:	00 00                	add    BYTE PTR [rax],al
 267:	00 02                	add    BYTE PTR [rdx],al
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	00 06                	add    BYTE PTR [rsi],al
 26d:	00 00                	add    BYTE PTR [rax],al
 26f:	00 20                	add    BYTE PTR [rax],ah
 271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    al,0x0
 276:	00 00                	add    BYTE PTR [rax],al
 278:	14 00                	adc    al,0x0
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	03 00                	add    eax,DWORD PTR [rax]
 27e:	00 00                	add    BYTE PTR [rax],al
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push rbp
 283:	00 4f b5             	add    BYTE PTR [rdi-0x4b],cl
 286:	3d 4b a2 e4 f7       	cmp    eax,0xf7e4a24b
 28b:	7b f3                	jnp    280 <_init-0x3a0>
 28d:	1d b8 d5 64 94       	sbb    eax,0x9464d5b8
 292:	2a d6                	sub    dl,dh
 294:	f6 37                	div    BYTE PTR [rdi]
 296:	f3                   	repz
 297:	bb                   	.byte 0xbb

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	03 00                	add    eax,DWORD PTR [rax]
 29a:	00 00                	add    BYTE PTR [rax],al
 29c:	0a 00                	or     al,BYTE PTR [rax]
 29e:	00 00                	add    BYTE PTR [rax],al
 2a0:	01 00                	add    DWORD PTR [rax],eax
 2a2:	00 00                	add    BYTE PTR [rax],al
 2a4:	06                   	(bad)  
 2a5:	00 00                	add    BYTE PTR [rax],al
 2a7:	00 88 40 20 01 00    	add    BYTE PTR [rax+0x12040],cl
 2ad:	00 00                	add    BYTE PTR [rax],al
 2af:	08 0a                	or     BYTE PTR [rdx],cl
 2b1:	00 00                	add    BYTE PTR [rax],al
 2b3:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
 2b6:	00 00                	add    BYTE PTR [rax],al
 2b8:	00 00                	add    BYTE PTR [rax],al
 2ba:	00 00                	add    BYTE PTR [rax],al
 2bc:	42                   	rex.X
 2bd:	45 d5                	rex.RB (bad) 
 2bf:	ec                   	in     al,dx
 2c0:	bb e3 92 7c d9       	mov    ebx,0xd97c92e3
 2c5:	71 58                	jno    31f <_init-0x301>
 2c7:	1c                   	.byte 0x1c

Disassembly of section .dynsym:

00000000000002c8 <.dynsym>:
	...
 2e4:	03 00                	add    eax,DWORD PTR [rax]
 2e6:	0a 00                	or     al,BYTE PTR [rax]
 2e8:	20 06                	and    BYTE PTR [rsi],al
	...
 2f6:	00 00                	add    BYTE PTR [rax],al
 2f8:	5a                   	pop    rdx
 2f9:	00 00                	add    BYTE PTR [rax],al
 2fb:	00 20                	add    BYTE PTR [rax],ah
	...
 30d:	00 00                	add    BYTE PTR [rax],al
 30f:	00 0b                	add    BYTE PTR [rbx],cl
 311:	00 00                	add    BYTE PTR [rax],al
 313:	00 12                	add    BYTE PTR [rdx],dl
	...
 325:	00 00                	add    BYTE PTR [rax],al
 327:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 32a:	00 00                	add    BYTE PTR [rax],al
 32c:	12 00                	adc    al,BYTE PTR [rax]
	...
 33e:	00 00                	add    BYTE PTR [rax],al
 340:	30 00                	xor    BYTE PTR [rax],al
 342:	00 00                	add    BYTE PTR [rax],al
 344:	12 00                	adc    al,BYTE PTR [rax]
	...
 356:	00 00                	add    BYTE PTR [rax],al
 358:	76 00                	jbe    35a <_init-0x2c6>
 35a:	00 00                	add    BYTE PTR [rax],al
 35c:	20 00                	and    BYTE PTR [rax],al
	...
 36e:	00 00                	add    BYTE PTR [rax],al
 370:	85 00                	test   DWORD PTR [rax],eax
 372:	00 00                	add    BYTE PTR [rax],al
 374:	20 00                	and    BYTE PTR [rax],al
	...
 386:	00 00                	add    BYTE PTR [rax],al
 388:	99                   	cdq    
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 20                	add    BYTE PTR [rax],ah
	...
 39d:	00 00                	add    BYTE PTR [rax],al
 39f:	00 21                	add    BYTE PTR [rcx],ah
 3a1:	00 00                	add    BYTE PTR [rax],al
 3a3:	00 22                	add    BYTE PTR [rdx],ah
	...
 3b5:	00 00                	add    BYTE PTR [rax],al
 3b7:	00 42 00             	add    BYTE PTR [rdx+0x0],al
 3ba:	00 00                	add    BYTE PTR [rax],al
 3bc:	10 00                	adc    BYTE PTR [rax],al
 3be:	17                   	(bad)  
 3bf:	00 10                	add    BYTE PTR [rax],dl
 3c1:	10 20                	adc    BYTE PTR [rax],ah
	...
 3cf:	00 55 00             	add    BYTE PTR [rbp+0x0],dl
 3d2:	00 00                	add    BYTE PTR [rax],al
 3d4:	10 00                	adc    BYTE PTR [rax],al
 3d6:	18 00                	sbb    BYTE PTR [rax],al
 3d8:	18 10                	sbb    BYTE PTR [rax],dl
 3da:	20 00                	and    BYTE PTR [rax],al
	...
 3e8:	49 00 00             	rex.WB add BYTE PTR [r8],al
 3eb:	00 10                	add    BYTE PTR [rax],dl
 3ed:	00 18                	add    BYTE PTR [rax],bl
 3ef:	00 10                	add    BYTE PTR [rax],dl
 3f1:	10 20                	adc    BYTE PTR [rax],ah
	...

Disassembly of section .dynstr:

0000000000000400 <.dynstr>:
 400:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 404:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 406:	73 6f                	jae    477 <_init-0x1a9>
 408:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
 40d:	73 74                	jae    483 <_init-0x19d>
 40f:	61                   	(bad)  
 410:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 413:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 416:	5f                   	pop    rdi
 417:	66 61                	data16 (bad) 
 419:	69 6c 00 72 65 61 64 	imul   ebp,DWORD PTR [rax+rax*1+0x72],0x646165
 420:	00 
 421:	5f                   	pop    rdi
 422:	5f                   	pop    rdi
 423:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 426:	5f                   	pop    rdi
 427:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 42d:	7a 65                	jp     494 <_init-0x18c>
 42f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 432:	6c                   	ins    BYTE PTR es:[rdi],dx
 433:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 43a:	72 74                	jb     4b0 <_init-0x170>
 43c:	5f                   	pop    rdi
 43d:	6d                   	ins    DWORD PTR es:[rdi],dx
 43e:	61                   	(bad)  
 43f:	69 6e 00 5f 65 64 61 	imul   ebp,DWORD PTR [rsi+0x0],0x6164655f
 446:	74 61                	je     4a9 <_init-0x177>
 448:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 44b:	62 73                	(bad)  
 44d:	73 5f                	jae    4ae <_init-0x172>
 44f:	73 74                	jae    4c5 <_init-0x15b>
 451:	61                   	(bad)  
 452:	72 74                	jb     4c8 <_init-0x158>
 454:	00 5f 65             	add    BYTE PTR [rdi+0x65],bl
 457:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 458:	64 00 5f 49          	add    BYTE PTR fs:[rdi+0x49],bl
 45c:	54                   	push   rsp
 45d:	4d 5f                	rex.WRB pop r15
 45f:	64 65 72 65          	fs gs jb 4c8 <_init-0x158>
 463:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 46a:	4d 
 46b:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 46d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 46e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 46f:	65 54                	gs push rsp
 471:	61                   	(bad)  
 472:	62                   	(bad)  
 473:	6c                   	ins    BYTE PTR es:[rdi],dx
 474:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 478:	67 6d                	ins    DWORD PTR es:[edi],dx
 47a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 47b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 47c:	5f                   	pop    rdi
 47d:	73 74                	jae    4f3 <_init-0x12d>
 47f:	61                   	(bad)  
 480:	72 74                	jb     4f6 <_init-0x12a>
 482:	5f                   	pop    rdi
 483:	5f                   	pop    rdi
 484:	00 5f 4a             	add    BYTE PTR [rdi+0x4a],bl
 487:	76 5f                	jbe    4e8 <_init-0x138>
 489:	52                   	push   rdx
 48a:	65 67 69 73 74 65 72 	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
 491:	43 6c 
 493:	61                   	(bad)  
 494:	73 73                	jae    509 <_init-0x117>
 496:	65 73 00             	gs jae 499 <_init-0x187>
 499:	5f                   	pop    rdi
 49a:	49 54                	rex.WB push r12
 49c:	4d 5f                	rex.WRB pop r15
 49e:	72 65                	jb     505 <_init-0x11b>
 4a0:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 4a7:	4d 
 4a8:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 4aa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4ac:	65 54                	gs push rsp
 4ae:	61                   	(bad)  
 4af:	62                   	(bad)  
 4b0:	6c                   	ins    BYTE PTR es:[rdi],dx
 4b1:	65 00 47 4c          	add    BYTE PTR gs:[rdi+0x4c],al
 4b5:	49                   	rex.WB
 4b6:	42                   	rex.X
 4b7:	43 5f                	rex.XB pop r15
 4b9:	32 2e                	xor    ch,BYTE PTR [rsi]
 4bb:	32 2e                	xor    ch,BYTE PTR [rsi]
 4bd:	35 00 47 4c 49       	xor    eax,0x494c4700
 4c2:	42                   	rex.X
 4c3:	43 5f                	rex.XB pop r15
 4c5:	32 2e                	xor    ch,BYTE PTR [rsi]
 4c7:	34 00                	xor    al,0x0

Disassembly of section .gnu.version:

00000000000004ca <.gnu.version>:
 4ca:	00 00                	add    BYTE PTR [rax],al
 4cc:	00 00                	add    BYTE PTR [rax],al
 4ce:	00 00                	add    BYTE PTR [rax],al
 4d0:	02 00                	add    al,BYTE PTR [rax]
 4d2:	03 00                	add    eax,DWORD PTR [rax]
 4d4:	03 00                	add    eax,DWORD PTR [rax]
 4d6:	00 00                	add    BYTE PTR [rax],al
 4d8:	00 00                	add    BYTE PTR [rax],al
 4da:	00 00                	add    BYTE PTR [rax],al
 4dc:	03 00                	add    eax,DWORD PTR [rax]
 4de:	01 00                	add    DWORD PTR [rax],eax
 4e0:	01 00                	add    DWORD PTR [rax],eax
 4e2:	01 00                	add    DWORD PTR [rax],eax

Disassembly of section .gnu.version_r:

00000000000004e8 <.gnu.version_r>:
 4e8:	01 00                	add    DWORD PTR [rax],eax
 4ea:	02 00                	add    al,BYTE PTR [rax]
 4ec:	01 00                	add    DWORD PTR [rax],eax
 4ee:	00 00                	add    BYTE PTR [rax],al
 4f0:	10 00                	adc    BYTE PTR [rax],al
 4f2:	00 00                	add    BYTE PTR [rax],al
 4f4:	00 00                	add    BYTE PTR [rax],al
 4f6:	00 00                	add    BYTE PTR [rax],al
 4f8:	75 1a                	jne    514 <_init-0x10c>
 4fa:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 500:	b3 00                	mov    bl,0x0
 502:	00 00                	add    BYTE PTR [rax],al
 504:	10 00                	adc    BYTE PTR [rax],al
 506:	00 00                	add    BYTE PTR [rax],al
 508:	14 69                	adc    al,0x69
 50a:	69 0d 00 00 02 00 bf 	imul   ecx,DWORD PTR [rip+0x20000],0xbf        # 20514 <__FRAME_END__+0x1fa1c>
 511:	00 00 00 
 514:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000518 <.rela.dyn>:
 518:	d0 0d 20 00 00 00    	ror    BYTE PTR [rip+0x20],1        # 53e <_init-0xe2>
 51e:	00 00                	add    BYTE PTR [rax],al
 520:	08 00                	or     BYTE PTR [rax],al
 522:	00 00                	add    BYTE PTR [rax],al
 524:	00 00                	add    BYTE PTR [rax],al
 526:	00 00                	add    BYTE PTR [rax],al
 528:	80 07 00             	add    BYTE PTR [rdi],0x0
 52b:	00 00                	add    BYTE PTR [rax],al
 52d:	00 00                	add    BYTE PTR [rax],al
 52f:	00 d8                	add    al,bl
 531:	0d 20 00 00 00       	or     eax,0x20
 536:	00 00                	add    BYTE PTR [rax],al
 538:	08 00                	or     BYTE PTR [rax],al
 53a:	00 00                	add    BYTE PTR [rax],al
 53c:	00 00                	add    BYTE PTR [rax],al
 53e:	00 00                	add    BYTE PTR [rax],al
 540:	40 07                	rex (bad) 
 542:	00 00                	add    BYTE PTR [rax],al
 544:	00 00                	add    BYTE PTR [rax],al
 546:	00 00                	add    BYTE PTR [rax],al
 548:	08 10                	or     BYTE PTR [rax],dl
 54a:	20 00                	and    BYTE PTR [rax],al
 54c:	00 00                	add    BYTE PTR [rax],al
 54e:	00 00                	add    BYTE PTR [rax],al
 550:	08 00                	or     BYTE PTR [rax],al
 552:	00 00                	add    BYTE PTR [rax],al
 554:	00 00                	add    BYTE PTR [rax],al
 556:	00 00                	add    BYTE PTR [rax],al
 558:	08 10                	or     BYTE PTR [rax],dl
 55a:	20 00                	and    BYTE PTR [rax],al
 55c:	00 00                	add    BYTE PTR [rax],al
 55e:	00 00                	add    BYTE PTR [rax],al
 560:	c0 0f 20             	ror    BYTE PTR [rdi],0x20
 563:	00 00                	add    BYTE PTR [rax],al
 565:	00 00                	add    BYTE PTR [rax],al
 567:	00 06                	add    BYTE PTR [rsi],al
 569:	00 00                	add    BYTE PTR [rax],al
 56b:	00 02                	add    BYTE PTR [rdx],al
	...
 575:	00 00                	add    BYTE PTR [rax],al
 577:	00 c8                	add    al,cl
 579:	0f 20 00             	mov    rax,cr0
 57c:	00 00                	add    BYTE PTR [rax],al
 57e:	00 00                	add    BYTE PTR [rax],al
 580:	06                   	(bad)  
 581:	00 00                	add    BYTE PTR [rax],al
 583:	00 03                	add    BYTE PTR [rbx],al
	...
 58d:	00 00                	add    BYTE PTR [rax],al
 58f:	00 d0                	add    al,dl
 591:	0f 20 00             	mov    rax,cr0
 594:	00 00                	add    BYTE PTR [rax],al
 596:	00 00                	add    BYTE PTR [rax],al
 598:	06                   	(bad)  
 599:	00 00                	add    BYTE PTR [rax],al
 59b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 5a6:	00 00                	add    BYTE PTR [rax],al
 5a8:	d8 0f                	fmul   DWORD PTR [rdi]
 5aa:	20 00                	and    BYTE PTR [rax],al
 5ac:	00 00                	add    BYTE PTR [rax],al
 5ae:	00 00                	add    BYTE PTR [rax],al
 5b0:	06                   	(bad)  
 5b1:	00 00                	add    BYTE PTR [rax],al
 5b3:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5b9 <_init-0x67>
 5b9:	00 00                	add    BYTE PTR [rax],al
 5bb:	00 00                	add    BYTE PTR [rax],al
 5bd:	00 00                	add    BYTE PTR [rax],al
 5bf:	00 e0                	add    al,ah
 5c1:	0f 20 00             	mov    rax,cr0
 5c4:	00 00                	add    BYTE PTR [rax],al
 5c6:	00 00                	add    BYTE PTR [rax],al
 5c8:	06                   	(bad)  
 5c9:	00 00                	add    BYTE PTR [rax],al
 5cb:	00 06                	add    BYTE PTR [rsi],al
	...
 5d5:	00 00                	add    BYTE PTR [rax],al
 5d7:	00 e8                	add    al,ch
 5d9:	0f 20 00             	mov    rax,cr0
 5dc:	00 00                	add    BYTE PTR [rax],al
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	06                   	(bad)  
 5e1:	00 00                	add    BYTE PTR [rax],al
 5e3:	00 07                	add    BYTE PTR [rdi],al
	...
 5ed:	00 00                	add    BYTE PTR [rax],al
 5ef:	00 f0                	add    al,dh
 5f1:	0f 20 00             	mov    rax,cr0
 5f4:	00 00                	add    BYTE PTR [rax],al
 5f6:	00 00                	add    BYTE PTR [rax],al
 5f8:	06                   	(bad)  
 5f9:	00 00                	add    BYTE PTR [rax],al
 5fb:	00 08                	add    BYTE PTR [rax],cl
	...
 605:	00 00                	add    BYTE PTR [rax],al
 607:	00 f8                	add    al,bh
 609:	0f 20 00             	mov    rax,cr0
 60c:	00 00                	add    BYTE PTR [rax],al
 60e:	00 00                	add    BYTE PTR [rax],al
 610:	06                   	(bad)  
 611:	00 00                	add    BYTE PTR [rax],al
 613:	00 09                	add    BYTE PTR [rcx],cl
	...

Disassembly of section .init:

0000000000000620 <_init>:
 620:	48 83 ec 08          	sub    rsp,0x8
 624:	48 8b 05 b5 09 20 00 	mov    rax,QWORD PTR [rip+0x2009b5]        # 200fe0 <_GLOBAL_OFFSET_TABLE_+0x38>
 62b:	48 85 c0             	test   rax,rax
 62e:	74 05                	je     635 <_init+0x15>
 630:	e8 33 00 00 00       	call   668 <_init+0x48>
 635:	48 83 c4 08          	add    rsp,0x8
 639:	c3                   	ret    

Disassembly of section .plt:

0000000000000640 <.plt>:
 640:	ff 35 6a 09 20 00    	push   QWORD PTR [rip+0x20096a]        # 200fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
 646:	ff 25 6c 09 20 00    	jmp    QWORD PTR [rip+0x20096c]        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
 64c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

Disassembly of section .plt.got:

0000000000000650 <.plt.got>:
 650:	ff 25 72 09 20 00    	jmp    QWORD PTR [rip+0x200972]        # 200fc8 <_GLOBAL_OFFSET_TABLE_+0x20>
 656:	66 90                	xchg   ax,ax
 658:	ff 25 72 09 20 00    	jmp    QWORD PTR [rip+0x200972]        # 200fd0 <_GLOBAL_OFFSET_TABLE_+0x28>
 65e:	66 90                	xchg   ax,ax
 660:	ff 25 72 09 20 00    	jmp    QWORD PTR [rip+0x200972]        # 200fd8 <_GLOBAL_OFFSET_TABLE_+0x30>
 666:	66 90                	xchg   ax,ax
 668:	ff 25 72 09 20 00    	jmp    QWORD PTR [rip+0x200972]        # 200fe0 <_GLOBAL_OFFSET_TABLE_+0x38>
 66e:	66 90                	xchg   ax,ax
 670:	ff 25 82 09 20 00    	jmp    QWORD PTR [rip+0x200982]        # 200ff8 <_GLOBAL_OFFSET_TABLE_+0x50>
 676:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000000680 <_start>:
 680:	31 ed                	xor    ebp,ebp
 682:	49 89 d1             	mov    r9,rdx
 685:	5e                   	pop    rsi
 686:	48 89 e2             	mov    rdx,rsp
 689:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
 68d:	50                   	push   rax
 68e:	54                   	push   rsp
 68f:	4c 8d 05 2a 03 00 00 	lea    r8,[rip+0x32a]        # 9c0 <__libc_csu_fini>
 696:	48 8d 0d b3 02 00 00 	lea    rcx,[rip+0x2b3]        # 950 <__libc_csu_init>
 69d:	48 8d 3d 0c 01 00 00 	lea    rdi,[rip+0x10c]        # 7b0 <main>
 6a4:	e8 b7 ff ff ff       	call   660 <_init+0x40>
 6a9:	f4                   	hlt    
 6aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000006b0 <deregister_tm_clones>:
 6b0:	48 8d 3d 59 09 20 00 	lea    rdi,[rip+0x200959]        # 201010 <__TMC_END__>
 6b7:	48 8d 05 59 09 20 00 	lea    rax,[rip+0x200959]        # 201017 <__TMC_END__+0x7>
 6be:	55                   	push   rbp
 6bf:	48 29 f8             	sub    rax,rdi
 6c2:	48 89 e5             	mov    rbp,rsp
 6c5:	48 83 f8 0e          	cmp    rax,0xe
 6c9:	76 15                	jbe    6e0 <deregister_tm_clones+0x30>
 6cb:	48 8b 05 ee 08 20 00 	mov    rax,QWORD PTR [rip+0x2008ee]        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x18>
 6d2:	48 85 c0             	test   rax,rax
 6d5:	74 09                	je     6e0 <deregister_tm_clones+0x30>
 6d7:	5d                   	pop    rbp
 6d8:	ff e0                	jmp    rax
 6da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
 6e0:	5d                   	pop    rbp
 6e1:	c3                   	ret    
 6e2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 6e6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 6ed:	00 00 00 

00000000000006f0 <register_tm_clones>:
 6f0:	48 8d 3d 19 09 20 00 	lea    rdi,[rip+0x200919]        # 201010 <__TMC_END__>
 6f7:	48 8d 35 12 09 20 00 	lea    rsi,[rip+0x200912]        # 201010 <__TMC_END__>
 6fe:	55                   	push   rbp
 6ff:	48 29 fe             	sub    rsi,rdi
 702:	48 89 e5             	mov    rbp,rsp
 705:	48 c1 fe 03          	sar    rsi,0x3
 709:	48 89 f0             	mov    rax,rsi
 70c:	48 c1 e8 3f          	shr    rax,0x3f
 710:	48 01 c6             	add    rsi,rax
 713:	48 d1 fe             	sar    rsi,1
 716:	74 18                	je     730 <register_tm_clones+0x40>
 718:	48 8b 05 d1 08 20 00 	mov    rax,QWORD PTR [rip+0x2008d1]        # 200ff0 <_GLOBAL_OFFSET_TABLE_+0x48>
 71f:	48 85 c0             	test   rax,rax
 722:	74 0c                	je     730 <register_tm_clones+0x40>
 724:	5d                   	pop    rbp
 725:	ff e0                	jmp    rax
 727:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 72e:	00 00 
 730:	5d                   	pop    rbp
 731:	c3                   	ret    
 732:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 736:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 73d:	00 00 00 

0000000000000740 <__do_global_dtors_aux>:
 740:	80 3d c9 08 20 00 00 	cmp    BYTE PTR [rip+0x2008c9],0x0        # 201010 <__TMC_END__>
 747:	75 27                	jne    770 <__do_global_dtors_aux+0x30>
 749:	48 83 3d a7 08 20 00 	cmp    QWORD PTR [rip+0x2008a7],0x0        # 200ff8 <_GLOBAL_OFFSET_TABLE_+0x50>
 750:	00 
 751:	55                   	push   rbp
 752:	48 89 e5             	mov    rbp,rsp
 755:	74 0c                	je     763 <__do_global_dtors_aux+0x23>
 757:	48 8b 3d aa 08 20 00 	mov    rdi,QWORD PTR [rip+0x2008aa]        # 201008 <__dso_handle>
 75e:	e8 0d ff ff ff       	call   670 <_init+0x50>
 763:	e8 48 ff ff ff       	call   6b0 <deregister_tm_clones>
 768:	5d                   	pop    rbp
 769:	c6 05 a0 08 20 00 01 	mov    BYTE PTR [rip+0x2008a0],0x1        # 201010 <__TMC_END__>
 770:	f3 c3                	repz ret 
 772:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 776:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 77d:	00 00 00 

0000000000000780 <frame_dummy>:
 780:	48 8d 3d 59 06 20 00 	lea    rdi,[rip+0x200659]        # 200de0 <__JCR_END__>
 787:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
 78b:	75 0b                	jne    798 <frame_dummy+0x18>
 78d:	e9 5e ff ff ff       	jmp    6f0 <register_tm_clones>
 792:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
 798:	48 8b 05 49 08 20 00 	mov    rax,QWORD PTR [rip+0x200849]        # 200fe8 <_GLOBAL_OFFSET_TABLE_+0x40>
 79f:	48 85 c0             	test   rax,rax
 7a2:	74 e9                	je     78d <frame_dummy+0xd>
 7a4:	55                   	push   rbp
 7a5:	48 89 e5             	mov    rbp,rsp
 7a8:	ff d0                	call   rax
 7aa:	5d                   	pop    rbp
 7ab:	e9 40 ff ff ff       	jmp    6f0 <register_tm_clones>

00000000000007b0 <main>:
 7b0:	55                   	push   rbp
 7b1:	48 89 e5             	mov    rbp,rsp
 7b4:	48 81 ec 40 27 00 00 	sub    rsp,0x2740
 7bb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
 7c2:	00 00 
 7c4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 7c8:	31 c0                	xor    eax,eax
 7ca:	48 8d 85 e0 d8 ff ff 	lea    rax,[rbp-0x2720]
 7d1:	ba 10 27 00 00       	mov    edx,0x2710
 7d6:	48 89 c6             	mov    rsi,rax
 7d9:	bf 00 00 00 00       	mov    edi,0x0
 7de:	e8 75 fe ff ff       	call   658 <_init+0x38>
 7e3:	89 85 dc d8 ff ff    	mov    DWORD PTR [rbp-0x2724],eax
 7e9:	c7 85 cc d8 ff ff 00 	mov    DWORD PTR [rbp-0x2734],0x0
 7f0:	00 00 00 
 7f3:	eb 25                	jmp    81a <main+0x6a>
 7f5:	8b 85 cc d8 ff ff    	mov    eax,DWORD PTR [rbp-0x2734]
 7fb:	48 98                	cdqe   
 7fd:	0f b6 84 05 e0 d8 ff 	movzx  eax,BYTE PTR [rbp+rax*1-0x2720]
 804:	ff 
 805:	3c f8                	cmp    al,0xf8
 807:	76 0a                	jbe    813 <main+0x63>
 809:	b8 ff ff ff ff       	mov    eax,0xffffffff
 80e:	e9 26 01 00 00       	jmp    939 <main+0x189>
 813:	83 85 cc d8 ff ff 01 	add    DWORD PTR [rbp-0x2734],0x1
 81a:	8b 85 cc d8 ff ff    	mov    eax,DWORD PTR [rbp-0x2734]
 820:	3b 85 dc d8 ff ff    	cmp    eax,DWORD PTR [rbp-0x2724]
 826:	7c cd                	jl     7f5 <main+0x45>
 828:	8b 85 dc d8 ff ff    	mov    eax,DWORD PTR [rbp-0x2724]
 82e:	89 85 d0 d8 ff ff    	mov    DWORD PTR [rbp-0x2730],eax
 834:	e9 d6 00 00 00       	jmp    90f <main+0x15f>
 839:	8b 85 d0 d8 ff ff    	mov    eax,DWORD PTR [rbp-0x2730]
 83f:	89 85 d4 d8 ff ff    	mov    DWORD PTR [rbp-0x272c],eax
 845:	e9 9e 00 00 00       	jmp    8e8 <main+0x138>
 84a:	8b 85 d4 d8 ff ff    	mov    eax,DWORD PTR [rbp-0x272c]
 850:	48 98                	cdqe   
 852:	0f b6 84 05 e0 d8 ff 	movzx  eax,BYTE PTR [rbp+rax*1-0x2720]
 859:	ff 
 85a:	88 85 cb d8 ff ff    	mov    BYTE PTR [rbp-0x2735],al
 860:	8b 85 d4 d8 ff ff    	mov    eax,DWORD PTR [rbp-0x272c]
 866:	89 85 d8 d8 ff ff    	mov    DWORD PTR [rbp-0x2728],eax
 86c:	eb 31                	jmp    89f <main+0xef>
 86e:	8b 85 d8 d8 ff ff    	mov    eax,DWORD PTR [rbp-0x2728]
 874:	2b 85 d0 d8 ff ff    	sub    eax,DWORD PTR [rbp-0x2730]
 87a:	48 98                	cdqe   
 87c:	0f b6 94 05 e0 d8 ff 	movzx  edx,BYTE PTR [rbp+rax*1-0x2720]
 883:	ff 
 884:	8b 85 d8 d8 ff ff    	mov    eax,DWORD PTR [rbp-0x2728]
 88a:	48 98                	cdqe   
 88c:	88 94 05 e0 d8 ff ff 	mov    BYTE PTR [rbp+rax*1-0x2720],dl
 893:	8b 85 d0 d8 ff ff    	mov    eax,DWORD PTR [rbp-0x2730]
 899:	29 85 d8 d8 ff ff    	sub    DWORD PTR [rbp-0x2728],eax
 89f:	8b 85 d8 d8 ff ff    	mov    eax,DWORD PTR [rbp-0x2728]
 8a5:	3b 85 d0 d8 ff ff    	cmp    eax,DWORD PTR [rbp-0x2730]
 8ab:	7c 1e                	jl     8cb <main+0x11b>
 8ad:	8b 85 d8 d8 ff ff    	mov    eax,DWORD PTR [rbp-0x2728]
 8b3:	2b 85 d0 d8 ff ff    	sub    eax,DWORD PTR [rbp-0x2730]
 8b9:	48 98                	cdqe   
 8bb:	0f b6 84 05 e0 d8 ff 	movzx  eax,BYTE PTR [rbp+rax*1-0x2720]
 8c2:	ff 
 8c3:	3a 85 cb d8 ff ff    	cmp    al,BYTE PTR [rbp-0x2735]
 8c9:	72 a3                	jb     86e <main+0xbe>
 8cb:	8b 85 d8 d8 ff ff    	mov    eax,DWORD PTR [rbp-0x2728]
 8d1:	48 98                	cdqe   
 8d3:	0f b6 95 cb d8 ff ff 	movzx  edx,BYTE PTR [rbp-0x2735]
 8da:	88 94 05 e0 d8 ff ff 	mov    BYTE PTR [rbp+rax*1-0x2720],dl
 8e1:	83 85 d4 d8 ff ff 01 	add    DWORD PTR [rbp-0x272c],0x1
 8e8:	8b 85 d4 d8 ff ff    	mov    eax,DWORD PTR [rbp-0x272c]
 8ee:	3b 85 dc d8 ff ff    	cmp    eax,DWORD PTR [rbp-0x2724]
 8f4:	0f 8c 50 ff ff ff    	jl     84a <main+0x9a>
 8fa:	8b 85 d0 d8 ff ff    	mov    eax,DWORD PTR [rbp-0x2730]
 900:	89 c2                	mov    edx,eax
 902:	c1 ea 1f             	shr    edx,0x1f
 905:	01 d0                	add    eax,edx
 907:	d1 f8                	sar    eax,1
 909:	89 85 d0 d8 ff ff    	mov    DWORD PTR [rbp-0x2730],eax
 90f:	83 bd d0 d8 ff ff 00 	cmp    DWORD PTR [rbp-0x2730],0x0
 916:	0f 8f 1d ff ff ff    	jg     839 <main+0x89>
 91c:	48 8d 95 e0 d8 ff ff 	lea    rdx,[rbp-0x2720]
 923:	be 00 00 00 00       	mov    esi,0x0
 928:	bf 00 00 00 00       	mov    edi,0x0
 92d:	b8 00 00 00 00       	mov    eax,0x0
 932:	ff d2                	call   rdx
 934:	b8 00 00 00 00       	mov    eax,0x0
 939:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
 93d:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
 944:	00 00 
 946:	74 05                	je     94d <main+0x19d>
 948:	e8 03 fd ff ff       	call   650 <_init+0x30>
 94d:	c9                   	leave  
 94e:	c3                   	ret    
 94f:	90                   	nop

0000000000000950 <__libc_csu_init>:
 950:	41 57                	push   r15
 952:	41 56                	push   r14
 954:	41 89 ff             	mov    r15d,edi
 957:	41 55                	push   r13
 959:	41 54                	push   r12
 95b:	4c 8d 25 6e 04 20 00 	lea    r12,[rip+0x20046e]        # 200dd0 <__frame_dummy_init_array_entry>
 962:	55                   	push   rbp
 963:	48 8d 2d 6e 04 20 00 	lea    rbp,[rip+0x20046e]        # 200dd8 <__init_array_end>
 96a:	53                   	push   rbx
 96b:	49 89 f6             	mov    r14,rsi
 96e:	49 89 d5             	mov    r13,rdx
 971:	4c 29 e5             	sub    rbp,r12
 974:	48 83 ec 08          	sub    rsp,0x8
 978:	48 c1 fd 03          	sar    rbp,0x3
 97c:	e8 9f fc ff ff       	call   620 <_init>
 981:	48 85 ed             	test   rbp,rbp
 984:	74 20                	je     9a6 <__libc_csu_init+0x56>
 986:	31 db                	xor    ebx,ebx
 988:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 98f:	00 
 990:	4c 89 ea             	mov    rdx,r13
 993:	4c 89 f6             	mov    rsi,r14
 996:	44 89 ff             	mov    edi,r15d
 999:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
 99d:	48 83 c3 01          	add    rbx,0x1
 9a1:	48 39 eb             	cmp    rbx,rbp
 9a4:	75 ea                	jne    990 <__libc_csu_init+0x40>
 9a6:	48 83 c4 08          	add    rsp,0x8
 9aa:	5b                   	pop    rbx
 9ab:	5d                   	pop    rbp
 9ac:	41 5c                	pop    r12
 9ae:	41 5d                	pop    r13
 9b0:	41 5e                	pop    r14
 9b2:	41 5f                	pop    r15
 9b4:	c3                   	ret    
 9b5:	90                   	nop
 9b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 9bd:	00 00 00 

00000000000009c0 <__libc_csu_fini>:
 9c0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000000009c4 <_fini>:
 9c4:	48 83 ec 08          	sub    rsp,0x8
 9c8:	48 83 c4 08          	add    rsp,0x8
 9cc:	c3                   	ret    

Disassembly of section .rodata:

00000000000009d0 <_IO_stdin_used>:
 9d0:	01 00                	add    DWORD PTR [rax],eax
 9d2:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .eh_frame_hdr:

00000000000009d4 <__GNU_EH_FRAME_HDR>:
 9d4:	01 1b                	add    DWORD PTR [rbx],ebx
 9d6:	03 3b                	add    edi,DWORD PTR [rbx]
 9d8:	30 00                	xor    BYTE PTR [rax],al
 9da:	00 00                	add    BYTE PTR [rax],al
 9dc:	05 00 00 00 6c       	add    eax,0x6c000000
 9e1:	fc                   	cld    
 9e2:	ff                   	(bad)  
 9e3:	ff                   	(bad)  
 9e4:	7c 00                	jl     9e6 <__GNU_EH_FRAME_HDR+0x12>
 9e6:	00 00                	add    BYTE PTR [rax],al
 9e8:	ac                   	lods   al,BYTE PTR ds:[rsi]
 9e9:	fc                   	cld    
 9ea:	ff                   	(bad)  
 9eb:	ff 4c 00 00          	dec    DWORD PTR [rax+rax*1+0x0]
 9ef:	00 dc                	add    ah,bl
 9f1:	fd                   	std    
 9f2:	ff                   	(bad)  
 9f3:	ff a4 00 00 00 7c ff 	jmp    QWORD PTR [rax+rax*1-0x840000]
 9fa:	ff                   	(bad)  
 9fb:	ff c4                	inc    esp
 9fd:	00 00                	add    BYTE PTR [rax],al
 9ff:	00 ec                	add    ah,ch
 a01:	ff                   	(bad)  
 a02:	ff                   	(bad)  
 a03:	ff 0c 01             	dec    DWORD PTR [rcx+rax*1]
	...

Disassembly of section .eh_frame:

0000000000000a08 <__FRAME_END__-0xf0>:
 a08:	14 00                	adc    al,0x0
 a0a:	00 00                	add    BYTE PTR [rax],al
 a0c:	00 00                	add    BYTE PTR [rax],al
 a0e:	00 00                	add    BYTE PTR [rax],al
 a10:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 a13:	00 01                	add    BYTE PTR [rcx],al
 a15:	78 10                	js     a27 <__GNU_EH_FRAME_HDR+0x53>
 a17:	01 1b                	add    DWORD PTR [rbx],ebx
 a19:	0c 07                	or     al,0x7
 a1b:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
 a21:	00 00                	add    BYTE PTR [rax],al
 a23:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 a26:	00 00                	add    BYTE PTR [rax],al
 a28:	58                   	pop    rax
 a29:	fc                   	cld    
 a2a:	ff                   	(bad)  
 a2b:	ff 2a                	jmp    FWORD PTR [rdx]
	...
 a35:	00 00                	add    BYTE PTR [rax],al
 a37:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
 a3a:	00 00                	add    BYTE PTR [rax],al
 a3c:	00 00                	add    BYTE PTR [rax],al
 a3e:	00 00                	add    BYTE PTR [rax],al
 a40:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 a43:	00 01                	add    BYTE PTR [rcx],al
 a45:	78 10                	js     a57 <__GNU_EH_FRAME_HDR+0x83>
 a47:	01 1b                	add    DWORD PTR [rbx],ebx
 a49:	0c 07                	or     al,0x7
 a4b:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
 a51:	00 00                	add    BYTE PTR [rax],al
 a53:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 a56:	00 00                	add    BYTE PTR [rax],al
 a58:	e8 fb ff ff 10       	call   11000a58 <_end+0x10dffa40>
 a5d:	00 00                	add    BYTE PTR [rax],al
 a5f:	00 00                	add    BYTE PTR [rax],al
 a61:	0e                   	(bad)  
 a62:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
 a65:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
 a68:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
 a6b:	80 00 3f             	add    BYTE PTR [rax],0x3f
 a6e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
 a70:	2a 33                	sub    dh,BYTE PTR [rbx]
 a72:	24 22                	and    al,0x22
 a74:	00 00                	add    BYTE PTR [rax],al
 a76:	00 00                	add    BYTE PTR [rax],al
 a78:	1c 00                	sbb    al,0x0
 a7a:	00 00                	add    BYTE PTR [rax],al
 a7c:	44 00 00             	add    BYTE PTR [rax],r8b
 a7f:	00 30                	add    BYTE PTR [rax],dh
 a81:	fd                   	std    
 a82:	ff                   	(bad)  
 a83:	ff 9f 01 00 00 00    	call   FWORD PTR [rdi+0x1]
 a89:	41 0e                	rex.B (bad) 
 a8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 a91:	03 9a 01 0c 07 08    	add    ebx,DWORD PTR [rdx+0x8070c01]
 a97:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
 a9b:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
 a9f:	00 b0 fe ff ff 65    	add    BYTE PTR [rax+0x65fffffe],dh
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 00                	add    BYTE PTR [rax],al
 aa9:	42 0e                	rex.X (bad) 
 aab:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
 ab1:	8e 03                	mov    es,WORD PTR [rbx]
 ab3:	45 0e                	rex.RB (bad) 
 ab5:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
 abb:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86301909 <_end+0xffffffff861008f1>
 ac1:	06                   	(bad)  
 ac2:	48 0e                	rex.W (bad) 
 ac4:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
 aca:	72 0e                	jb     ada <__GNU_EH_FRAME_HDR+0x106>
 acc:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
 acf:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
 ad2:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
 ad5:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
 ad8:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
 adb:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
 ade:	08 00                	or     BYTE PTR [rax],al
 ae0:	14 00                	adc    al,0x0
 ae2:	00 00                	add    BYTE PTR [rax],al
 ae4:	ac                   	lods   al,BYTE PTR ds:[rsi]
 ae5:	00 00                	add    BYTE PTR [rax],al
 ae7:	00 d8                	add    al,bl
 ae9:	fe                   	(bad)  
 aea:	ff                   	(bad)  
 aeb:	ff 02                	inc    DWORD PTR [rdx]
	...

0000000000000af8 <__FRAME_END__>:
 af8:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000200dd0 <__frame_dummy_init_array_entry>:
  200dd0:	80 07 00             	add    BYTE PTR [rdi],0x0
  200dd3:	00 00                	add    BYTE PTR [rax],al
  200dd5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000200dd8 <__do_global_dtors_aux_fini_array_entry>:
  200dd8:	40 07                	rex (bad) 
  200dda:	00 00                	add    BYTE PTR [rax],al
  200ddc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .jcr:

0000000000200de0 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000200de8 <_DYNAMIC>:
  200de8:	01 00                	add    DWORD PTR [rax],eax
  200dea:	00 00                	add    BYTE PTR [rax],al
  200dec:	00 00                	add    BYTE PTR [rax],al
  200dee:	00 00                	add    BYTE PTR [rax],al
  200df0:	01 00                	add    DWORD PTR [rax],eax
  200df2:	00 00                	add    BYTE PTR [rax],al
  200df4:	00 00                	add    BYTE PTR [rax],al
  200df6:	00 00                	add    BYTE PTR [rax],al
  200df8:	0c 00                	or     al,0x0
  200dfa:	00 00                	add    BYTE PTR [rax],al
  200dfc:	00 00                	add    BYTE PTR [rax],al
  200dfe:	00 00                	add    BYTE PTR [rax],al
  200e00:	20 06                	and    BYTE PTR [rsi],al
  200e02:	00 00                	add    BYTE PTR [rax],al
  200e04:	00 00                	add    BYTE PTR [rax],al
  200e06:	00 00                	add    BYTE PTR [rax],al
  200e08:	0d 00 00 00 00       	or     eax,0x0
  200e0d:	00 00                	add    BYTE PTR [rax],al
  200e0f:	00 c4                	add    ah,al
  200e11:	09 00                	or     DWORD PTR [rax],eax
  200e13:	00 00                	add    BYTE PTR [rax],al
  200e15:	00 00                	add    BYTE PTR [rax],al
  200e17:	00 19                	add    BYTE PTR [rcx],bl
  200e19:	00 00                	add    BYTE PTR [rax],al
  200e1b:	00 00                	add    BYTE PTR [rax],al
  200e1d:	00 00                	add    BYTE PTR [rax],al
  200e1f:	00 d0                	add    al,dl
  200e21:	0d 20 00 00 00       	or     eax,0x20
  200e26:	00 00                	add    BYTE PTR [rax],al
  200e28:	1b 00                	sbb    eax,DWORD PTR [rax]
  200e2a:	00 00                	add    BYTE PTR [rax],al
  200e2c:	00 00                	add    BYTE PTR [rax],al
  200e2e:	00 00                	add    BYTE PTR [rax],al
  200e30:	08 00                	or     BYTE PTR [rax],al
  200e32:	00 00                	add    BYTE PTR [rax],al
  200e34:	00 00                	add    BYTE PTR [rax],al
  200e36:	00 00                	add    BYTE PTR [rax],al
  200e38:	1a 00                	sbb    al,BYTE PTR [rax]
  200e3a:	00 00                	add    BYTE PTR [rax],al
  200e3c:	00 00                	add    BYTE PTR [rax],al
  200e3e:	00 00                	add    BYTE PTR [rax],al
  200e40:	d8 0d 20 00 00 00    	fmul   DWORD PTR [rip+0x20]        # 200e66 <_DYNAMIC+0x7e>
  200e46:	00 00                	add    BYTE PTR [rax],al
  200e48:	1c 00                	sbb    al,0x0
  200e4a:	00 00                	add    BYTE PTR [rax],al
  200e4c:	00 00                	add    BYTE PTR [rax],al
  200e4e:	00 00                	add    BYTE PTR [rax],al
  200e50:	08 00                	or     BYTE PTR [rax],al
  200e52:	00 00                	add    BYTE PTR [rax],al
  200e54:	00 00                	add    BYTE PTR [rax],al
  200e56:	00 00                	add    BYTE PTR [rax],al
  200e58:	f5                   	cmc    
  200e59:	fe                   	(bad)  
  200e5a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200e5d:	00 00                	add    BYTE PTR [rax],al
  200e5f:	00 98 02 00 00 00    	add    BYTE PTR [rax+0x2],bl
  200e65:	00 00                	add    BYTE PTR [rax],al
  200e67:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 200e6d <_DYNAMIC+0x85>
  200e6d:	00 00                	add    BYTE PTR [rax],al
  200e6f:	00 00                	add    BYTE PTR [rax],al
  200e71:	04 00                	add    al,0x0
  200e73:	00 00                	add    BYTE PTR [rax],al
  200e75:	00 00                	add    BYTE PTR [rax],al
  200e77:	00 06                	add    BYTE PTR [rsi],al
  200e79:	00 00                	add    BYTE PTR [rax],al
  200e7b:	00 00                	add    BYTE PTR [rax],al
  200e7d:	00 00                	add    BYTE PTR [rax],al
  200e7f:	00 c8                	add    al,cl
  200e81:	02 00                	add    al,BYTE PTR [rax]
  200e83:	00 00                	add    BYTE PTR [rax],al
  200e85:	00 00                	add    BYTE PTR [rax],al
  200e87:	00 0a                	add    BYTE PTR [rdx],cl
  200e89:	00 00                	add    BYTE PTR [rax],al
  200e8b:	00 00                	add    BYTE PTR [rax],al
  200e8d:	00 00                	add    BYTE PTR [rax],al
  200e8f:	00 c9                	add    cl,cl
  200e91:	00 00                	add    BYTE PTR [rax],al
  200e93:	00 00                	add    BYTE PTR [rax],al
  200e95:	00 00                	add    BYTE PTR [rax],al
  200e97:	00 0b                	add    BYTE PTR [rbx],cl
  200e99:	00 00                	add    BYTE PTR [rax],al
  200e9b:	00 00                	add    BYTE PTR [rax],al
  200e9d:	00 00                	add    BYTE PTR [rax],al
  200e9f:	00 18                	add    BYTE PTR [rax],bl
  200ea1:	00 00                	add    BYTE PTR [rax],al
  200ea3:	00 00                	add    BYTE PTR [rax],al
  200ea5:	00 00                	add    BYTE PTR [rax],al
  200ea7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 200ead <_DYNAMIC+0xc5>
	...
  200eb5:	00 00                	add    BYTE PTR [rax],al
  200eb7:	00 03                	add    BYTE PTR [rbx],al
  200eb9:	00 00                	add    BYTE PTR [rax],al
  200ebb:	00 00                	add    BYTE PTR [rax],al
  200ebd:	00 00                	add    BYTE PTR [rax],al
  200ebf:	00 a8 0f 20 00 00    	add    BYTE PTR [rax+0x200f],ch
  200ec5:	00 00                	add    BYTE PTR [rax],al
  200ec7:	00 07                	add    BYTE PTR [rdi],al
  200ec9:	00 00                	add    BYTE PTR [rax],al
  200ecb:	00 00                	add    BYTE PTR [rax],al
  200ecd:	00 00                	add    BYTE PTR [rax],al
  200ecf:	00 18                	add    BYTE PTR [rax],bl
  200ed1:	05 00 00 00 00       	add    eax,0x0
  200ed6:	00 00                	add    BYTE PTR [rax],al
  200ed8:	08 00                	or     BYTE PTR [rax],al
  200eda:	00 00                	add    BYTE PTR [rax],al
  200edc:	00 00                	add    BYTE PTR [rax],al
  200ede:	00 00                	add    BYTE PTR [rax],al
  200ee0:	08 01                	or     BYTE PTR [rcx],al
  200ee2:	00 00                	add    BYTE PTR [rax],al
  200ee4:	00 00                	add    BYTE PTR [rax],al
  200ee6:	00 00                	add    BYTE PTR [rax],al
  200ee8:	09 00                	or     DWORD PTR [rax],eax
  200eea:	00 00                	add    BYTE PTR [rax],al
  200eec:	00 00                	add    BYTE PTR [rax],al
  200eee:	00 00                	add    BYTE PTR [rax],al
  200ef0:	18 00                	sbb    BYTE PTR [rax],al
  200ef2:	00 00                	add    BYTE PTR [rax],al
  200ef4:	00 00                	add    BYTE PTR [rax],al
  200ef6:	00 00                	add    BYTE PTR [rax],al
  200ef8:	18 00                	sbb    BYTE PTR [rax],al
	...
  200f06:	00 00                	add    BYTE PTR [rax],al
  200f08:	fb                   	sti    
  200f09:	ff                   	(bad)  
  200f0a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f0d:	00 00                	add    BYTE PTR [rax],al
  200f0f:	00 01                	add    BYTE PTR [rcx],al
  200f11:	00 00                	add    BYTE PTR [rax],al
  200f13:	08 00                	or     BYTE PTR [rax],al
  200f15:	00 00                	add    BYTE PTR [rax],al
  200f17:	00 fe                	add    dh,bh
  200f19:	ff                   	(bad)  
  200f1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f1d:	00 00                	add    BYTE PTR [rax],al
  200f1f:	00 e8                	add    al,ch
  200f21:	04 00                	add    al,0x0
  200f23:	00 00                	add    BYTE PTR [rax],al
  200f25:	00 00                	add    BYTE PTR [rax],al
  200f27:	00 ff                	add    bh,bh
  200f29:	ff                   	(bad)  
  200f2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f2d:	00 00                	add    BYTE PTR [rax],al
  200f2f:	00 01                	add    BYTE PTR [rcx],al
  200f31:	00 00                	add    BYTE PTR [rax],al
  200f33:	00 00                	add    BYTE PTR [rax],al
  200f35:	00 00                	add    BYTE PTR [rax],al
  200f37:	00 f0                	add    al,dh
  200f39:	ff                   	(bad)  
  200f3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f3d:	00 00                	add    BYTE PTR [rax],al
  200f3f:	00 ca                	add    dl,cl
  200f41:	04 00                	add    al,0x0
  200f43:	00 00                	add    BYTE PTR [rax],al
  200f45:	00 00                	add    BYTE PTR [rax],al
  200f47:	00 f9                	add    cl,bh
  200f49:	ff                   	(bad)  
  200f4a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f4d:	00 00                	add    BYTE PTR [rax],al
  200f4f:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000200fa8 <_GLOBAL_OFFSET_TABLE_>:
  200fa8:	e8 0d 20 00 00       	call   202fba <_end+0x1fa2>
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     BYTE PTR [rax],dl
  20100a:	20 00                	and    BYTE PTR [rax],al
  20100c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x5a8>
   a:	74 75                	je     81 <_init-0x59f>
   c:	20 35 2e 34 2e 30    	and    BYTE PTR [rip+0x302e342e],dh        # 302e3440 <_end+0x300e2428>
  12:	2d 36 75 62 75       	sub    eax,0x75627536
  17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  18:	74 75                	je     8f <_init-0x591>
  1a:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1d:	36 2e 30 34 2e       	ss xor BYTE PTR cs:[rsi+rbp*1],dh
  22:	31 30                	xor    DWORD PTR [rax],esi
  24:	29 20                	sub    DWORD PTR [rax],esp
  26:	35 2e 34 2e 30       	xor    eax,0x302e342e
  2b:	20 32                	and    BYTE PTR [rdx],dh
  2d:	30 31                	xor    BYTE PTR [rcx],dh
  2f:	36 30 36             	xor    BYTE PTR ss:[rsi],dh
  32:	30 39                	xor    BYTE PTR [rcx],bh
	...
